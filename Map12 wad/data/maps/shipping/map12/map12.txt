#PROP_text
type: string = "PROP"
version: u32 = 3
linked: list[string] = {}
entries: map[hash,embed] = {
    "Characters/SRU_OrderMinionMelee" = Character {
        name: string = "SRU_OrderMinionMelee"
    }
    "Characters/HA_AP_ChaosTurretTutorial" = Character {
        name: string = "HA_AP_ChaosTurretTutorial"
    }
    "Characters/Bw_Bottle" = Character {
        name: string = "Bw_Bottle"
    }
    "Characters/HA_AP_ShpNorth" = Character {
        name: string = "HA_AP_ShpNorth"
    }
    "Characters/HA_AP_OrderTurretRubble" = Character {
        name: string = "HA_AP_OrderTurretRubble"
    }
    "Characters/HA_ChaosMinionRanged" = Character {
        name: string = "HA_ChaosMinionRanged"
    }
    "Characters/SRU_ChaosMinionSuper" = Character {
        name: string = "SRU_ChaosMinionSuper"
    }
    "Characters/BW_Lantern" = Character {
        name: string = "BW_Lantern"
    }
    "Characters/PetTFTAvatar" = Companion {
        name: string = "PetTFTAvatar"
    }
    "Characters/SRU_ChaosMinionMelee" = Character {
        name: string = "SRU_ChaosMinionMelee"
    }
    "Characters/PetSGCat" = Companion {
        name: string = "PetSGCat"
    }
    "Characters/BW_boat" = Character {
        name: string = "BW_boat"
    }
    "Characters/BW_AP_Bubbs" = Character {
        name: string = "BW_AP_Bubbs"
    }
    "Characters/PetAkaliDragon" = Companion {
        name: string = "PetAkaliDragon"
    }
    "Characters/BW_AP_OrderTurret" = Character {
        name: string = "BW_AP_OrderTurret"
    }
    "Characters/PetChibiVi" = Companion {
        name: string = "PetChibiVi"
    }
    "Characters/BW_AP_ChaosTurret2" = Character {
        name: string = "BW_AP_ChaosTurret2"
    }
    "Characters/HA_AP_Poro" = Character {
        name: string = "HA_AP_Poro"
    }
    "Characters/BW_AP_ChaosTurret3" = Character {
        name: string = "BW_AP_ChaosTurret3"
    }
    "Characters/PetGrumpyLion" = Companion {
        name: string = "PetGrumpyLion"
    }
    "Characters/ChaosInhibitor_D" = Character {
        name: string = "ChaosInhibitor_D"
    }
    "Characters/HA_OrderMinionSiege" = Character {
        name: string = "HA_OrderMinionSiege"
    }
    "Characters/PetDowsie" = Companion {
        name: string = "PetDowsie"
    }
    "Characters/BW_shadowshark" = Character {
        name: string = "BW_shadowshark"
    }
    "Characters/HA_AP_Chains_Long" = Character {
        name: string = "HA_AP_Chains_Long"
    }
    "Characters/OrderNexus" = Character {
        name: string = "OrderNexus"
    }
    "Characters/PetQiyanaDog" = Companion {
        name: string = "PetQiyanaDog"
    }
    "Characters/ChaosNexus" = Character {
        name: string = "ChaosNexus"
    }
    "Characters/HA_AP_ChaosTurret2" = Character {
        name: string = "HA_AP_ChaosTurret2"
    }
    "Characters/PetDSWhale" = Companion {
        name: string = "PetDSWhale"
    }
    "Characters/HA_AP_ChaosTurret3" = Character {
        name: string = "HA_AP_ChaosTurret3"
    }
    "Characters/SRU_SnowDown_Gingerbread" = Character {
        name: string = "SRU_SnowDown_Gingerbread"
    }
    "Characters/HA_ChaosMinionMelee" = Character {
        name: string = "HA_ChaosMinionMelee"
    }
    "Characters/BW_AP_ChaosTurretRubble" = Character {
        name: string = "BW_AP_ChaosTurretRubble"
    }
    "Characters/PetDuckbill" = Companion {
        name: string = "PetDuckbill"
    }
    "Characters/HA_AP_BannerMidBridge" = Character {
        name: string = "HA_AP_BannerMidBridge"
    }
    "Characters/BW_dblrope" = Character {
        name: string = "BW_dblrope"
    }
    "Characters/PetSennaBunny" = Companion {
        name: string = "PetSennaBunny"
    }
    "Characters/PetHextechBirb" = Companion {
        name: string = "PetHextechBirb"
    }
    "Characters/HA_OrderMinionMelee" = Character {
        name: string = "HA_OrderMinionMelee"
    }
    "Characters/PetPiximander" = Companion {
        name: string = "PetPiximander"
    }
    "Characters/SRU_ChaosMinionRanged" = Character {
        name: string = "SRU_ChaosMinionRanged"
    }
    "Characters/PetGargoyle" = Companion {
        name: string = "PetGargoyle"
    }
    "Characters/HA_ChaosMinionSuper" = Character {
        name: string = "HA_ChaosMinionSuper"
    }
    "Characters/HA_AP_Poro_Snowman" = Character {
        name: string = "HA_AP_Poro_Snowman"
    }
    "Characters/SRU_Baron" = Character {
        name: string = "SRU_Baron"
    }
    "Characters/HA_AP_Chains" = Character {
        name: string = "HA_AP_Chains"
    }
    "Characters/PetSGShisa" = Companion {
        name: string = "PetSGShisa"
    }
    "Characters/PetFenroar" = Companion {
        name: string = "PetFenroar"
    }
    "Characters/PetChibiJinx" = Companion {
        name: string = "PetChibiJinx"
    }
    "Characters/PetChibiEkko" = Companion {
        name: string = "PetChibiEkko"
    }
    "Characters/HA_AP_ChaosTurretRubble" = Character {
        name: string = "HA_AP_ChaosTurretRubble"
    }
    "Characters/PetChoncc" = Companion {
        name: string = "PetChoncc"
    }
    0x6c5eb5bc = Character {
        name: string = "Inhibitor"
    }
    "Characters/HA_AP_HealthRelic" = Character {
        name: string = "HA_AP_HealthRelic"
    }
    "Characters/HA_AP_Hermit_Robot" = Character {
        name: string = "HA_AP_Hermit_Robot"
    }
    "Characters/SRU_OrderMinionRanged" = Character {
        name: string = "SRU_OrderMinionRanged"
    }
    "Characters/HA_AP_ShpSouth" = Character {
        name: string = "HA_AP_ShpSouth"
    }
    "Characters/BW_shrkhk" = Character {
        name: string = "BW_shrkhk"
    }
    "Characters/HA_AP_Cutaway" = Character {
        name: string = "HA_AP_Cutaway"
    }
    "Characters/HABW_banner" = Character {
        name: string = "HABW_banner"
    }
    "Characters/BW_seagull" = Character {
        name: string = "BW_seagull"
    }
    "Characters/SLIME_EnvironmentMinion" = Character {
        name: string = "SLIME_EnvironmentMinion"
    }
    "Characters/PetUmbra" = Companion {
        name: string = "PetUmbra"
    }
    "Characters/HA_AP_ChaosTurret" = Character {
        name: string = "HA_AP_ChaosTurret"
    }
    "Characters/HA_AP_Viking" = Character {
        name: string = "HA_AP_Viking"
    }
    "Characters/PetPenguKnight" = Companion {
        name: string = "PetPenguKnight"
    }
    "Characters/HA_ChaosMinionSiege" = Character {
        name: string = "HA_ChaosMinionSiege"
    }
    "Characters/HA_AP_BridgeLaneStatue" = Character {
        name: string = "HA_AP_BridgeLaneStatue"
    }
    "Characters/PetPegasus" = Companion {
        name: string = "PetPegasus"
    }
    "Characters/OrderInhibitor_D" = Character {
        name: string = "OrderInhibitor_D"
    }
    "Characters/PetGhosty" = Companion {
        name: string = "PetGhosty"
    }
    "Characters/PetSGPig" = Companion {
        name: string = "PetSGPig"
    }
    "Characters/PetTurtle" = Companion {
        name: string = "PetTurtle"
    }
    "Characters/PetGemTiger" = Companion {
        name: string = "PetGemTiger"
    }
    "Characters/HA_AP_Poro_Large" = Character {
        name: string = "HA_AP_Poro_Large"
    }
    "Characters/bw_statlant" = Character {
        name: string = "bw_statlant"
    }
    "Characters/PetMiniGolem" = Companion {
        name: string = "PetMiniGolem"
    }
    "Characters/SRU_OrderMinionSuper" = Character {
        name: string = "SRU_OrderMinionSuper"
    }
    "Characters/HA_AP_OrderTurretTutorial" = Character {
        name: string = "HA_AP_OrderTurretTutorial"
    }
    "Characters/OrderInhibitor" = Character {
        name: string = "OrderInhibitor"
    }
    "Characters/ChaosInhibitor" = Character {
        name: string = "ChaosInhibitor"
    }
    "Characters/HA_AP_HeroTower" = Character {
        name: string = "HA_AP_HeroTower"
    }
    "Characters/PetDSSwordGuy" = Companion {
        name: string = "PetDSSwordGuy"
    }
    "Characters/HA_AP_OrderShrineTurret" = Character {
        name: string = "HA_AP_OrderShrineTurret"
    }
    "Characters/PetBuglet" = Companion {
        name: string = "PetBuglet"
    }
    "Characters/brush_BW_E" = Character {
        name: string = "brush_BW_E"
    }
    "Characters/DestroyedNexus" = Character {
        name: string = "DestroyedNexus"
    }
    "Characters/brush_BW_D" = Character {
        name: string = "brush_BW_D"
    }
    "Characters/PetBellswayer" = Companion {
        name: string = "PetBellswayer"
    }
    "Characters/brush_BW_G" = Character {
        name: string = "brush_BW_G"
    }
    "Characters/brush_BW_F" = Character {
        name: string = "brush_BW_F"
    }
    "Characters/brush_BW_A" = Character {
        name: string = "brush_BW_A"
    }
    "Characters/KingPoro" = Character {
        name: string = "KingPoro"
    }
    "Characters/brush_BW_C" = Character {
        name: string = "brush_BW_C"
    }
    "Characters/brush_BW_B" = Character {
        name: string = "brush_BW_B"
    }
    "Characters/BW_AP_OrderTurret2" = Character {
        name: string = "BW_AP_OrderTurret2"
    }
    "Characters/BW_AP_OrderTurret3" = Character {
        name: string = "BW_AP_OrderTurret3"
    }
    "Characters/brush_BW_I" = Character {
        name: string = "brush_BW_I"
    }
    "Characters/brush_BW_H" = Character {
        name: string = "brush_BW_H"
    }
    "Characters/brush_BW_J" = Character {
        name: string = "brush_BW_J"
    }
    "Characters/PetFairy" = Companion {
        name: string = "PetFairy"
    }
    "Characters/BW_shortrope" = Character {
        name: string = "BW_shortrope"
    }
    "Characters/PetSpiritFox" = Companion {
        name: string = "PetSpiritFox"
    }
    "Characters/KINGPORO_PoroFollower" = Character {
        name: string = "KINGPORO_PoroFollower"
    }
    0xcab0f48d = Character {
        name: string = "Nexus"
    }
    "Characters/HA_AP_PoroSpawner" = Character {
        name: string = "HA_AP_PoroSpawner"
    }
    "Characters/SRU_ChaosMinionSiege" = Character {
        name: string = "SRU_ChaosMinionSiege"
    }
    "Characters/Bw_Hcannon" = Character {
        name: string = "Bw_Hcannon"
    }
    "Characters/BW_AP_OrderTurretRubble" = Character {
        name: string = "BW_AP_OrderTurretRubble"
    }
    "Characters/SRU_OrderMinionSiege" = Character {
        name: string = "SRU_OrderMinionSiege"
    }
    "Characters/BW_vship" = Character {
        name: string = "BW_vship"
    }
    "Characters/BW_AP_Finn" = Character {
        name: string = "BW_AP_Finn"
    }
    "Characters/bw_brdgdoor" = Character {
        name: string = "bw_brdgdoor"
    }
    "Characters/PetAoShin" = Companion {
        name: string = "PetAoShin"
    }
    "Characters/HA_AP_Hermit" = Character {
        name: string = "HA_AP_Hermit"
    }
    "Characters/HA_FB_HealthRelic" = Character {
        name: string = "HA_FB_HealthRelic"
    }
    "Characters/PreSeason_Turret_Shield" = Character {
        name: string = "PreSeason_Turret_Shield"
    }
    "Characters/HA_AP_OrderTurret2" = Character {
        name: string = "HA_AP_OrderTurret2"
    }
    "Characters/HA_AP_OrderTurret3" = Character {
        name: string = "HA_AP_OrderTurret3"
    }
    "Characters/PetDSSquid" = Companion {
        name: string = "PetDSSquid"
    }
    "Characters/BW_fishhk" = Character {
        name: string = "BW_fishhk"
    }
    "Characters/brush_HA_A" = Character {
        name: string = "brush_HA_A"
    }
    "Characters/brush_HA_C" = Character {
        name: string = "brush_HA_C"
    }
    "Characters/PetGloop" = Companion {
        name: string = "PetGloop"
    }
    "Characters/PetMiner" = Companion {
        name: string = "PetMiner"
    }
    "Characters/brush_HA_B" = Character {
        name: string = "brush_HA_B"
    }
    "Characters/brush_HA_E" = Character {
        name: string = "brush_HA_E"
    }
    "Characters/BW_AP_ChaosTurret" = Character {
        name: string = "BW_AP_ChaosTurret"
    }
    "Characters/brush_HA_D" = Character {
        name: string = "brush_HA_D"
    }
    "Characters/brush_HA_G" = Character {
        name: string = "brush_HA_G"
    }
    "Characters/BW_signa" = Character {
        name: string = "BW_signa"
    }
    "Characters/brush_HA_F" = Character {
        name: string = "brush_HA_F"
    }
    "Characters/brush_HA_I" = Character {
        name: string = "brush_HA_I"
    }
    "Characters/brush_HA_H" = Character {
        name: string = "brush_HA_H"
    }
    "Characters/HA_AP_Poro_Small" = Character {
        name: string = "HA_AP_Poro_Small"
    }
    "Characters/brush_HA_J" = Character {
        name: string = "brush_HA_J"
    }
    "Characters/PetNimblefoot" = Companion {
        name: string = "PetNimblefoot"
    }
    "Characters/DestroyedTower" = Character {
        name: string = "DestroyedTower"
    }
    "Characters/HA_OrderMinionRanged" = Character {
        name: string = "HA_OrderMinionRanged"
    }
    "Characters/PetGriffin" = Companion {
        name: string = "PetGriffin"
    }
    "Characters/BW_anclantern" = Character {
        name: string = "BW_anclantern"
    }
    "Characters/HA_AP_PeriphBridge" = Character {
        name: string = "HA_AP_PeriphBridge"
    }
    "Characters/bw_tooth" = Character {
        name: string = "bw_tooth"
    }
    "Characters/Bw_Squid" = Character {
        name: string = "Bw_Squid"
    }
    "Characters/HA_OrderMinionSuper" = Character {
        name: string = "HA_OrderMinionSuper"
    }
    "Characters/HA_AP_ChaosTurretShrine" = Character {
        name: string = "HA_AP_ChaosTurretShrine"
    }
    "Characters/HA_AP_OrderTurret" = Character {
        name: string = "HA_AP_OrderTurret"
    }
    "Maps/Shipping/Map12" = Map {
        displayName: string = "game_map_displayname_12"
        description: string = "game_map_description_12"
        isPlatformEnabled: bool = true
        mapStringId: string = "HA"
        characterLists: list2[link] = {
            0x48ce86fc
            0x42fc6f5a
            0xdfe2b0ea
            0x0305956f
            0x19b17b3f
            0xde3b46b9
            0x40d0e73d
            0x4d52e5b5
            0x30585024
            0xe2fcf6f2
            0x3fe66177
            0x2c7e1b6f
        }
        mapSkins: list2[link] = {
            0x16ad1dc1
            0xd087b5a8
            0x7447a7bb
            0xc860963a
            0x81732275
            0xa0000071
            0x7fe34d46
            0x3e389e7e
            0xddfcf6f1
        }
    }
    0x012578c1 = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "Announcer_Map12_Female1_KingPoro_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Map12_Female1_KingPoro_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Map12_Female1_KingPoro_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Map12_Female1_KingPoro_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_KingPoroDispelledBlue"
                    "Play_vo_Announcer_Global_KingPoroDispelledEnemyTeam"
                    "Play_vo_Announcer_Global_KingPoroDispelledPurple"
                    "Play_vo_Announcer_Global_KingPoroDispelledRed"
                    "Play_vo_Announcer_Global_KingPoroDispelledYourTeam"
                    "Play_vo_Announcer_Global_KingPoroSummonedBlue"
                    "Play_vo_Announcer_Global_KingPoroSummonedEnemyTeam"
                    "Play_vo_Announcer_Global_KingPoroSummonedPurple"
                    "Play_vo_Announcer_Global_KingPoroSummonedRed"
                    "Play_vo_Announcer_Global_KingPoroSummonedYourTeam"
                    "Play_vo_Announcer_Global_OnStartGameMessage1Map12KingPoro"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "MUS_Map12_KingPoro"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_KingPoro_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_KingPoro_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_KingPoro_audio.wpk"
                }
                events: list[string] = {
                    "mus_map12_phase_defeat_KingPoro"
                    "mus_map12_phase_select_KingPoro"
                    "mus_map12_phase_victory_KingPoro"
                }
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "mus_map12_phase_select_KingPoro"
            victoryMusicID: string = "mus_map12_victory_KingPoro"
            defeatMusicID: string = "mus_map12_defeat_KingPoro"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = "KINGPORO"
    }
    "Maps/Shipping/Map12/Particles/ARAMHealthPickup" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    0.300000012
                }
                isSingleParticle: flag = true
                emitterName: string = "ArrivalFlash"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.10980393, 0.690196097, 0.498039246, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                            { 1.60000002, 1.60000002, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                emitterName: string = "glow"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.768627524, 1, 0.329411775 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -2
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -50
                                    50
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 108, 108, 108 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                isSingleParticle: flag = true
                emitterName: string = "SoftBeamsBurst"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.152941182, 0.349019617, 1, 0.643137276 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0399999991
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                emitterName: string = "SoftBeams"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.152941182, 0.349019617, 1, 0.270588249 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.781002998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.781002998 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 25000
                }
                isSingleParticle: flag = true
                emitterName: string = "healthIcon"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/ARAMHealthPack.scb"
                    }
                }
                blendMode: u8 = 3
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.819607913, 0.819607913, 0.819607913, 1 }
                }
                pass: i16 = 1
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.69599998, 0.579999983, 0.579999983 }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                emitterName: string = "healspark3"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 0.474510014, 1, 0.870588005, 1 }
                            { 0, 0.431373, 0.811765015, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                isSingleParticle: flag = true
                emitterName: string = "healsparkBurst"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 0.474510014, 1, 0.870588005, 1 }
                            { 0, 0.431373, 0.811765015, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 5000
        particleName: string = "ARAMHealthPickup"
        particlePath: string = "Maps/Shipping/Map12/Particles/ARAMHealthPickup"
        flags: u8 = 197
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Base" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/FollowerPoro.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/FollowerPoro.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/FollowerPoro.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Base"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Base"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/FirstBlood_Danger_AOE_Burning" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 80
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.400000006
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    10000
                }
                emitterName: string = "AlphaFlames"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 800, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 800, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 100, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.200000003
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.5
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 100, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.800000012 }
                            { 0.941175997, 0.482353002, 0.392156988, 0.800000012 }
                            { 0.631372988, 0.133332998, 0.113724999, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 30, 30 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 2, 2, 2 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00300000003
                texture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/Brand_Base_P_Fire_Cas.dds"
                numFrames: u16 = 8
                texDiv: vec2 = { 4, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                lifetime: option[f32] = {
                    1
                }
                emitterName: string = "RimAvatar"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveAttachedMesh {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.333333343, 0, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.333332986, 0, 0.498039007 }
                }
                pass: i16 = 15
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    reflectionMapTexture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/Brand_Base_P_Avatar_CubeMap.dds"
                    reflectionOpacityDirect: f32 = -1
                    reflectionOpacityGlancing: f32 = 2
                    reflectionFresnel: f32 = 0.100000001
                    reflectionFresnelColor: vec4 = { 1, 0.333332986, 0, 1 }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.01999998, 1.01999998, 1.01999998 }
                }
                texture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/Brand_Base_P_DetonationRing_MultNoAlpha.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, 0.200000003 }
                }
                texDiv: vec2 = { 0.400000006, 0.200000003 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                lifetime: option[f32] = {
                    1
                }
                emitterName: string = "RimAvatar1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveAttachedMesh {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.333333343, 0, 0, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.329412013, 0, 0, 0.700007975 }
                }
                pass: i16 = 15
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    reflectionMapTexture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/Brand_Base_P_Avatar_CubeMap.dds"
                    reflectionOpacityDirect: f32 = -1
                    reflectionOpacityGlancing: f32 = 2
                    reflectionFresnel: f32 = 0.100000001
                    reflectionFresnelColor: vec4 = { 0.333332986, 0, 0, 1 }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.01999998, 1.01999998, 1.01999998 }
                }
                texture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/Brand_Base_P_DetonationRing_MultNoAlpha.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.300000012, -0.300000012 }
                }
                texDiv: vec2 = { 0.600000024, 0.400000006 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10
                }
                lifetime: option[f32] = {
                    10000
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 1, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 100
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "sparks"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 300, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 300, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 100, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.200000003
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.5
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 100, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00400000019
                }
                particleColorTexture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/color-hotsparks.dds"
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 6, 6 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/Brand/Skins/Base/Particles/common_Sparks-Orange.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            1
                            1
                            0
                        }
                    }
                }
            }
        }
        particleName: string = "FirstBlood_Danger_AOE_Burning"
        particlePath: string = "Maps/Shipping/Map12/Particles/FirstBlood_Danger_AOE_Burning"
        overrideScaleCap: option[f32] = {
            600
        }
        flags: u8 = 198
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis_Spawn" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.300000012
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "WaterAdd"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 800, 800, -1000 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 800, 800, -1000 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 2 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 1, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        90
                                        110
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        40
                                        60
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 1, 1 }
                            }
                        }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.246963993
                            0.514169991
                            0.75910902
                            0.984817982
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.975000024 }
                            { 1, 1, 1, 0.774999976 }
                            { 1, 1, 1, 0.425000012 }
                            { 1, 1, 1, -0 }
                        }
                    }
                }
                pass: i16 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.230768993
                            0.479757011
                            0.751012027
                            1
                        }
                        values: list[vec3] = {
                            { 0.375, 1, 1 }
                            { 0.699999988, 1, 1 }
                            { 0.875, 1, 1 }
                            { 0.975000024, 1, 1 }
                            { 1, 0, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                birthFrameRate: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.400000006
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "Water"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 800, 800, -1000 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 800, 800, -1000 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 2 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 1, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        90
                                        110
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        40
                                        60
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 1, 1 }
                            }
                        }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.447058827, 0.827450991, 1, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.416007012 }
                }
                pass: i16 = 9
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                }
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.200000003
                                    0.5
                                    0.500100017
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -1
                                    -0.5
                                    0.5
                                    1
                                    1.14999998
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.200000003
                                    0.5
                                    0.500100017
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -1
                                    -0.5
                                    0.5
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 50, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                birthFrameRate: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "HAUpdate_Backtrack_Mis_Spawn"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis_Spawn"
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Spell_Block_Spell_cas" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.349999994
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Ground_Glow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 100 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -100, 100 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                color: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.11999695, 0.579995394, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0.11999695, 0.579995394, 0 }
                            { 0, 0.11999695, 0.579995394, 0.800000012 }
                            { 0, 0.0442341678, 0.00227449182, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 400, 400 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Braum_Base_I_shield_glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "distort"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 250 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/common_color-rampdown32.TFT_Set5.dds"
                blendMode: u8 = 1
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0199999996
                    normalMapTexture: string = "ASSETS/Shared/Particles/Braum_Base_I_Donut_normal.dds"
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 350, 350 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/common_Aura_Self.Season2022_SRT_Preseason.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "hitbubble"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 70, 150, 20 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/Braum_base_e_block_shock.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.411764711, 0.678431392, 1, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.20000005, 1.20000005, 1.20000005 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.10000002, 1.10000002, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Braum_Skin11_e_block_shock_Smooth.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, -4.19999981 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { 0, -4.19999981 }
                            { 0, -0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Maps/Particles/HA/HAUpdate_PokeReduction_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -2 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "ring"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -1000 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 150, 250 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.227450982, 0.43921569, 0.698039234, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0, 0.300007641, 1, 0 }
                        }
                    }
                }
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 400, 400 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.200000003, 0.200000003 }
                            { 1.5, 1.5, 1.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Braum_Base_BA_solar_circle.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.649999976
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.649999976
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "splash"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, -1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1800
                                    2300
                                    3000
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1800
                                    2300
                                    3000
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, -1 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 8, 8, 8 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 160, 300 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 15, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 1.00000012 }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.482352942, 0.647058845, 1, 1 }
                            { 0.0705882385, 0.274509817, 0.752941191, 1 }
                        }
                    }
                }
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 55, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 55, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 5, 5, 5 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.100000001, 0.100000001, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Braum_Skin11_Z_Sparkle.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "darkBG"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 160, 100 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.960006118, 1, 0.60999465, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.960006118, 1, 0.60999465, 0 }
                            { 0.960006118, 1, 0.60999465, 0.600000024 }
                            { 0.960006118, 1, 0.60999465, 0 }
                        }
                    }
                }
                pass: i16 = -1
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
        }
        particleName: string = "HAUpdate_Spell_Block_Spell_cas"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Spell_Block_Spell_cas"
        soundOnCreateDefault: string = "Play_sfx_Braum_BraumEShieldBuff_block_large"
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Timer" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    2.5
                }
                isSingleParticle: flag = true
                emitterName: string = "waterTimer"
                disabled: bool = true
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.5
                            0.600000024
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 0.192156866, 1, 0.75686276, 0 }
                            { 0.596078455, 1, 0.913725495, 0.298039228 }
                            { 0.556862772, 0.964705884, 1, 0.501960814 }
                            { 0.262745112, 1, 1, 0.800000012 }
                            { 0.0745098069, 0.635294139, 0.760784328, 1 }
                            { 0, 0.300000012, 0.699999988, 0 }
                        }
                    }
                }
                pass: i16 = 1
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isGroundLayer: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 0, 6 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Base_Water.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.600000024 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0.400000006 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.5, 0.400000006 }
                        }
                    }
                }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { -0, 0 }
                            { -0.5, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/alphaslice_mesh.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "underDark"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.792156875, 0.796078444, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.792156875, 0.796078444, 0 }
                            { 1, 0.792156875, 0.796078444, 1 }
                            { 1, 0.792156875, 0.796078444, 1 }
                            { 1, 0.792156875, 0.796078444, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 230, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 0.600000024 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.60000002
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "TimerBG"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Mesh.sco"
                    }
                }
                particleColorTexture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Color_Dash_Timer.dds"
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0352941193, 0.203921571, 0.113725491, 0.329411775 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.128582492
                            0.980000019
                            1
                        }
                        values: list[vec4] = {
                            { 0.0352941193, 0.203921571, 0.113725491, 0.108708143 }
                            { 0.0322535522, 0.203921571, 0.113725491, 0.329411775 }
                            { 0.0352941193, 0.203921571, 0.113725491, 0.329411775 }
                            { 0.0116473008, 0.203921571, 0.113725491, 0 }
                        }
                    }
                }
                pass: i16 = -15
                colorLookUpTypeY: u8 = 1
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, -180 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.00774593325
                            0.0323073529
                            0.0510547347
                            0.0558809713
                            0.0780370608
                            1
                        }
                        values: list[vec3] = {
                            { 0.355018646, 0, 0 }
                            { 1.00084543, 0, 0 }
                            { 1.0863744, 0, 0 }
                            { 0.953000009, 0, 0 }
                            { 1, 0, 0 }
                            { 1, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00400000019
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Ring.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.60000002
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "timer1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Mesh.sco"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.662745118, 1, 0.90196079, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.128582492
                            0.980000019
                            1
                        }
                        values: list[vec4] = {
                            { 0.662745118, 1, 0.90196079, 0.330006868 }
                            { 0.662745118, 1, 0.90196079, 1 }
                            { 0.662745118, 1, 0.90196079, 1 }
                            { 0.662745118, 1, 0.90196079, 0 }
                        }
                    }
                }
                pass: i16 = -10
                colorLookUpTypeY: u8 = 1
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, -180 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.00774593325
                            0.0323073529
                            0.0510547347
                            0.0558809713
                            0.0780370608
                            1
                        }
                        values: list[vec3] = {
                            { 0.355018646, 0, 0 }
                            { 1.00084543, 0, 0 }
                            { 1.0863744, 0, 0 }
                            { 0.953000009, 0, 0 }
                            { 1, 0, 0 }
                            { 1, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00400000019
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Ring.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.319999993, 0 }
                }
                textureMult: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Ring_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.200000003, -0.100000001 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.79999995
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "underDark1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.792156875, 0.796078444, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.792156875, 0.796078444, 0 }
                            { 1, 0.792156875, 0.796078444, 1 }
                            { 1, 0.792156875, 0.796078444, 1 }
                            { 1, 0.792156875, 0.796078444, 0 }
                        }
                    }
                }
                pass: i16 = -20
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 200, 150, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.29999995
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "timerDing"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, -100 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Flare.dds"
            }
        }
        particleName: string = "HAUpdate_Backtrack_Timer"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Timer"
    }
    "Maps/Shipping/Map12/Particles/FirstBlood_BattleRoyale_circle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    0.349999994
                }
                lifetime: option[f32] = {
                    80
                }
                emitterName: string = "fireWaveDomeSTB"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.699999988
                            0.899999976
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.497992992 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                softParticleParams: pointer = VfxSoftParticleDefinitionData {}
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4.5, 3, 4.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 4.5, 0.300000012, 4.5 }
                            { 4.5, 6, 4.5 }
                            { 4.5, 12, 4.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                FlexInstanceScale: pointer = FlexTypeFloat {}
                texture: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Fire.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.800000012 }
                }
                texDiv: vec2 = { 0.100000001, 1 }
                textureMult: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Fire_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    12
                }
                emitterName: string = "glowRing"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.360006094, 0, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.360006094, 0, 0 }
                            { 1, 0.360006094, 0, 1 }
                            { 1, 0.360006094, 0, 0 }
                        }
                    }
                }
                alphaRef: u8 = 0
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 800, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                FlexInstanceScale: pointer = FlexTypeFloat {}
                texture: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "textureRing"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 5, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/common_shared_aoering.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.635294139, 0, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 2
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.449999988, 1, 1 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                FlexInstanceScale: pointer = FlexTypeFloat {}
                texture: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/common_color-hold.dds"
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/Yorick_Base_Wraith_Gradient.dds"
                }
                texDiv: vec2 = { 0.100000001, 2 }
                textureMult: string = "ASSETS/Shared/Particles/BW_Peref_Fog_Distant.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "brightRing"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 5, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/common_shared_aoering.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.282352954, 0, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isGroundLayer: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.449999988, 1, 1 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                FlexInstanceScale: pointer = FlexTypeFloat {}
                texture: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/common_color-hold.dds"
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Characters/Yorick/Skins/Base/Particles/Yorick_Base_Wraith_Gradient.dds"
                }
                texDiv: vec2 = { 0, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    0.349999994
                }
                lifetime: option[f32] = {
                    70
                }
                emitterName: string = "fireWaveDomeBTS"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Mesh_Outer.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.699999988
                            0.899999976
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.497992992 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 100
                }
                miscRenderFlags: u8 = 1
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4.5, 3, 4.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 4.5, 0.300000012, 4.5 }
                            { 4.5, 6, 4.5 }
                            { 4.5, 12, 4.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                FlexInstanceScale: pointer = FlexTypeFloat {}
                texture: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Fire_Mult.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.800000012 }
                }
                texDiv: vec2 = { 0.100000001, 1 }
                textureMult: string = "ASSETS/Maps/Particles/SLIME/SLIME_Danger_AOE_Dome_Fire_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -1 }
                }
            }
        }
        visibilityRadius: f32 = 25000
        particleName: string = "FirstBlood_BattleRoyale_circle"
        particlePath: string = "Maps/Shipping/Map12/Particles/FirstBlood_BattleRoyale_circle"
        flags: u8 = 207
    }
    "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_TarSmoke" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "WispMesh_Alpha"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Scorch_Tar_Wisp_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.700007617 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 6, 5 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.600000024, 1 }
                            { 0.75, 1.20000005, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_SpellBurn_Tar_MeshWisps.dds"
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Sorcery_Gradient_Full.dds"
                }
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.125, 0.800000012 }
                }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0.5, 0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { 0.174999997, 0.375 }
                            { 0.25, 0.625 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "WispMesh_Add"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Scorch_Tar_Wisp_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.700007617 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0.917647064, 1, 0 }
                            { 0.349996179, 0.700007617, 1, 1 }
                            { 0.2399939, 0.480003059, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 7 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.75, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_SpellBurn_Tar_MeshWisps.dds"
                paletteDefinition: pointer = VfxPaletteDefinitionData {}
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.125, 0.699999988 }
                }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0.5, 0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { 0.174999997, 0.375 }
                            { 0.375, 0.625 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                            0.699999988
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            35
                            35
                            70
                            35
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            1
                            0.5
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.400000006
                }
                emitterName: string = "Fire_Bits_Burst"
                importance: u8 = 2
                keywordsExcluded: list[string] = {
                    "FrostFireBrand"
                    "ZombieBrand"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 700, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 700, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.25
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 1, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 1, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.203921586 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0, 1, 1, 0 }
                            { 0.439993888, 0.86999315, 1, 1 }
                            { 0.319996953, 0.650003791, 1, 1 }
                            { 0.170000762, 0.340001523, 1, 1 }
                            { 0.170000762, 0.340001523, 0.510002315, 0 }
                        }
                    }
                }
                pass: i16 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 10, 65 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.330000013
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                    1
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 65, 10, 65 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1.10000002, 1.10000002, 1.10000002 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Scorch_FlameLicks.dds"
                numFrames: u16 = 8
                paletteDefinition: pointer = VfxPaletteDefinitionData {}
                texDiv: vec2 = { 4, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            1
                            0.5
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.400000006
                }
                emitterName: string = "Fire_Bits_Point"
                importance: u8 = 2
                keywordsExcluded: list[string] = {
                    "FrostFireBrand"
                    "ZombieBrand"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.25
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 60, 1, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 60, 1, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.200000003 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.450003803, 0.889997721, 1, 0 }
                            { 0.450003803, 0.889997721, 1, 1 }
                            { 0.340001523, 0.669993162, 1, 1 }
                            { 0.170000762, 0.340001523, 0.820004582, 1 }
                            { 0.0800030529, 0.160006106, 0.510002315, 0 }
                        }
                    }
                }
                pass: i16 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 10, 80 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.330000013
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                    1
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 10, 80 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1.10000002, 1.10000002, 1.10000002 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Scorch_FlameLicks.dds"
                numFrames: u16 = 8
                paletteDefinition: pointer = VfxPaletteDefinitionData {}
                texDiv: vec2 = { 4, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLinger: option[f32] = {
                    10.25
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.50199759 }
                            { 1, 1, 1, 0.194485605 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 15
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0.200000003
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 230, 300, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.438461512
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0.150000006, 0.150000006, 0 }
                            { 0.506053805, 0.506053805, 0 }
                            { 0.955896854, 0.900896847, 0 }
                            { 1.14848709, 1.125, 0 }
                            { 1.25, 1.25, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Sorcery_Tar_Burst_2x2.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    11.5
                }
                lifetime: option[f32] = {
                    1
                }
                emitterName: string = "Shadow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.689997733, 0.779995441, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.689997733, 0.779995441, 1, 0.800000012 }
                            { 0.689997733, 0.779995441, 1, 0.800000012 }
                            { 0.689997733, 0.779995441, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 300, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.29999995
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.29999995
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11.3000002
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    0.300000012
                }
                emitterName: string = "FireUpMesh_Aoe"
                importance: u8 = 0
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500999987
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Sorcery_Tar_FireUp_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.564705908, 1, 0.988235295, 0 }
                            { 0.439993888, 0.880003035, 1, 1 }
                            { 0.400000006, 0.790005326, 1, 1 }
                            { 0.2399939, 0.480003059, 0.749996185, 0 }
                        }
                    }
                }
                pass: i16 = 15
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    beginIn: f32 = 50
                    deltaIn: f32 = 10
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -70
                                    -100
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.800000012, 0.879999995, 1.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.5
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.879999995, 1.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0350000001
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.25, 2, 1.25 }
                            { 4, 3, 4 }
                            { 2, 3, 2 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0.75 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.150000006
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.0500000007, 0.75 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Perks/Styles/Sorcery/Scorch/Particles/Perks_Sorcery_Tar_FireUp_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 2, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLinger: option[f32] = {
                    10
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "flash"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 80, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.400000006, 0.800000012, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 0.400000006, 0.800000012, 1, 1 }
                            { 0.400000006, 0.800000012, 1, 1 }
                            { 0.400000006, 0.800000012, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                meshRenderFlags: u8 = 0
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 600, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00300000003
                texture: string = "ASSETS/Shared/Particles/FlareBuilding.TFT_Set5.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 100
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            100
                        }
                    }
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            2
                            0
                        }
                    }
                }
                birthRotation1: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
            }
        }
        particleName: string = "FirstBlood_RelicBuff_TarSmoke"
        particlePath: string = "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_TarSmoke"
        overrideScaleCap: option[f32] = {
            375
        }
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Cas" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 12
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "WaterAdd"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 600, 600, -700 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 600, 600, -700 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 1, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        90
                                        110
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        40
                                        60
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 1, 1 }
                            }
                        }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.246963993
                            0.514169991
                            0.75910902
                            0.984817982
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.585000038 }
                            { 1, 1, 1, 0.464999974 }
                            { 1, 1, 1, 0.254999995 }
                            { 1, 1, 1, -0 }
                        }
                    }
                }
                pass: i16 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 100, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.230768993
                            0.479757011
                            0.751012027
                            1
                        }
                        values: list[vec3] = {
                            { 0.375, 1, 1 }
                            { 0.699999988, 1, 1 }
                            { 0.875, 1, 1 }
                            { 0.975000024, 1, 1 }
                            { 1, 0, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                birthFrameRate: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "Water1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 500, 500, -600 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 500, 500, -600 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 1, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        90
                                        110
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        40
                                        60
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 1, 1 }
                            }
                        }
                    }
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.447058827, 0.827450991, 1, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000006 }
                }
                pass: i16 = 9
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.49000001
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.699999988
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.200000003
                                    0.5
                                    0.500100017
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -1
                                    -0.5
                                    0.5
                                    1
                                    1.14999998
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.200000003
                                    0.5
                                    0.500100017
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -1
                                    -0.5
                                    0.5
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 50, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                birthFrameRate: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "HAUpdate_Backtrack_Cas"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Cas"
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Pull" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.29999995
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "waterMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, -20 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.500007629 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.500007629 }
                            { 1, 1, 1, 0.500007629 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 2, 3 }
                }
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.25 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, -0.25 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { 0, -0 }
                            { 0, -0.75 }
                        }
                    }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0.5 }
                }
            }
        }
        particleName: string = "HAUpdate_Backtrack_Pull"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Pull"
    }
    "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Cleanse" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "swoopMesh"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_MarinersVengeance_Cleanse_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.313725501, 0.968627453, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.0392156877, 0.356862754, 0.403921574, 0 }
                        }
                    }
                }
                pass: i16 = 1
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -180, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                            { 1, 1, 1 }
                            { 0.600000024, 1.20000005, 0.600000024 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Cleanse.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 2 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "swoopMeshAdd"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_MarinersVengeance_Cleanse_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0235294122, 0.772549033, 1, 0 }
                            { 0.43921569, 0.87843138, 1, 1 }
                            { 0.298039228, 0.274509817, 1, 0 }
                        }
                    }
                }
                pass: i16 = 2
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -180, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 3, 5 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                            { 1, 1, 1 }
                            { 0.600000024, 1.20000005, 0.600000024 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Cleanse.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 2 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
                texDiv: vec2 = { 2, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "waterSplash"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 2000, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 1, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        100
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 1, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                }
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 180, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 180, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.5, 0.800000012, 0.800000012 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 2000, 0 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 300, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 4, 1, 0 }
                            { 1, 1, 0 }
                            { 0, 1, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "swoopMesh1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_MarinersVengeance_Cleanse_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.313725501, 0.968627453, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.0392156877, 0.356862754, 0.403921574, 0 }
                        }
                    }
                }
                pass: i16 = 1
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 3, 3, 3 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                            { 1, 1, 1 }
                            { 0.600000024, 1.20000005, 0.600000024 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Cleanse.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 2 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "swoopMeshAdd1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_MarinersVengeance_Cleanse_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0235294122, 0.772549033, 1, 0 }
                            { 0.43921569, 0.87843138, 1, 1 }
                            { 0.298039228, 0.274509817, 1, 0 }
                        }
                    }
                }
                pass: i16 = 2
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 3, 5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 3, 5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                            { 1, 1, 1 }
                            { 0.600000024, 1.20000005, 0.600000024 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Cleanse.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 2 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
                texDiv: vec2 = { 2, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "darkBG"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 150, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.680003047, 0.680003047, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.680003047, 0.680003047, 0 }
                            { 1, 0.680003047, 0.680003047, 0.800000012 }
                            { 1, 0.680003047, 0.680003047, 0.800000012 }
                            { 1, 0.680003047, 0.680003047, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 200, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "waterSplashRays"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1800, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1800, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                }
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 120, 150, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "Item_MarinersVengeance_Cleanse"
        particlePath: string = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Cleanse"
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Return_Timing_buf_1" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    13
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "new-sun"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_color-rampdown32.dds"
                blendMode: u8 = 4
                pass: i16 = 1
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 245, 245, 0 }
                }
                texture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_sundisc32.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.0250000004 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.100000001 }
                }
            }
        }
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.20000005
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    10
                }
                lifetime: option[f32] = {
                    3
                }
                isSingleParticle: flag = true
                emitterName: string = "solartag"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                particleColorTexture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_color-bellcurve.dds"
                pass: i16 = 1
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_eclipse-bead.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 140
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                }
                particleLinger: option[f32] = {
                    10
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "solarcorona"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                particleColorTexture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_color-solar-corona.dds"
                pass: i16 = 1
                meshRenderFlags: u8 = 0
                miscRenderFlags: u8 = 1
                texture: string = "ASSETS/Characters/SLIME_LootGoblin/Skins/Base/Particles/HAUpdate_Return_Timing_buf_1_solar-corona.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 200
                }
                particleBind: vec2 = { 1, 1 }
            }
        }
        particleName: string = "HAUpdate_Return_Timing_buf_1"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Return_Timing_buf_1"
        overrideScaleCap: option[f32] = {
            -1
        }
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Shield" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "GroundLight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0901960805, 0.254901975, 0.290196091, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.500007629 }
                }
                pass: i16 = -10
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 1, 1 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Glow.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 220
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
                orientation: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "ShieldAD"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.300007641 }
                }
                pass: i16 = 3
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 240, 240 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Shield2.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 240
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.400000006
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "ShieldBG1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.170000762, 0.560006082, 0.639993906, 0.300007641 }
                }
                pass: i16 = -2
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                depthBiasFactors: vec2 = { -1, -12 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -150, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 240, 240 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/HAUpdate_Backtrack_Shield.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 240
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.400000006
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    4.4000001
                }
                isSingleParticle: flag = true
                emitterName: string = "ShieldWater"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/BilgeWater/Sphere.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.190005347, 1, 0.86999315, 0.300007641 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                pass: i16 = 8
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5.5, 5.5, 5.5 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Caustics.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0.0500000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.0500000007, 0.0500000007 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "ShieldAD1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0500038154, 1, 0.719996929, 0.200000003 }
                }
                pass: i16 = 15
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                depthBiasFactors: vec2 = { -1, -10 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 240, 240 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/HAUpdate_Backtrack_Shield.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 240
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.400000006
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "ShieldFullFG"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.179995418, 0.149996191, 0.400000006 }
                }
                pass: i16 = -5
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 240, 240 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Shield3.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 240
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.400000006
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLinger: option[f32] = {
                    10.3999996
                }
                lifetime: option[f32] = {
                    0.100000001
                }
                isSingleParticle: flag = true
                emitterName: string = "RippleActivate"
                importance: u8 = 2
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -20 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.368627459, 1, 0.600000024, 0.800000012 }
                            { 0.152941182, 0.701960802, 0.545098066, 0.800000012 }
                            { 0.223529413, 0.603921592, 0.678431392, 0.800000012 }
                            { 0, 0.0470589995, 0.0156859998, 0.800000012 }
                        }
                    }
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.5
                    erosionSliceWidth: f32 = 1
                    erosionMapName: string = "ASSETS/Shared/Particles/Warwick_DeflectionRipples.dds"
                    erosionMapAddressMode: u8 = 0
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.699999988, 0.699999988, 1 }
                            { 0.899999976, 0.899999976, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Shield3.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.79999995
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "SphereShading"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.220004573, 0.790005326, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.376513749
                            0.434311926
                            0.490458697
                            0.563119233
                            0.619266033
                            0.668807328
                            0.713394463
                            0.744770646
                            0.781100869
                            0.812477052
                            0.850000024
                            0.899999976
                        }
                        values: list[vec4] = {
                            { 0.220004573, 0.790005326, 1, 0 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.600000024 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.564705908 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.505882382 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.435294122 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0.294117659 }
                            { 0.220004573, 0.790005326, 1, 0.800000012 }
                            { 0.220004573, 0.790005326, 1, 0 }
                        }
                    }
                }
                pass: i16 = 50
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 180, 1, 1 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 160, 170, 170 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Shield_SheildFlat.dds"
            }
        }
        particleName: string = "HAUpdate_Backtrack_Shield"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Shield"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin01/Poro_Mecha.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin01/Poro_Mecha.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin01/Poro_Battlecast_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin01"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin01"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin03" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin03/Poro_Astronaut.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin03/Poro_Astronaut.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin03/Poro_Astronaut_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin03"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin03"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin02" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin02/Poro_Dragon.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin02/Poro_Dragon.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin02/Poro_DragonSlayer_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin02"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin02"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin05" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin05/Poro_Gentleman.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin05/Poro_Gentleman.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin05/Poro_Gentleman_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin05"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin05"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin04" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin04/Poro_Shadow.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin04/Poro_Shadow.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin04/Poro_ShadowIsles_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin04"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin04"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin07" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin07/poro_DarkStar.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin07/poro_DarkStar.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin07/Poro_DarkStar_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "Trail_Bright"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 40, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mCutoff: f32 = 1000
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 200, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.562004983 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec4] = {
                            { 0.956862986, 0.184313998, 0.92156899, 0.277696788 }
                            { 0.976471007, 0.180391997, 1, 0.420943975 }
                            { 0.541176021, 0.058823999, 0.294117987, 0 }
                        }
                    }
                }
                pass: i16 = -9
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 40, 40 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0.100000001, 1, 1 }
                            { 0.774999976, 1, 1 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, 0 }
                }
                texDiv: vec2 = { 2, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "Trail_Dark"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 40, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mCutoff: f32 = 1000
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 200, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.562004983 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 0, 0.562004983 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -5
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 20 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0.100000001, 1, 1 }
                            { 0.774999976, 1, 1 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, 0 }
                }
                texDiv: vec2 = { 2, 1 }
            }
        }
        particleName: string = "Poro_Throw_Skin07"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin07"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin06" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin06/Poro_Project.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin06/Poro_Project.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin06/Poro_Project_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "SnowSparkle1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7.5, 7.5, 22.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7.5, 7.5, 22.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Project_Particles.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.29999995
                }
                particleLinger: option[f32] = {
                    11.3000002
                }
                lifetime: option[f32] = {
                    50
                }
                emitterLinger: option[f32] = {
                    2
                }
                emitterName: string = "Trail_Hot"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 1, -1, 0 }
                        }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.5
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.333332986, 0, 1 }
                            { 1, 0.152941003, 0.00392200006, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 10, 10 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Project_Z_Hex_02.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texDiv: vec2 = { 200, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle2"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin06"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin06"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_Skin06_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin09" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin09/BaronPoro.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin09/BaronPoro.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin09/SnowDown_BaronPoro.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin09"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin09"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin08" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin08/Poro_StarGuardian.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin08/Poro_StarGuardian.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin08/Animations/Poro_StarGuardian_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin08/Poro_StarGuardian_TX_CM.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin08"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin08"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Passive" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    10000
                }
                emitterName: string = "passiveWater"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 35, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 100
                meshRenderFlags: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -90, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 6 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00600000005
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.100000001 }
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                birthRotation1: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
                orientation: u8 = 2
                uvScrollRate1: vec2 = { 0, 0.0199999996 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    10000
                }
                emitterName: string = "passiveWaterAdd"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 35, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive_Mesh.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.419607848, 0.945098042, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.419607848, 0.945098042, 1, 0 }
                            { 0.419607848, 0.945098042, 1, 1 }
                            { 0.419607848, 0.945098042, 1, 0 }
                        }
                    }
                }
                pass: i16 = 101
                meshRenderFlags: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1.20000005
                                1
                                1.20000005
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -90, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 6 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00600000005
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
                texDiv: vec2 = { 1, 0.5 }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                birthRotation1: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
                orientation: u8 = 2
                uvScrollRate1: vec2 = { 0, 0.0199999996 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    10000
                }
                emitterName: string = "passiveWaterDark"
                disabled: bool = true
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 35, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.310002297, 0.439993888, 0.579995394, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.310002297, 0.439993888, 0.579995394, 0 }
                            { 0.310002297, 0.439993888, 0.579995394, 0.800000012 }
                            { 0.310002297, 0.439993888, 0.579995394, 0 }
                        }
                    }
                }
                pass: i16 = 99
                meshRenderFlags: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -90, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 7 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00600000005
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.100000001 }
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                birthRotation1: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
                orientation: u8 = 2
                uvScrollRate1: vec2 = { 0, 0.0199999996 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    10000
                }
                emitterName: string = "passiveWater1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 35, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive_Mesh.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 100
                meshRenderFlags: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -90, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 6 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00600000005
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Passive.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.100000001 }
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                birthRotation1: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
                orientation: u8 = 2
                uvScrollRate1: vec2 = { 0, 0.0199999996 }
            }
        }
        particleName: string = "Item_MarinersVengeance_Passive"
        particlePath: string = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Passive"
    }
    "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Night" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    0.300000012
                }
                isSingleParticle: flag = true
                emitterName: string = "ArrivalFlash"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.690196097, 0.450980395, 0.0627451017, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                            { 1.60000002, 1.60000002, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                emitterName: string = "glow"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 1, 0, 0.329411775 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -2
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -50
                                    50
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 108, 108, 108 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                isSingleParticle: flag = true
                emitterName: string = "SoftBeamsBurst"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.568627477, 0.13333334, 0.643137276 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0399999991
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                emitterName: string = "SoftBeams"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.400000006, 0.164705887, 0.270588249 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.781002998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.781002998 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 25000
                }
                isSingleParticle: flag = true
                emitterName: string = "healthIcon"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/ARAMHealthPack.scb"
                    }
                }
                blendMode: u8 = 3
                pass: i16 = 1
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.69599998, 0.579999983, 0.579999983 }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_Night.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                emitterName: string = "healspark3"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.501960814, 0, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.24444446
                            0.748717964
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 1, 0.813793123, 0.608519018, 1 }
                            { 0.855172396, 0.393103451, 0.220689654, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                isSingleParticle: flag = true
                emitterName: string = "healsparkBurst"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.58431375, 0, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.291453004
                            0.748717964
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 0.943475544, 0.77241379, 0.215415597, 1 }
                            { 0.917241395, 0.383097142, 0.163489148, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 5000
        particleName: string = "ARAMHealthPickup_Night"
        particlePath: string = "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Night"
        flags: u8 = 197
    }
    "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_Tar" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    10.25
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "Flash"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.779995441, 0.749996185, 1, 1 }
                            { 0.489997715, 0.489997715, 1, 1 }
                            { 0.340001523, 0.340001523, 1, 0 }
                        }
                    }
                }
                pass: i16 = 200
                miscRenderFlags: u8 = 1
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 100, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Sparkle.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    0.100000001
                }
                isSingleParticle: flag = true
                emitterName: string = "hotSmoke"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.572549045, 0.223529413, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.572549045, 0.223529413, 1, 0 }
                            { 0.572549045, 0.223529413, 1, 1 }
                            { 0.190849677, 0, 0.498039216, 0 }
                        }
                    }
                }
                pass: i16 = 2
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                1
                            }
                            values: list[f32] = {
                                0
                                0.5
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 80, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 80, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.20000005, 1.20000005, 1.20000005 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 0.600000024 }
                            { 1.20000005, 1.20000005, 1.20000005 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Smoke.dds"
                numFrames: u16 = 8
                texDiv: vec2 = { 4, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.200000003
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "darkSparks"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 300, 1200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 300, 300, 1200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 1 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.749996185, 0.749996185, 1, 1 }
                            { 0.500007629, 0.500007629, 1, 0 }
                        }
                    }
                }
                pass: i16 = 3
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {}
                isDirectionOriented: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 10, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Sparkle.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    10.25
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "darkGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.779995441, 0.779995441, 1, 1 }
                            { 0.489997715, 0.489997715, 1, 1 }
                            { 0.340001523, 0.340001523, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 50, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Kalista_Skin01_P_Glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_Mesh"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 30 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Directional_Wisp.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 2
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        constantValue: f32 = 0
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                0
                                0
                                0
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                particleIsLocalOrientation: flag = true
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.600000024, 1.20000005, 0.600000024 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 0.800000012, 1, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Directional_Wisp.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.800000012 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "glowSparks"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 300, 1000 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 300, 300, 1000 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.596078455, 0.603921592, 1, 1 }
                            { 0.250003815, 0.250003815, 1, 1 }
                        }
                    }
                }
                pass: i16 = 3
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {}
                isDirectionOriented: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 30, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 30, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/ball01.Season2022_SRT_Preseason.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    10.25
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "darkGlow1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 5 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 80 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.37000075, 0, 0.700007617, 0.700007617 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.37000075, 0, 0.700007617, 0.700007617 }
                            { 0.37000075, 0, 0.700007617, 0.700007617 }
                            { 0.37000075, 0, 0.700007617, 0.700007617 }
                            { 0.124784574, 0, 0.428239971, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                isDirectionOriented: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 150, 0 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.10000002, 1.10000002, 1.10000002 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1.10000002, 0.550000012, 1.10000002 }
                            { 0.550000012, 1.10000002, 0.550000012 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Kalista_Skin01_P_Glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_Mesh1"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Directional_Wisp.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 2
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        constantValue: f32 = 0
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                0
                                0
                                0
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Perks/Styles/Precision/Overheal/Particles/Perks_Overheal_Shield_Burst_Erosion.dds"
                }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.300000012 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.29999995, 1.29999995, 1.29999995 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1.29999995, 1.29999995 }
                            { 1.03999996, 1.29999995, 1.29999995 }
                            { 1.29999995, 1.29999995, 1.29999995 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Perks/Styles/Domination/DarkHarvest/Particles/Perks_SoulReaper_Directional_Wisp.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.800000012 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    10.25
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.250003815, 0, 0.510002315, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 105, 105, 35 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Kalista_Skin01_P_Glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.10000002
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.10000002
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    0.100000001
                }
                isSingleParticle: flag = true
                emitterName: string = "Swirls_Alpha"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        2
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/Base_Ghoul_Spawnado_Rings_2.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.992156863, 0.992156863, 0.992156863, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.156604007
                            0.300000012
                            0.435849011
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.992156863, 0.217885435, 0.229557857, 0 }
                            { 0.783809245, 0, 0.0198476799, 0.650003791 }
                            { 0.50191462, 0.132287577, 0.688673615, 1 }
                            { 0.307570904, 0.109139524, 0.664738297, 0.689997733 }
                            { 0.198431373, 0.07937558, 0.396862745, 0.130006865 }
                            { 0.182868123, 0.0661437884, 0.412425995, 0 }
                        }
                    }
                }
                pass: i16 = -11
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.20000005, 0, 0 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.0500000007, 0, 0 }
                            { 0.600000024, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Base_WraithBeam_Panner.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -0.699999988
                                    0.699999988
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.25
                                    0.250099987
                                    0.5
                                    0.500100017
                                    0.75
                                    0.750100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    0.25
                                    0.25
                                    0.5
                                    0.5
                                    0.75
                                    0.75
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.10000002
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.10000002
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    0.100000001
                }
                isSingleParticle: flag = true
                emitterName: string = "Swirls_BlendAdd"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        2
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/Base_Ghoul_Spawnado_Rings_2.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0, 0.0156862754, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.699999988
                        }
                        values: list[vec4] = {
                            { 1, 0, 0.0156862754, 0 }
                            { 1, 0, 0.0156862754, 1 }
                            { 1, 0, 0.0156862754, 0 }
                        }
                    }
                }
                pass: i16 = 5
                alphaRef: u8 = 0
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.899999976, 0, 0 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.699999988, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.0700000003, 0, 0 }
                            { 0.839999974, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Base_WraithBeam_Panner.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1.5
                                    -0.699999988
                                    0.699999988
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.25
                                    0.250099987
                                    0.5
                                    0.500100017
                                    0.75
                                    0.750100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    0.25
                                    0.25
                                    0.5
                                    0.5
                                    0.75
                                    0.75
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0500000007
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "Ring"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.87843138, 0.431372553, 1, 0 }
                            { 0.525490224, 0.0470588244, 1, 1 }
                            { 0.58431375, 0.0705882385, 0.266666681, 0.627451003 }
                            { 0.31764707, 0.0235294122, 0.0274509806, 0 }
                        }
                    }
                }
                alphaRef: u8 = 155
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.600000024, 0.600000024, 0.600000024 }
                            { 0.850000024, 0.850000024, 0.850000024 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00400000019
                texture: string = "ASSETS/Shared/Particles/Base_cas_ring.dds"
                startFrame: u16 = 2
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "FlareAB"
                disabled: bool = true
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.86999315 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.200000003
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.400000006, 0.400000006, 1, 0.86999315 }
                            { 0.400000006, 0.400000006, 1, 0.539399743 }
                            { 0.429999232, 0.400000006, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 500, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 0, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1.20000005, 1.20000005, 1.20000005 }
                            { 1.70000005, 1.70000005, 1.70000005 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00400000019
                texture: string = "ASSETS/Shared/Particles/Base_Crescent_01.dds"
            }
        }
        particleName: string = "FirstBlood_RelicBuff_Tar"
        particlePath: string = "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_Tar"
    }
    "Maps/Shipping/Map12/Particles/Poro_Throw_Skin10" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                isSingleParticle: flag = true
                emitterName: string = "PoroMesh"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin10/ReindeerPoro.skn"
                        mMeshSkeletonName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin10/ReindeerPoro.skl"
                        mAnimationName: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Base/Animations/Poro_Throw.anm"
                    }
                }
                blendMode: u8 = 1
                isUniformScale: flag = true
                doesCastShadow: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.349999994, 1, 1 }
                }
                texture: string = "ASSETS/Characters/KINGPORO_PoroFollower/Skins/Skin10/SnowDown_PoroDeer.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.699999988
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.550000012
                            0.800000012
                            1
                        }
                        values: list[f32] = {
                            0.699999988
                            0.682500005
                            0.560000002
                            0.297500014
                            0.210000008
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.699999988
                }
                emitterLinger: option[f32] = {}
                emitterName: string = "FireTrail_Back"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    -10
                                    0
                                    0
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 100, 0, 0 }
                        }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.650979996, 0.831372976, 1, 0.819607973 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.119999997
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.650979996, 0.831372976, 1, 0 }
                            { 0.650979996, 0.831372976, 1, 0.819607973 }
                            { 0.650979996, 0.831372976, 1, 0.131792963 }
                            { 0.227843001, 0.166274592, 0.100000001, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                            { 4, 1, 1 }
                            { 8, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Mis_SnowTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.6000004
                }
                emitterName: string = "IceDust_Poro"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -30 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.850000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            0.850000024
                            0.425000012
                            0
                        }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156994, 0.937255025, 1, 0.282353014 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156994, 0.937255025, 1, 0 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0.282353014 }
                            { 0.792156994, 0.937255025, 1, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 4, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.39999998
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.39999998
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.39999998
                }
                emitterName: string = "IceDust_Smoke"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.494118005, 0.819607973, 1, 0.547996998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.494118005, 0.819607973, 1, 0.547996998 }
                            { 0.494118005, 0.819607973, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.00999999978
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "IceDust_Smoke_Add"
                keywordsExcluded: list[string] = {
                    "ReefMalphite"
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    -5
                                    5
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                    2
                                    3
                                }
                                keyValues: list[f32] = {
                                    5
                                    0
                                    10
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 60 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.349020004, 0.415686011, 0.568627, 0.301961005 }
                            { 0.349020004, 0.415686011, 0.568627, 0 }
                        }
                    }
                }
                colorLookUpTypeY: u8 = 3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.79999995
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 3, 3, 3 }
                            { 5, 3.5, 3.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Explosion_SnowPuffs.ARAM_VFX_Update.dds"
                numFrames: u16 = 16
                texDiv: vec2 = { 4, 4 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    30
                }
                emitterName: string = "Ice_Chunks_Wake"
                keywordsExcluded: list[string] = {
                    "GlacialMalphite"
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 400, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 400, 200, 200 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -2000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -2000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.713999987 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.713999987 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 7, 4, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Malphite_Glacial_RockBits.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 35
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                emitterName: string = "SnowSparkle"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 400, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 400, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 4, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 50 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/color-bellcurve32.ARAM_VFX_Update.dds"
                colorLookUpTypeY: u8 = 3
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 60 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 60 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.600000024
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Ashe_Freljord_Sparkle.ARAM_VFX_Update.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SparkleDust"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 30 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.333332986, 0.545098007, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0999998972, 0.163529411, 0.300000012, 0 }
                            { 0.333332986, 0.545098007, 1, 1 }
                            { 0.333332986, 0.545098007, 1, 0.941206992 }
                            { 0.333332986, 0.545098007, 1, 0 }
                        }
                    }
                }
                pass: i16 = -100
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.5
                    fresnelColor: vec4 = { 1, 0.5, 0.25, 0.25 }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -5
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.39999998, 1.39999998, 1.39999998 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 80, 80, 80 }
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Asc_Avatar_Sand.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
            }
        }
        particleName: string = "Poro_Throw_Skin10"
        particlePath: string = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin10"
        soundOnCreateDefault: string = "Play_sfx_SummonerPoroThrow_cast"
    }
    "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                emitterName: string = "Cap"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 30 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Mis_Cap.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.600000024, 1, 0.65882355, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                }
                pass: i16 = 5
                particleIsLocalOrientation: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 2, 1 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Mis_Cap.dds"
                numFrames: u16 = 8
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.5, -1.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Mis_Cap_Mult.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 120
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    0.800000012
                }
                emitterName: string = "CenterWaterTrail"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveCameraTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mCutoff: f32 = 2000
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 750, 0, 0 }
                        }
                        mSmoothingMode: u8 = 2
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.427450985, 0.474509805, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0199999996
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0.427450985, 0.474509805, 1 }
                            { 0, 0.427450985, 0.474509805, 1 }
                            { 0, 0.427450985, 0.474509805, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.999899983
                        }
                        values: list[vec4] = {
                            { 0.411764711, 0.784313738, 0.772549033, 1 }
                            { 0.290196091, 0.627451003, 0.792156875, 1 }
                            { 0, 0.196078435, 0.737254918, 0 }
                        }
                    }
                }
                alphaRef: u8 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_WaterTrail.dds"
                }
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 25, 25 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_WaterTrail.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { -0.200000003, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.200000003, 0 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            30
                            75
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.550000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.550000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    0.800000012
                }
                emitterName: string = "Splashes"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 500, 0 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -200, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0
                            0
                        }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.220004573, 0.689997733, 0.689997733, 0.600000024 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.999899983
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 8
                alphaRef: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Characters/Caitlyn/Skins/Skin13/Particles/Caitlyn_Skin13_Z_AlphaSlice_1.dds"
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 45, 45 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.699999988, 0.699999988, 0.699999988 }
                            { 1.10000002, 1.10000002, 1.10000002 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Map12_Backtrack_Splash_2x2.dds"
                birthFrameRate: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "hotGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 45 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.549019635, 1, 0.662745118, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.700007617 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.700007617 }
                            { 1, 1, 1, 0.700007617 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 120, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "alphaGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 30 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0117647061, 0.109803922, 0.0823529437, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 160, 80, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/HA_Backtrack_Mis_Spawn.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    0.699999988
                }
                emitterName: string = "waterTimer"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 10 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.75686276, 1, 0.933333337, 0.800000012 }
                            { 0.333333343, 0.474509805, 0.701960802, 0 }
                        }
                    }
                }
                pass: i16 = 12
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0.5
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Z_Erosion.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 4, 1.5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.5, 4, 1.5 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/BilgeWater/Base_Water.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -5 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0.300000012 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.5, 0.300000012 }
                        }
                    }
                }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec2] = {
                            { -0, 0 }
                            { -0.5, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Mis_Cap_Mult.dds"
            }
        }
        particleName: string = "HAUpdate_Backtrack_Mis"
        particlePath: string = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis"
    }
    "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Active" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    3
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "Avatar"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveAttachedMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mLockMeshToAttachment: bool = true
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 1
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        constantValue: f32 = 0
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.dds"
                }
                depthBiasFactors: vec2 = { -1, -1 }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, 0.0500000007 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "darkBG"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.680003047, 0.680003047, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.680003047, 0.680003047, 0 }
                            { 1, 0.680003047, 0.680003047, 0.800000012 }
                            { 1, 0.680003047, 0.680003047, 0.800000012 }
                            { 1, 0.680003047, 0.680003047, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 200, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 150
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    0.25
                }
                lifetime: option[f32] = {
                    4.5
                }
                emitterName: string = "GlowTrail"
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mMode: u8 = 1
                        mCutoff: f32 = 500
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 500, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.70707339
                            1
                        }
                        values: list[vec4] = {
                            { 0.607843161, 1, 0.839215696, 0 }
                            { 0.109803922, 0.988235295, 1, 1 }
                            { 0.113725491, 0.352941185, 0.427450985, 1 }
                            { 0.0470588244, 0.0509803928, 0.188235298, 1 }
                        }
                    }
                }
                pass: i16 = 10
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Trail_WispSmoke.dds"
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0250000004
                            0.100000001
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.699999988, 0.699999988, 0.699999988 }
                            { 1, 1, 1 }
                            { 0.949999988, 0.949999988, 0.949999988 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Trail_WispSmoke.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "brightFG"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.510002315, 1, 0.919996977, 0.500007629 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 0.510002315, 1, 0.919996977, 0 }
                            { 0.510002315, 1, 0.919996977, 0.250007629 }
                            { 0.510002315, 1, 0.919996977, 0.500007629 }
                            { 0.510002315, 1, 0.919996977, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 140, 50 }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0
                            20
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.5
                            0.25
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    4.5
                }
                emitterName: string = "Basic"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.200000003 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 100, 50, 0 }
                            { 200, 100, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0
                            20
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.5
                            0.25
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    4
                }
                emitterName: string = "Basic1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.200000003 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0313725509, 0.113725491, 0.117647059, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0313725509, 0.113725491, 0.117647059, 0 }
                            { 0.0313725509, 0.113725491, 0.117647059, 1 }
                            { 0.0313725509, 0.113725491, 0.117647059, 0 }
                        }
                    }
                }
                pass: i16 = -1
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 50, 100, 0 }
                            { 100, 200, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.240366966
                            0.425688088
                            1
                        }
                        values: list[vec3] = {
                            { 1.5, 1, 1 }
                            { 0.413461536, 0.899753034, 0.759633005 }
                            { 0.201923072, 0.740049422, 0.574311912 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Wisps_2x2.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0
                            20
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.5
                            0.25
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                lifetime: option[f32] = {
                    4.5
                }
                emitterName: string = "Basic2"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.200000003 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0313725509, 0.113725491, 0.117647059, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0313725509, 0.113725491, 0.117647059, 0 }
                            { 0.0313725509, 0.113725491, 0.117647059, 1 }
                            { 0.0313725509, 0.113725491, 0.117647059, 0 }
                        }
                    }
                }
                pass: i16 = -1
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 50, 100, 0 }
                            { 100, 200, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.240366966
                            0.425688088
                            1
                        }
                        values: list[vec3] = {
                            { 1.5, 1, 1 }
                            { 0.413461536, 0.899753034, 0.759633005 }
                            { 0.201923072, 0.740049422, 0.574311912 }
                            { 0, 0, 0 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Maps/Particles/HA/Item_MarinersVengeance_Clouds_2x2.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 4.19999981
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    4.5
                }
                isSingleParticle: flag = true
                emitterName: string = "endFlash"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.719996929, 0.719996929, 0.800000012 }
                }
                pass: i16 = 10
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 500, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.300000012, 0.300000012, 0.300000012 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Z_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "darkBG1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.680003047, 0.680003047, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.680003047, 0.680003047, 0 }
                            { 1, 0.680003047, 0.680003047, 0.400006115 }
                            { 1, 0.680003047, 0.680003047, 0.800000012 }
                            { 1, 0.680003047, 0.680003047, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 200, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/bigglow02.dds"
                textureMult: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_Timer_Ring_Mult.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                particleUVScrollRateMult: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 3 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            1
                        }
                        values: list[vec2] = {
                            { 0, 0.300000012 }
                            { 0, 0.600000024 }
                            { 0, 1.20000005 }
                            { 0, 3 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    3
                }
                lifetime: option[f32] = {
                    0.200000003
                }
                isSingleParticle: flag = true
                emitterName: string = "avatarAdd"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveAttachedMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mLockMeshToAttachment: bool = true
                    }
                }
                blendMode: u8 = 4
                pass: i16 = 2
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.dds"
                }
                depthBiasFactors: vec2 = { -1, -2 }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Maps/Particles/HA/HAUpdate_Backtrack_TidalPull.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, 0.0500000007 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "Item_MarinersVengeance_Active"
        particlePath: string = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Active"
    }
    "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Dawn" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    0.300000012
                }
                isSingleParticle: flag = true
                emitterName: string = "ArrivalFlash"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.423529416, 0, 0.690196097, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                            { 1.60000002, 1.60000002, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                emitterName: string = "glow"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.403921574, 0.298039228, 1, 0.329411775 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -2
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -50
                                    50
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 108, 108, 108 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_hit_flash.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                isSingleParticle: flag = true
                emitterName: string = "SoftBeamsBurst"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.68235296, 0.521568656, 1, 0.643137276 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0399999991
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.75
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                emitterName: string = "SoftBeams"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 85, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.890196085, 0.490196079, 1, 0.270588249 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.781002998 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.781002998 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500100017
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -45
                                    -135
                                    -180
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0
                                    -180
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 40, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 60, 40, 15 }
                            { 60, 40, 4.5 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 1 }
                            { 8, 3, 1.20000005 }
                            { 6, 5, 1.75 }
                            { 0, 7, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_Lightbeams_1x4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 4, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 25000
                }
                isSingleParticle: flag = true
                emitterName: string = "healthIcon"
                importance: u8 = 2
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/ARAMHealthPack.scb"
                    }
                }
                blendMode: u8 = 3
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.819607913, 0.819607913, 0.819607913, 1 }
                }
                pass: i16 = 1
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.69599998, 0.579999983, 0.579999983 }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_Dawn.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                emitterName: string = "healspark3"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.172549024, 0.435294122, 1, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 0.474510014, 1, 0.870588005, 1 }
                            { 0, 0.431373, 0.811765015, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.29999995
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.8000002
                }
                isSingleParticle: flag = true
                emitterName: string = "healsparkBurst"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.79999995, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1.79999995, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 1, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        30
                                        90
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        0.5
                                        0.50999999
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        -0.699999988
                                        0.699999988
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 1, 40 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                0x4ffce322: pointer = 0xb13097f0 {
                    scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.349019617, 1, 0.654901981 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.901961029, 0.411765009, 0 }
                            { 0.474510014, 1, 0.870588005, 1 }
                            { 0, 0.431373, 0.811765015, 1 }
                            { 0.0313730016, 0, 1, 0 }
                        }
                    }
                }
                pass: i16 = 62
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.499000013
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.200000003
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 40, 40 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0.699999988, 1, 1 }
                            { 0.150000006, 0.150000006, 0.150000006 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/ARAMHealthPack_4x4_Sparkle.DDS"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 5000
        particleName: string = "ARAMHealthPickup_Dawn"
        particlePath: string = "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Dawn"
        flags: u8 = 197
    }
    0x16ad1dc1 = MapSkin {
        name: string = "10Year"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mMapObjectsCFG: string = "ObjectCFG_10Year.cfg"
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0x3e389e7e = MapSkin {
        name: string = "StarGuardian"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0x7447a7bb = MapSkin {
        name: string = "Bilgewater"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Bilgewater"
        mMinimapBackgroundConfig: embed = MinimapBackgroundConfig {
            mDefaultTextureName: string = "2DLevelMiniMap_Bilgewater.dds"
        }
        mMapObjectsCFG: string = "ObjectCFG_Bilgewater.cfg"
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0x7fe34d46 = MapSkin {
        name: string = "Snowdown"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
    }
    0x81732275 = MapSkin {
        name: string = "Odyssey"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
    }
    0xa0000071 = MapSkin {
        name: string = "PoolParty"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
    }
    0xc860963a = MapSkin {
        name: string = "Default"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0xadbc3928 = ResourceResolver {
        resourceMap: map[hash,link] = {
            "HAUpdate_Spell_Block_Spell_cas" = "Maps/Shipping/Map12/Particles/HAUpdate_Spell_Block_Spell_cas"
            "HAUpdate_Return_Timing_buf_1" = "Maps/Shipping/Map12/Particles/HAUpdate_Return_Timing_buf_1"
            "HAUpdate_Backtrack_Shield" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Shield"
            "HAUpdate_Backtrack_Mis_Spawn" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis_Spawn"
            "HAUpdate_Backtrack_Cas" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Cas"
            "HAUpdate_Backtrack_Mis" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Mis"
            "HAUpdate_Backtrack_Timer" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Timer"
            "HAUpdate_Backtrack_Pull" = "Maps/Shipping/Map12/Particles/HAUpdate_Backtrack_Pull"
            "Item_MarinersVengeance_Passive" = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Passive"
            "Item_MarinersVengeance_Cleanse" = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Cleanse"
            "Item_MarinersVengeance_Active" = "Maps/Shipping/Map12/Particles/Item_MarinersVengeance_Active"
            "FirstBlood_BattleRoyale_circle" = "Maps/Shipping/Map12/Particles/FirstBlood_BattleRoyale_circle"
            "FirstBlood_Danger_AOE_Burning" = "Maps/Shipping/Map12/Particles/FirstBlood_Danger_AOE_Burning"
            "FirstBlood_RelicBuff_Tar" = "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_Tar"
            "FirstBlood_RelicBuff_TarSmoke" = "Maps/Shipping/Map12/Particles/FirstBlood_RelicBuff_TarSmoke"
            "Poro_Throw_Base" = "Maps/Shipping/Map12/Particles/Poro_Throw_Base"
            "Poro_Throw_Skin01" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin01"
            "Poro_Throw_Skin02" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin02"
            "Poro_Throw_Skin03" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin03"
            "Poro_Throw_Skin04" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin04"
            "Poro_Throw_Skin05" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin05"
            "Poro_Throw_Skin06" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin06"
            "Poro_Throw_Skin07" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin07"
            "Poro_Throw_Skin08" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin08"
            "Poro_Throw_Skin09" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin09"
            "Poro_Throw_Skin10" = "Maps/Shipping/Map12/Particles/Poro_Throw_Skin10"
            "ARAMHealthPickup" = "Maps/Shipping/Map12/Particles/ARAMHealthPickup"
            "ARAMHealthPickup_Dawn" = "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Dawn"
            "ARAMHealthPickup_Night" = "Maps/Shipping/Map12/Particles/ARAMHealthPickup_Night"
        }
    }
    0xd087b5a8 = MapSkin {
        name: string = "AprilFools2019"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0xddfcf6f1 = MapSkin {
        name: string = "Trueshot"
        mMapContainerLink: string = "Maps/MapGeometry/Map12/Base"
        mMapObjectsCFG: string = "ObjectCFG_Trueshot.cfg"
        mObjectSkinFallbacks: map[hash,i32] = {
            "HA_ChaosMinionMelee" = 0
            "HA_ChaosMinionRanged" = 0
            "HA_ChaosMinionSiege" = 0
            "HA_ChaosMinionSuper" = 0
            "HA_OrderMinionMelee" = 0
            "HA_OrderMinionRanged" = 0
            "HA_OrderMinionSiege" = 0
            "HA_OrderMinionSuper" = 0
        }
        mResourceResolvers: list[link] = {
            0xadbc3928
        }
    }
    0x27f4caaf = GameModeConstants {
        mGroups: map[hash,embed] = {
            "Misc" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "SuppressRunesMasteriesPerks" = GameModeConstantBool {}
                    "IsBattleTraining" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "SuppressLevelUpEffect" = GameModeConstantBool {}
                    "LoadscreenSettingsFile" = GameModeConstantString {
                        mValue: string = "TutorialSettings.ini"
                    }
                    "UseRelicSystem" = GameModeConstantBool {}
                    "SuppressVisionUpdate" = GameModeConstantBool {}
                }
            }
            0x5cb02b41 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_AmbientGoldAmount" = GameModeConstantFloat {
                        mValue: f32 = 27.5
                    }
                    "ai_AmbientGoldInterval" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmount" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmountTutorial" = GameModeConstantFloat {}
                    "ai_AmbientXPDelay" = GameModeConstantFloat {}
                    "ai_AmbientXPInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ai_levelUp_healthGainNetGain" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ai_levelUp_healthGainPercentMissingPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "events_TimeForLastMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "events_TimeForMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                    "events_TimerForAssist" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                }
            }
            0x0ffa6be3 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "aiExp_bonusExpLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativePercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNegativePercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_timeForKillCreditAfterDeath" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                }
            }
            "Buildings" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "bar_Armor" = GameModeConstantFloat {}
                    "bar_MaxHP" = GameModeConstantFloat {
                        mValue: f32 = 4000
                    }
                    "bar_MaxHPTutorial" = GameModeConstantFloat {
                        mValue: f32 = 1500
                    }
                    "events_TimerForBuildingKillCredit" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "hq_EoGNexusChangeSkinTime" = GameModeConstantFloat {
                        mValue: f32 = 3.5
                    }
                    "hq_EoGPanTime" = GameModeConstantFloat {
                        mValue: f32 = 3
                    }
                    "hq_EoGUseNexusDeathAnimation" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "inhib_UseDeathAndRespawnAnimations" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Camera" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cam_FarZ" = GameModeConstantFloat {
                        mValue: f32 = 50000
                    }
                    "cam_KeyboardOrbitSpeedX" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "cam_KeyboardOrbitSpeedY" = GameModeConstantFloat {
                        mValue: f32 = 50
                    }
                    "cam_MaxX" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MaxY" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MinX" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "cam_MinY" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "OverrideStartingCameraActive" = GameModeConstantBool {}
                    "OverrideStartingCameraPosition" = GameModeConstantVector3f {}
                    "CameraMapConstrainOffsetLeft" = GameModeConstantFloat {
                        mValue: f32 = -10000
                    }
                    "CameraMapConstrainOffsetRight" = GameModeConstantFloat {
                        mValue: f32 = 10000
                    }
                    "CameraMapConstrainOffsetTop" = GameModeConstantFloat {
                        mValue: f32 = 6000
                    }
                    "CameraMapConstrainOffsetBottom" = GameModeConstantFloat {
                        mValue: f32 = -2000
                    }
                }
            }
            "characters" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_DefaultPetReturnRadius" = GameModeConstantFloat {
                        mValue: f32 = 200
                    }
                    "ai_ExpRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                    "ai_GoldRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ai_MaximumHPMaxPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "ai_PathIgnoresBuildings" = GameModeConstantBool {}
                    "ai_PostAvoidanceFilterDuration" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "ai_PostAvoidanceRotFilterStrength" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "ai_PostAvoidanceRotFilterStrengthAccel" = GameModeConstantFloat {
                        mValue: f32 = 0.125
                    }
                    "ai_StartingGold" = GameModeConstantFloat {
                        mValue: f32 = 1400
                    }
                    "ai_TargetDistanceFactorPerAttacker" = GameModeConstantFloat {
                        mValue: f32 = 0.800000012
                    }
                    "ai_TargetDistanceFactorPerNeightbor" = GameModeConstantFloat {
                        mValue: f32 = 0.600000024
                    }
                    "ai_TargetMaxNumAttackers" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "ai_TargetRangeFactor" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "ar_AICharmedAcquisitionRange" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ar_ClosingAttackRangeModifier" = GameModeConstantFloat {
                        mValue: f32 = 300
                    }
                    "ar_stopattackrangemodifier" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "ca_MinCastRotationSpeed" = GameModeConstantFloat {
                        mValue: f32 = 250
                    }
                    "ca_RevealAttackerRange" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "ca_RevealAttackerTimeOut" = GameModeConstantFloat {
                        mValue: f32 = 4.5
                    }
                    "defaultstats_LocalGold" = GameModeConstantBool {}
                    "defaultstats_LocalGoldMulti" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "sv_SpellRatio" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "sv_SpellAoERatio" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    0x68a3034b = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0x2c03dd32 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xd7e2e65f = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                    0xfd42ac78 = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0xddfa5b65 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xdf5d237e = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                }
            }
            0x2b322d93 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "dr_BuildingToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_UnitToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToHero" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x136d1a0f = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "gcd_AttackDelay" = GameModeConstantFloat {
                        mValue: f32 = 1.60000002
                    }
                    "gcd_AttackDelayCastPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "gcd_AttackMaxDelay" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_AttackMinDelay" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "gcd_CooldownMinimum" = GameModeConstantFloat {}
                    "gcd_PercentCooldownModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.400000006
                    }
                    "gcd_PercentEXPBonusMaximum" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_PercentEXPBonusMinimum" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "gcd_PercentRespawnTimeModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.949999988
                    }
                }
            }
            "Gold" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "Gold_Max" = GameModeConstantFloat {
                        mValue: f32 = 100000
                    }
                    "SplitLocalGold" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "GrantLocalGoldToDeadHeroes" = GameModeConstantBool {}
                    "MaxLocalGoldPercentage" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x6ec75fd4 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "mvm_FlatDRFromOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_LevelDiffCap" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "mvm_PercentDamageToOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_PercentDamageToOtherMinionsByTowerAdvantage" = GameModeConstantFloat {}
                    "mvm_StartTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "mvm_UpdateInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedFlatIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantagePercentIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantageExponentialIncrease" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedCap" = GameModeConstantFloat {}
                    0xd3682c43 = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    0x45a7b70e = GameModeConstantBool {}
                }
            }
            "MINIONS" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_MinionTargetingHeroBoost" = GameModeConstantFloat {
                        mValue: f32 = 150
                    }
                }
            }
            "MOUSE" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cr_DragRepeatTime" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "cr_MouseScrollSpeed" = GameModeConstantFloat {
                        mValue: f32 = 3900
                    }
                }
            }
            0x57bdc13e = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "sp_HPMaxPenaltyRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0799999982
                    }
                    "sp_HealthRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0850000009
                    }
                    "sp_ManaRegenPercent" = GameModeConstantFloat {}
                    "sp_RegenRadius" = GameModeConstantFloat {
                        mValue: f32 = 825
                    }
                    "sp_RegenTickInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x3b2fec82 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ann_AutoAnnounceMinions" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ann_AutoWelcome" = GameModeConstantBool {}
                    "mission_AmbientGoldStartTime" = GameModeConstantFloat {
                        mValue: f32 = 60
                    }
                    "DisableFogOfWar" = GameModeConstantBool {}
                    "UseItemManager" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "UseSummonerForStartOfGameConstants" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "SpawnNoRender" = GameModeConstantBool {}
                    "SpawnForceRenderParticles" = GameModeConstantBool {}
                    "SpawnFadedOutBeforeTime" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                }
            }
            "UI" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "DisableInGameChatConsole" = GameModeConstantBool {}
                    "HidePlayerStatsByDefault" = GameModeConstantBool {}
                    "HideFPSAndLatencyByDefault" = GameModeConstantBool {}
                    "SimplifiedTooltips" = GameModeConstantBool {}
                    "HideHUDAtStartOfGame" = GameModeConstantBool {}
                    "LoadHudHighlightOptionalBin" = GameModeConstantBool {}
                    "DisableScoreboard" = GameModeConstantBool {}
                    "ShowDeathRecap" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    0x8b21dfc2 = GameModeConstantBool {}
                }
            }
            "Bounty" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "BaseGold" = GameModeConstantFloat {
                        mValue: f32 = 300
                    }
                    "MinStreakKills" = GameModeConstantInteger {
                        mValue: i32 = 2
                    }
                    "MinGoldPenaltyPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    "DeathStreakPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "MinDeathStreaks" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "FirstBloodBonus" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "GoldPoolForAssist" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "AssistDeathStreak" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "MinionKillRatio" = GameModeConstantFloat {
                        mValue: f32 = 0.00100000005
                    }
                    "AssistPoolMaxValueTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "AssistPoolMinValueTime" = GameModeConstantFloat {
                        mValue: f32 = 90
                    }
                    "AssistPoolMax" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "AssistPoolMin" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "AssistDurationOverride" = GameModeConstantFloat {
                        mValue: f32 = 15
                    }
                    "ShutdownGold_Global_PerLevel" = GameModeConstantFloatPerLevel {}
                    "ShutdownGold_Participants_PercentageForKiller" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_Participants_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            150
                            300
                            375
                            450
                            500
                            550
                            600
                            650
                            700
                            750
                            800
                            850
                            900
                            950
                            1000
                            1050
                            1100
                            1150
                            1200
                            1250
                            1300
                            1350
                            1400
                            1450
                            1500
                            1550
                            1600
                            1650
                            1700
                            1750
                            1800
                            1850
                        }
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMin" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMax" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMin" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMax" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            0
                            50
                            50
                            50
                            50
                            50
                        }
                    }
                    "EnableBountiesInBlockBuilder" = GameModeConstantBool {}
                    0xe721231e = GameModeConstantFloat {
                        mValue: f32 = 6
                    }
                }
            }
            "LoadingScreen" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ShowBeta" = GameModeConstantBool {}
                    "ShowSummonerSpells" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ShowMastery" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Companions" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "FollowerEnabled" = GameModeConstantBool {}
                    "LeashDistance" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "TeleportDistance" = GameModeConstantFloat {
                        mValue: f32 = 3000
                    }
                    "AvoidanceDelta" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "OwnerSpeedMult" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "LeashDistanceMax" = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    "EnemyAvoidance" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                }
            }
            "Performance" = GameModeConstantsGroup {}
        }
    }
    0x332b9e84 = GameModeConstants {
        mGroups: map[hash,embed] = {
            "Misc" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "SuppressRunesMasteriesPerks" = GameModeConstantBool {}
                    "IsBattleTraining" = GameModeConstantBool {}
                    "SuppressLevelUpEffect" = GameModeConstantBool {}
                    "LoadscreenSettingsFile" = GameModeConstantString {
                        mValue: string = "DefaultSettings.ini"
                    }
                    "UseRelicSystem" = GameModeConstantBool {}
                    "SuppressVisionUpdate" = GameModeConstantBool {}
                }
            }
            0x5cb02b41 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_AmbientGoldAmount" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "ai_AmbientGoldInterval" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmount" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmountTutorial" = GameModeConstantFloat {}
                    "ai_AmbientXPDelay" = GameModeConstantFloat {}
                    "ai_AmbientXPInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ai_levelUp_healthGainNetGain" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ai_levelUp_healthGainPercentMissingPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "events_TimeForLastMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "events_TimeForMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                    "events_TimerForAssist" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                }
            }
            0x0ffa6be3 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "aiExp_bonusExpLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativePercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNegativePercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_timeForKillCreditAfterDeath" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                }
            }
            "Buildings" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "bar_Armor" = GameModeConstantFloat {}
                    "bar_MaxHP" = GameModeConstantFloat {
                        mValue: f32 = 4000
                    }
                    "bar_MaxHPTutorial" = GameModeConstantFloat {
                        mValue: f32 = 1500
                    }
                    "events_TimerForBuildingKillCredit" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "hq_EoGNexusChangeSkinTime" = GameModeConstantFloat {
                        mValue: f32 = 3.5
                    }
                    "hq_EoGPanTime" = GameModeConstantFloat {
                        mValue: f32 = 3
                    }
                    "hq_EoGUseNexusDeathAnimation" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "inhib_UseDeathAndRespawnAnimations" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Camera" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cam_FarZ" = GameModeConstantFloat {
                        mValue: f32 = 50000
                    }
                    "cam_KeyboardOrbitSpeedX" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "cam_KeyboardOrbitSpeedY" = GameModeConstantFloat {
                        mValue: f32 = 50
                    }
                    "cam_MaxX" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MaxY" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MinX" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "cam_MinY" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "OverrideStartingCameraActive" = GameModeConstantBool {}
                    "OverrideStartingCameraPosition" = GameModeConstantVector3f {}
                    "CameraMapConstrainOffsetLeft" = GameModeConstantFloat {
                        mValue: f32 = -10000
                    }
                    "CameraMapConstrainOffsetRight" = GameModeConstantFloat {
                        mValue: f32 = 10000
                    }
                    "CameraMapConstrainOffsetTop" = GameModeConstantFloat {
                        mValue: f32 = 6000
                    }
                    "CameraMapConstrainOffsetBottom" = GameModeConstantFloat {
                        mValue: f32 = -2000
                    }
                }
            }
            "characters" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_DefaultPetReturnRadius" = GameModeConstantFloat {
                        mValue: f32 = 200
                    }
                    "ai_ExpRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                    "ai_GoldRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ai_MaximumHPMaxPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "ai_PathIgnoresBuildings" = GameModeConstantBool {}
                    "ai_PostAvoidanceFilterDuration" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "ai_PostAvoidanceRotFilterStrength" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "ai_PostAvoidanceRotFilterStrengthAccel" = GameModeConstantFloat {
                        mValue: f32 = 0.125
                    }
                    "ai_StartingGold" = GameModeConstantFloat {
                        mValue: f32 = 1400
                    }
                    "ai_TargetDistanceFactorPerAttacker" = GameModeConstantFloat {
                        mValue: f32 = 0.800000012
                    }
                    "ai_TargetDistanceFactorPerNeightbor" = GameModeConstantFloat {
                        mValue: f32 = 0.600000024
                    }
                    "ai_TargetMaxNumAttackers" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "ai_TargetRangeFactor" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "ar_AICharmedAcquisitionRange" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ar_ClosingAttackRangeModifier" = GameModeConstantFloat {
                        mValue: f32 = 300
                    }
                    "ar_stopattackrangemodifier" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "ca_MinCastRotationSpeed" = GameModeConstantFloat {
                        mValue: f32 = 250
                    }
                    "ca_RevealAttackerRange" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "ca_RevealAttackerTimeOut" = GameModeConstantFloat {
                        mValue: f32 = 4.5
                    }
                    "defaultstats_LocalGold" = GameModeConstantBool {}
                    "defaultstats_LocalGoldMulti" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "sv_SpellRatio" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "sv_SpellAoERatio" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    0x68a3034b = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0x2c03dd32 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xd7e2e65f = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                    0xfd42ac78 = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0xddfa5b65 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xdf5d237e = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                }
            }
            0x2b322d93 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "dr_BuildingToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_UnitToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToHero" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x136d1a0f = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "gcd_AttackDelay" = GameModeConstantFloat {
                        mValue: f32 = 1.60000002
                    }
                    "gcd_AttackDelayCastPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "gcd_AttackMaxDelay" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_AttackMinDelay" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "gcd_CooldownMinimum" = GameModeConstantFloat {}
                    "gcd_PercentCooldownModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.400000006
                    }
                    "gcd_PercentEXPBonusMaximum" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_PercentEXPBonusMinimum" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "gcd_PercentRespawnTimeModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.949999988
                    }
                }
            }
            "Gold" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "Gold_Max" = GameModeConstantFloat {
                        mValue: f32 = 100000
                    }
                    "SplitLocalGold" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "GrantLocalGoldToDeadHeroes" = GameModeConstantBool {}
                    "MaxLocalGoldPercentage" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x6ec75fd4 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "mvm_FlatDRFromOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_LevelDiffCap" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "mvm_PercentDamageToOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_PercentDamageToOtherMinionsByTowerAdvantage" = GameModeConstantFloat {}
                    "mvm_StartTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "mvm_UpdateInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedFlatIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantagePercentIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantageExponentialIncrease" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedCap" = GameModeConstantFloat {}
                    0xd3682c43 = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    0x45a7b70e = GameModeConstantBool {}
                }
            }
            "MINIONS" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_MinionTargetingHeroBoost" = GameModeConstantFloat {
                        mValue: f32 = 150
                    }
                }
            }
            "MOUSE" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cr_DragRepeatTime" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "cr_MouseScrollSpeed" = GameModeConstantFloat {
                        mValue: f32 = 3900
                    }
                }
            }
            0x57bdc13e = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "sp_HPMaxPenaltyRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0799999982
                    }
                    "sp_HealthRegenPercent" = GameModeConstantFloat {}
                    "sp_ManaRegenPercent" = GameModeConstantFloat {}
                    "sp_RegenRadius" = GameModeConstantFloat {
                        mValue: f32 = 825
                    }
                    "sp_RegenTickInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x3b2fec82 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ann_AutoAnnounceMinions" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ann_AutoWelcome" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "mission_AmbientGoldStartTime" = GameModeConstantFloat {
                        mValue: f32 = 60
                    }
                    "DisableFogOfWar" = GameModeConstantBool {}
                    "UseItemManager" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "UseSummonerForStartOfGameConstants" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "SpawnNoRender" = GameModeConstantBool {}
                    "SpawnForceRenderParticles" = GameModeConstantBool {}
                    "SpawnFadedOutBeforeTime" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                }
            }
            "UI" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "DisableInGameChatConsole" = GameModeConstantBool {}
                    "HidePlayerStatsByDefault" = GameModeConstantBool {}
                    "HideFPSAndLatencyByDefault" = GameModeConstantBool {}
                    "SimplifiedTooltips" = GameModeConstantBool {}
                    "HideHUDAtStartOfGame" = GameModeConstantBool {}
                    "LoadHudHighlightOptionalBin" = GameModeConstantBool {}
                    "DisableScoreboard" = GameModeConstantBool {}
                    "ShowDeathRecap" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    0x8b21dfc2 = GameModeConstantBool {}
                }
            }
            "Bounty" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "BaseGold" = GameModeConstantFloat {
                        mValue: f32 = 180
                    }
                    "MinStreakKills" = GameModeConstantInteger {
                        mValue: i32 = 2
                    }
                    "MinGoldPenaltyPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0500000007
                    }
                    "DeathStreakPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.209999993
                    }
                    "MinDeathStreaks" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "FirstBloodBonus" = GameModeConstantFloat {
                        mValue: f32 = 90
                    }
                    "GoldPoolForAssist" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "AssistDeathStreak" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "MinionKillRatio" = GameModeConstantFloat {
                        mValue: f32 = 0.00100000005
                    }
                    "AssistPoolMaxValueTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "AssistPoolMinValueTime" = GameModeConstantFloat {
                        mValue: f32 = 90
                    }
                    "AssistPoolMax" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "AssistPoolMin" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "AssistDurationOverride" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "ShutdownGold_Global_PerLevel" = GameModeConstantFloatPerLevel {}
                    "ShutdownGold_Participants_PercentageForKiller" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_Participants_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            150
                            300
                            375
                            450
                            500
                            550
                            600
                            650
                            700
                            750
                            800
                            850
                            900
                            950
                            1000
                            1050
                            1100
                            1150
                            1200
                            1250
                            1300
                            1350
                            1400
                            1450
                            1500
                            1550
                            1600
                            1650
                            1700
                            1750
                            1800
                            1850
                        }
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMin" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMax" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMin" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMax" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            0
                            50
                            50
                            50
                            50
                            50
                        }
                    }
                    "EnableBountiesInBlockBuilder" = GameModeConstantBool {}
                    0xe721231e = GameModeConstantFloat {
                        mValue: f32 = 6
                    }
                }
            }
            "LoadingScreen" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ShowBeta" = GameModeConstantBool {}
                    "ShowSummonerSpells" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ShowMastery" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Companions" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "FollowerEnabled" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "LeashDistance" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "TeleportDistance" = GameModeConstantFloat {
                        mValue: f32 = 3000
                    }
                    "AvoidanceDelta" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "OwnerSpeedMult" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "LeashDistanceMax" = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    "EnemyAvoidance" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                }
            }
            "Performance" = GameModeConstantsGroup {}
        }
    }
    0x34b335c7 = NeutralTimers {
        mSceneName: string = "BMTimers"
        0xee974cae: string = "NeutralTimers_HA_FIRSTBLOOD"
        mTimers: map[hash,embed] = {
            0xa75221f7 = NeutralTimerData {
                mTimerKeyName: string = "OrderOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltipFirstBlood"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_OrderOuterRelicFirstBlood"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_OrderOuterRelicFirstBlood"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_OrderOuterRelicFirstBlood"
            }
            0xbc7d570f = NeutralTimerData {
                mTimerKeyName: string = "ChaosOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltipFirstBlood"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_ChaosOuterRelicFirstBlood"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_ChaosOuterRelicFirstBlood"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_ChaosOuterRelicFirstBlood"
            }
        }
    }
    0x45163f15 = ExperienceModData {
        mPlayerMinionSplitXp: list[f32] = {
            0.920000017
            0.600000024
            0.400000006
            0.300000012
            0.239999995
        }
    }
    0x748598d2 = SurrenderData {
        mTypeData: map[u8,embed] = {
            0 = SurrenderTypeData {
                VoteTimeout: f32 = 30
                windowLength: f32 = 30
                startTime: f32 = 180
                percentageRequired: f32 = 0.300000012
            }
            2 = SurrenderTypeData {
                startTime: f32 = 720
            }
            1 = SurrenderTypeData {
                windowLength: f32 = 300
                startTime: f32 = 480
                percentageRequired: f32 = 1
            }
        }
    }
    0x75dfce0c = NeutralTimers {
        mSceneName: string = "BWTimers"
        0xee974cae: string = "NeutralTimers_HA_KINGPORO"
        mTimers: map[hash,embed] = {
            0x80c24a7c = NeutralTimerData {
                mTimerKeyName: string = "OrderInnerRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_OrderInnerRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_AlliedInnerRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_EnemyInnerRelic"
            }
            0xa75221f7 = NeutralTimerData {
                mTimerKeyName: string = "OrderOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_OrderOuterRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_AlliedOuterRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_EnemyOuterRelic"
            }
            0x9cfc9134 = NeutralTimerData {
                mTimerKeyName: string = "ChaosInnerRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_ChaosInnerReclic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_EnemyInnerRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_AlliedInnerRelic"
            }
            0xbc7d570f = NeutralTimerData {
                mTimerKeyName: string = "ChaosOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_ChaosOuterRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_EnemyOuterRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_AlliedOuterRelic"
            }
        }
    }
    0x8f97a940 = GameModeConstants {
        mGroups: map[hash,embed] = {
            "Misc" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "SuppressRunesMasteriesPerks" = GameModeConstantBool {}
                    "IsBattleTraining" = GameModeConstantBool {}
                    "SuppressLevelUpEffect" = GameModeConstantBool {}
                    "LoadscreenSettingsFile" = GameModeConstantString {
                        mValue: string = "DefaultSettings.ini"
                    }
                    "UseRelicSystem" = GameModeConstantBool {}
                    "SuppressVisionUpdate" = GameModeConstantBool {}
                }
            }
            0x5cb02b41 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_AmbientGoldAmount" = GameModeConstantFloat {
                        mValue: f32 = 27.5
                    }
                    "ai_AmbientGoldInterval" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmount" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmountTutorial" = GameModeConstantFloat {}
                    "ai_AmbientXPDelay" = GameModeConstantFloat {}
                    "ai_AmbientXPInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ai_levelUp_healthGainNetGain" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ai_levelUp_healthGainPercentMissingPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "events_TimeForLastMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "events_TimeForMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                    "events_TimerForAssist" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                }
            }
            0x0ffa6be3 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "aiExp_bonusExpLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLaneLevelStart" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeLevelDeltaCap" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativeNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpNegativePercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNegativePercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2" = GameModeConstantFloat {}
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2UBound" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_timeForKillCreditAfterDeath" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                }
            }
            "Buildings" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "bar_Armor" = GameModeConstantFloat {}
                    "bar_MaxHP" = GameModeConstantFloat {
                        mValue: f32 = 4000
                    }
                    "bar_MaxHPTutorial" = GameModeConstantFloat {
                        mValue: f32 = 1500
                    }
                    "events_TimerForBuildingKillCredit" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "hq_EoGNexusChangeSkinTime" = GameModeConstantFloat {
                        mValue: f32 = 3.5
                    }
                    "hq_EoGPanTime" = GameModeConstantFloat {
                        mValue: f32 = 3
                    }
                    "hq_EoGUseNexusDeathAnimation" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "inhib_UseDeathAndRespawnAnimations" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Camera" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cam_FarZ" = GameModeConstantFloat {
                        mValue: f32 = 50000
                    }
                    "cam_KeyboardOrbitSpeedX" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "cam_KeyboardOrbitSpeedY" = GameModeConstantFloat {
                        mValue: f32 = 50
                    }
                    "cam_MaxX" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MaxY" = GameModeConstantFloat {
                        mValue: f32 = 12500
                    }
                    "cam_MinX" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "cam_MinY" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "OverrideStartingCameraActive" = GameModeConstantBool {}
                    "OverrideStartingCameraPosition" = GameModeConstantVector3f {}
                    "CameraMapConstrainOffsetLeft" = GameModeConstantFloat {
                        mValue: f32 = -10000
                    }
                    "CameraMapConstrainOffsetRight" = GameModeConstantFloat {
                        mValue: f32 = 10000
                    }
                    "CameraMapConstrainOffsetTop" = GameModeConstantFloat {
                        mValue: f32 = 6000
                    }
                    "CameraMapConstrainOffsetBottom" = GameModeConstantFloat {
                        mValue: f32 = -2000
                    }
                }
            }
            "characters" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_DefaultPetReturnRadius" = GameModeConstantFloat {
                        mValue: f32 = 200
                    }
                    "ai_ExpRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                    "ai_GoldRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ai_MaximumHPMaxPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "ai_PathIgnoresBuildings" = GameModeConstantBool {}
                    "ai_PostAvoidanceFilterDuration" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "ai_PostAvoidanceRotFilterStrength" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "ai_PostAvoidanceRotFilterStrengthAccel" = GameModeConstantFloat {
                        mValue: f32 = 0.125
                    }
                    "ai_StartingGold" = GameModeConstantFloat {
                        mValue: f32 = 1400
                    }
                    "ai_TargetDistanceFactorPerAttacker" = GameModeConstantFloat {
                        mValue: f32 = 0.800000012
                    }
                    "ai_TargetDistanceFactorPerNeightbor" = GameModeConstantFloat {
                        mValue: f32 = 0.600000024
                    }
                    "ai_TargetMaxNumAttackers" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "ai_TargetRangeFactor" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "ar_AICharmedAcquisitionRange" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ar_ClosingAttackRangeModifier" = GameModeConstantFloat {
                        mValue: f32 = 300
                    }
                    "ar_stopattackrangemodifier" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "ca_MinCastRotationSpeed" = GameModeConstantFloat {
                        mValue: f32 = 250
                    }
                    "ca_RevealAttackerRange" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "ca_RevealAttackerTimeOut" = GameModeConstantFloat {
                        mValue: f32 = 4.5
                    }
                    "defaultstats_LocalGold" = GameModeConstantBool {}
                    "defaultstats_LocalGoldMulti" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "sv_SpellRatio" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "sv_SpellAoERatio" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    0x68a3034b = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0x2c03dd32 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xd7e2e65f = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                    0xfd42ac78 = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0xddfa5b65 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xdf5d237e = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                }
            }
            0x2b322d93 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "dr_BuildingToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_UnitToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToHero" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x136d1a0f = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "gcd_AttackDelay" = GameModeConstantFloat {
                        mValue: f32 = 1.60000002
                    }
                    "gcd_AttackDelayCastPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "gcd_AttackMaxDelay" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_AttackMinDelay" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "gcd_CooldownMinimum" = GameModeConstantFloat {}
                    "gcd_PercentCooldownModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.400000006
                    }
                    "gcd_PercentEXPBonusMaximum" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_PercentEXPBonusMinimum" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "gcd_PercentRespawnTimeModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.949999988
                    }
                }
            }
            "Gold" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "Gold_Max" = GameModeConstantFloat {
                        mValue: f32 = 100000
                    }
                    "SplitLocalGold" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "GrantLocalGoldToDeadHeroes" = GameModeConstantBool {}
                    "MaxLocalGoldPercentage" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x6ec75fd4 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "mvm_FlatDRFromOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_LevelDiffCap" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "mvm_PercentDamageToOtherMinionsBase" = GameModeConstantFloat {}
                    "mvm_PercentDamageToOtherMinionsByTowerAdvantage" = GameModeConstantFloat {}
                    "mvm_StartTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "mvm_UpdateInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedFlatIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantagePercentIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantageExponentialIncrease" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedCap" = GameModeConstantFloat {}
                    0xd3682c43 = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    0x45a7b70e = GameModeConstantBool {}
                }
            }
            "MINIONS" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_MinionTargetingHeroBoost" = GameModeConstantFloat {
                        mValue: f32 = 150
                    }
                }
            }
            "MOUSE" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cr_DragRepeatTime" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "cr_MouseScrollSpeed" = GameModeConstantFloat {
                        mValue: f32 = 3900
                    }
                }
            }
            0x57bdc13e = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "sp_HPMaxPenaltyRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0799999982
                    }
                    "sp_HealthRegenPercent" = GameModeConstantFloat {}
                    "sp_ManaRegenPercent" = GameModeConstantFloat {}
                    "sp_RegenRadius" = GameModeConstantFloat {
                        mValue: f32 = 825
                    }
                    "sp_RegenTickInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x3b2fec82 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ann_AutoAnnounceMinions" = GameModeConstantBool {}
                    "ann_AutoWelcome" = GameModeConstantBool {}
                    "mission_AmbientGoldStartTime" = GameModeConstantFloat {
                        mValue: f32 = 60
                    }
                    "DisableFogOfWar" = GameModeConstantBool {}
                    "UseItemManager" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "UseSummonerForStartOfGameConstants" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "SpawnNoRender" = GameModeConstantBool {}
                    "SpawnForceRenderParticles" = GameModeConstantBool {}
                    "SpawnFadedOutBeforeTime" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                }
            }
            "UI" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "DisableInGameChatConsole" = GameModeConstantBool {}
                    "HidePlayerStatsByDefault" = GameModeConstantBool {}
                    "HideFPSAndLatencyByDefault" = GameModeConstantBool {}
                    "SimplifiedTooltips" = GameModeConstantBool {}
                    "HideHUDAtStartOfGame" = GameModeConstantBool {}
                    "LoadHudHighlightOptionalBin" = GameModeConstantBool {}
                    "DisableScoreboard" = GameModeConstantBool {}
                    "ShowDeathRecap" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    0x8b21dfc2 = GameModeConstantBool {}
                }
            }
            "Bounty" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "BaseGold" = GameModeConstantFloat {
                        mValue: f32 = 160
                    }
                    "MinStreakKills" = GameModeConstantInteger {
                        mValue: i32 = 2
                    }
                    "MinGoldPenaltyPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    "DeathStreakPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.0500000007
                    }
                    "MinDeathStreaks" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "FirstBloodBonus" = GameModeConstantFloat {
                        mValue: f32 = 80
                    }
                    "GoldPoolForAssist" = GameModeConstantFloat {
                        mValue: f32 = 0.583000004
                    }
                    "AssistDeathStreak" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "MinionKillRatio" = GameModeConstantFloat {
                        mValue: f32 = 0.00100000005
                    }
                    "AssistPoolMaxValueTime" = GameModeConstantFloat {}
                    "AssistPoolMinValueTime" = GameModeConstantFloat {}
                    "AssistPoolMax" = GameModeConstantFloat {
                        mValue: f32 = 0.583000004
                    }
                    "AssistPoolMin" = GameModeConstantFloat {
                        mValue: f32 = 0.583000004
                    }
                    "AssistDurationOverride" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "ShutdownGold_Global_PerLevel" = GameModeConstantFloatPerLevel {}
                    "ShutdownGold_Participants_PercentageForKiller" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_Participants_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            150
                            300
                            375
                            450
                            500
                            550
                            600
                            650
                            700
                            750
                            800
                            850
                            900
                            950
                            1000
                            1050
                            1100
                            1150
                            1200
                            1250
                            1300
                            1350
                            1400
                            1450
                            1500
                            1550
                            1600
                            1650
                            1700
                            1750
                            1800
                            1850
                        }
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMin" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMax" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMin" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMax" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            0
                            50
                            50
                            50
                            50
                            50
                        }
                    }
                    "EnableBountiesInBlockBuilder" = GameModeConstantBool {}
                    0xe721231e = GameModeConstantFloat {
                        mValue: f32 = 6
                    }
                }
            }
            "LoadingScreen" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ShowBeta" = GameModeConstantBool {}
                    "ShowSummonerSpells" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ShowMastery" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Companions" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "FollowerEnabled" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "LeashDistance" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "TeleportDistance" = GameModeConstantFloat {
                        mValue: f32 = 3000
                    }
                    "AvoidanceDelta" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "OwnerSpeedMult" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "LeashDistanceMax" = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    "EnemyAvoidance" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                }
            }
            "Performance" = GameModeConstantsGroup {}
        }
    }
    0x9b6c4191 = ExperienceCurveData {
        mExperienceRequiredPerLevel: list[f32] = {
            280
            640
            990
            1390
            1870
            2370
            2890
            3440
            4040
            4690
            5390
            6140
            7240
            8160
            9110
            10110
            11160
            20340
            22420
            24000
            25880
            27760
            29640
            31520
            33400
            35280
            37160
            39040
            40920
        }
        mExperienceGrantedForKillPerLevel: list[f32] = {
            42
            114
            186
            258
            330
            402
            434
            500
            515
            590
            640
            690
            740
            790
            840
            890
            940
            990
            1040
            1090
            1140
            1190
            1240
            1290
            1340
            1390
            1440
            1490
            1540
            1590
        }
        0x9980fa2e: list[f32] = {
            0.666000009
            0.666000009
            0.666000009
            0.666000009
            0.666000009
            0.666000009
            0.819999993
            0.819999993
            1
        }
        mLevelDifferenceExperienceMultiplier: f32 = 0.159999996
    }
    0x9cb63864 = MapLocatorArray {}
    0xa40f595b = DeathTimes {
        mTimeDeadPerLevel: list[f32] = {
            8
            9
            10
            12
            14
            16
            18
            20
            22
            24
            26
            28
            30
            32
            34
            36
            38
            40
        }
        mScalingStartTime: u32 = 1440
        mScalingIncrementTime: u32 = 60
        mScalingPercentIncrease: f32 = 0.0250000004
        mScalingPercentCap: f32 = 1.25
    }
    0xb3d105ad = ExperienceCurveData {
        mExperienceRequiredPerLevel: list[f32] = {
            100
            6200
            20000
            70000
            80000
            200000
            200001
            200002
            200003
            200004
            200005
            200006
            200007
            200008
            200009
            200010
            200011
            200012
            200013
        }
        mExperienceGrantedForKillPerLevel: list[f32] = {
            35
            95
            155
            215
            275
            335
            395
            455
            515
            590
            640
            690
            740
            790
            840
            890
            940
            990
            1040
            1090
            1140
            1190
            1240
            1290
            1340
            1390
            1440
            1490
            1540
            1590
        }
        mLevelDifferenceExperienceMultiplier: f32 = 0.159999996
    }
    0xbc3962f6 = DeathTimes {
        mTimeDeadPerLevel: list[f32] = {
            40
            40
            40
            40
            3500000
            3800000
            3800000
            4000000
            4000000
            4200000
            4200000
            4800000
            5400000
            5400000
            5900000
            5900000
            6400000
            6400000
        }
        mScalingStartTime: u32 = 1440
        mScalingIncrementTime: u32 = 60
        mScalingPercentIncrease: f32 = 0.0250000004
        mScalingPercentCap: f32 = 1.25
    }
    0xbdd5e038 = NeutralTimers {
        mSceneName: string = "BWTimers"
        0xee974cae: string = "NeutralTimers_HA_ARAM"
        mTimers: map[hash,embed] = {
            0x80c24a7c = NeutralTimerData {
                mTimerKeyName: string = "OrderInnerRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_OrderInnerRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_AlliedInnerRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_EnemyInnerRelic"
            }
            0xa75221f7 = NeutralTimerData {
                mTimerKeyName: string = "OrderOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_OrderOuterRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_AlliedOuterRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_EnemyOuterRelic"
            }
            0x9cfc9134 = NeutralTimerData {
                mTimerKeyName: string = "ChaosInnerRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_ChaosInnerReclic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_EnemyInnerRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_AlliedInnerRelic"
            }
            0xbc7d570f = NeutralTimerData {
                mTimerKeyName: string = "ChaosOuterRelic"
                mTooltip: string = "game_DynamicMenuText_[Timers]_RelicTimerTooltip"
                mTooltipCampName: string = "game_DynamicMenuText_[Timers]_ChaosOuterRelic"
                mTooltipRespawn: string = "game_DynamicMenuText_[Timers]_RelicRespawn"
                mTooltipChatNameOrder: string = "game_DynamicMenuText_[Timers]_EnemyOuterRelic"
                mTooltipChatNameChaos: string = "game_DynamicMenuText_[Timers]_AlliedOuterRelic"
            }
        }
    }
    0xbf6161db = GameModeConstants {
        mGroups: map[hash,embed] = {
            "Misc" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "SuppressRunesMasteriesPerks" = GameModeConstantBool {}
                    "IsBattleTraining" = GameModeConstantBool {}
                    "SuppressLevelUpEffect" = GameModeConstantBool {}
                    "LoadscreenSettingsFile" = GameModeConstantString {
                        mValue: string = "DefaultSettings.ini"
                    }
                    "UseRelicSystem" = GameModeConstantBool {}
                    "SuppressVisionUpdate" = GameModeConstantBool {}
                }
            }
            0x5cb02b41 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_AmbientGoldAmount" = GameModeConstantFloat {
                        mValue: f32 = 10.1999998
                    }
                    "ai_AmbientGoldInterval" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_AmbientXPAmount" = GameModeConstantFloat {}
                    "ai_AmbientXPAmountTutorial" = GameModeConstantFloat {}
                    "ai_AmbientXPDelay" = GameModeConstantFloat {}
                    "ai_AmbientXPInterval" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "ai_levelUp_healthGainNetGain" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "ai_levelUp_healthGainPercentMissingPenalty" = GameModeConstantFloat {}
                    "events_TimeForLastMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "events_TimeForMultiKill" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                    "events_TimerForAssist" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                }
            }
            0x0ffa6be3 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "aiExp_bonusExpLaneLevelDeltaMin" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "aiExp_bonusExpLaneLevelStart" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "aiExp_bonusExpLevelDeltaCap" = GameModeConstantInteger {
                        mValue: i32 = 6
                    }
                    "aiExp_bonusExpNegativeLaneLevelDeltaMin" = GameModeConstantInteger {
                        mValue: i32 = 100
                    }
                    "aiExp_bonusExpNegativeLaneLevelStart" = GameModeConstantInteger {
                        mValue: i32 = 100
                    }
                    "aiExp_bonusExpNegativeLevelDeltaCap" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "aiExp_bonusExpNegativeNeutralLevelDeltaMin" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "aiExp_bonusExpNegativeNeutralLevelDeltaOffset" = GameModeConstantInteger {
                        mValue: i32 = -1
                    }
                    "aiExp_bonusExpNegativePercentPerLaneMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNegativePercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_bonusExpNeutralLevelDeltaMin" = GameModeConstantInteger {}
                    "aiExp_bonusExpNeutralLevelDeltaOffset" = GameModeConstantInteger {}
                    "aiExp_bonusExpPercentPerLaneMinionLevel" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "aiExp_bonusExpPercentPerLaneMinionLevelC1UBound" = GameModeConstantInteger {
                        mValue: i32 = 2
                    }
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "aiExp_bonusExpPercentPerLaneMinionLevelC2UBound" = GameModeConstantInteger {
                        mValue: i32 = 30
                    }
                    "aiExp_bonusExpPercentPerNeutralMinionLevel" = GameModeConstantFloat {}
                    "aiExp_timeForKillCreditAfterDeath" = GameModeConstantFloat {
                        mValue: f32 = 10
                    }
                }
            }
            "Buildings" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "bar_Armor" = GameModeConstantFloat {}
                    "bar_MaxHP" = GameModeConstantFloat {
                        mValue: f32 = 4000
                    }
                    "bar_MaxHPTutorial" = GameModeConstantFloat {
                        mValue: f32 = 7000
                    }
                    "events_TimerForBuildingKillCredit" = GameModeConstantFloat {
                        mValue: f32 = 30
                    }
                    "hq_EoGNexusChangeSkinTime" = GameModeConstantFloat {
                        mValue: f32 = 3.5
                    }
                    "hq_EoGPanTime" = GameModeConstantFloat {
                        mValue: f32 = 3
                    }
                    "hq_EoGUseNexusDeathAnimation" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "inhib_UseDeathAndRespawnAnimations" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Camera" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cam_FarZ" = GameModeConstantFloat {
                        mValue: f32 = 22000
                    }
                    "cam_KeyboardOrbitSpeedX" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "cam_KeyboardOrbitSpeedY" = GameModeConstantFloat {
                        mValue: f32 = 50
                    }
                    "cam_MaxX" = GameModeConstantFloat {
                        mValue: f32 = 14400
                    }
                    "cam_MaxY" = GameModeConstantFloat {
                        mValue: f32 = 14765
                    }
                    "cam_MinX" = GameModeConstantFloat {
                        mValue: f32 = 800
                    }
                    "cam_MinY" = GameModeConstantFloat {
                        mValue: f32 = 520
                    }
                    "OverrideStartingCameraActive" = GameModeConstantBool {}
                    "OverrideStartingCameraPosition" = GameModeConstantVector3f {}
                    "CameraMapConstrainOffsetLeft" = GameModeConstantFloat {
                        mValue: f32 = -10000
                    }
                    "CameraMapConstrainOffsetRight" = GameModeConstantFloat {
                        mValue: f32 = 10000
                    }
                    "CameraMapConstrainOffsetTop" = GameModeConstantFloat {
                        mValue: f32 = 6000
                    }
                    "CameraMapConstrainOffsetBottom" = GameModeConstantFloat {
                        mValue: f32 = -2000
                    }
                }
            }
            "characters" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_DefaultPetReturnRadius" = GameModeConstantFloat {
                        mValue: f32 = 200
                    }
                    "ai_ExpRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                    "ai_GoldRadius2" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ai_MaximumHPMaxPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "ai_PathIgnoresBuildings" = GameModeConstantBool {}
                    "ai_PostAvoidanceFilterDuration" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "ai_PostAvoidanceRotFilterStrength" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "ai_PostAvoidanceRotFilterStrengthAccel" = GameModeConstantFloat {
                        mValue: f32 = 0.125
                    }
                    "ai_StartingGold" = GameModeConstantFloat {
                        mValue: f32 = 1400
                    }
                    "ai_TargetDistanceFactorPerAttacker" = GameModeConstantFloat {
                        mValue: f32 = 0.800000012
                    }
                    "ai_TargetDistanceFactorPerNeightbor" = GameModeConstantFloat {
                        mValue: f32 = 0.600000024
                    }
                    "ai_TargetMaxNumAttackers" = GameModeConstantInteger {
                        mValue: i32 = 5
                    }
                    "ai_TargetRangeFactor" = GameModeConstantFloat {
                        mValue: f32 = 0.699999988
                    }
                    "ar_AICharmedAcquisitionRange" = GameModeConstantFloat {
                        mValue: f32 = 1000
                    }
                    "ar_ClosingAttackRangeModifier" = GameModeConstantFloat {
                        mValue: f32 = 300
                    }
                    "ar_stopattackrangemodifier" = GameModeConstantFloat {
                        mValue: f32 = 100
                    }
                    "ca_MinCastRotationSpeed" = GameModeConstantFloat {
                        mValue: f32 = 250
                    }
                    "ca_RevealAttackerRange" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "ca_RevealAttackerTimeOut" = GameModeConstantFloat {
                        mValue: f32 = 4.5
                    }
                    "defaultstats_LocalGold" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "defaultstats_LocalGoldMulti" = GameModeConstantFloat {}
                    "sv_SpellRatio" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "sv_SpellAoERatio" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    0x68a3034b = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0x2c03dd32 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xd7e2e65f = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                    0xfd42ac78 = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    0xddfa5b65 = GameModeConstantFloat {
                        mValue: f32 = 0.330000013
                    }
                    0xdf5d237e = GameModeConstantStringVector {
                        mValue: list[string] = {
                            "AOE"
                            "Pet"
                        }
                    }
                }
            }
            0x2b322d93 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "dr_BuildingToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_BuildingToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToHero" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_HeroToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "dr_UnitToBuilding" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToHero" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "dr_UnitToUnit" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x136d1a0f = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "gcd_AttackDelay" = GameModeConstantFloat {
                        mValue: f32 = 1.60000002
                    }
                    "gcd_AttackDelayCastPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.300000012
                    }
                    "gcd_AttackMaxDelay" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_AttackMinDelay" = GameModeConstantFloat {
                        mValue: f32 = 0.400000006
                    }
                    "gcd_CooldownMinimum" = GameModeConstantFloat {}
                    "gcd_PercentCooldownModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.400000006
                    }
                    "gcd_PercentEXPBonusMaximum" = GameModeConstantFloat {
                        mValue: f32 = 5
                    }
                    "gcd_PercentEXPBonusMinimum" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "gcd_PercentRespawnTimeModMinimum" = GameModeConstantFloat {
                        mValue: f32 = -0.949999988
                    }
                }
            }
            "Gold" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "Gold_Max" = GameModeConstantFloat {
                        mValue: f32 = 100000
                    }
                    "SplitLocalGold" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "GrantLocalGoldToDeadHeroes" = GameModeConstantBool {}
                    "MaxLocalGoldPercentage" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                }
            }
            0x6ec75fd4 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "mvm_FlatDRFromOtherMinionsBase" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_LevelDiffCap" = GameModeConstantFloat {
                        mValue: f32 = 3
                    }
                    "mvm_PercentDamageToOtherMinionsBase" = GameModeConstantFloat {
                        mValue: f32 = 0.0500000007
                    }
                    "mvm_PercentDamageToOtherMinionsByTowerAdvantage" = GameModeConstantFloat {
                        mValue: f32 = 0.0500000007
                    }
                    "mvm_StartTime" = GameModeConstantFloat {
                        mValue: f32 = 210
                    }
                    "mvm_UpdateInterval" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedFlatIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantagePercentIncrease" = GameModeConstantFloat {}
                    "mvm_MoveSpeedPerTowerAdvantageExponentialIncrease" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "mvm_MoveSpeedCap" = GameModeConstantFloat {}
                    0xd3682c43 = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    0x45a7b70e = GameModeConstantBool {}
                }
            }
            "MINIONS" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ai_MinionTargetingHeroBoost" = GameModeConstantFloat {
                        mValue: f32 = 150
                    }
                }
            }
            "MOUSE" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "cr_DragRepeatTime" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                    "cr_MouseScrollSpeed" = GameModeConstantFloat {
                        mValue: f32 = 3900
                    }
                }
            }
            0x57bdc13e = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "sp_HPMaxPenaltyRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0799999982
                    }
                    "sp_HealthRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0209999997
                    }
                    "sp_ManaRegenPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.0209999997
                    }
                    "sp_RegenRadius" = GameModeConstantFloat {
                        mValue: f32 = 1100
                    }
                    "sp_RegenTickInterval" = GameModeConstantFloat {
                        mValue: f32 = 0.25
                    }
                }
            }
            0x3b2fec82 = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ann_AutoAnnounceMinions" = GameModeConstantBool {}
                    "ann_AutoWelcome" = GameModeConstantBool {}
                    "mission_AmbientGoldStartTime" = GameModeConstantFloat {
                        mValue: f32 = 45
                    }
                    "DisableFogOfWar" = GameModeConstantBool {}
                    "UseItemManager" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "UseSummonerForStartOfGameConstants" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "SpawnNoRender" = GameModeConstantBool {}
                    "SpawnForceRenderParticles" = GameModeConstantBool {}
                    "SpawnFadedOutBeforeTime" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                }
            }
            "UI" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "DisableInGameChatConsole" = GameModeConstantBool {}
                    "HidePlayerStatsByDefault" = GameModeConstantBool {}
                    "HideFPSAndLatencyByDefault" = GameModeConstantBool {}
                    "SimplifiedTooltips" = GameModeConstantBool {}
                    "HideHUDAtStartOfGame" = GameModeConstantBool {}
                    "LoadHudHighlightOptionalBin" = GameModeConstantBool {}
                    "DisableScoreboard" = GameModeConstantBool {}
                    "ShowDeathRecap" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    0x8b21dfc2 = GameModeConstantBool {}
                }
            }
            "Bounty" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "BaseGold" = GameModeConstantFloat {
                        mValue: f32 = 450
                    }
                    "MinStreakKills" = GameModeConstantInteger {
                        mValue: i32 = 2
                    }
                    "MinGoldPenaltyPercent" = GameModeConstantFloat {
                        mValue: f32 = 0.333000004
                    }
                    "DeathStreakPenalty" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "MinDeathStreaks" = GameModeConstantInteger {
                        mValue: i32 = 1
                    }
                    "FirstBloodBonus" = GameModeConstantFloat {
                        mValue: f32 = 150
                    }
                    "GoldPoolForAssist" = GameModeConstantFloat {
                        mValue: f32 = 0.5
                    }
                    "AssistDeathStreak" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "MinionKillRatio" = GameModeConstantFloat {
                        mValue: f32 = 0.00100000005
                    }
                    "AssistPoolMaxValueTime" = GameModeConstantFloat {}
                    "AssistPoolMinValueTime" = GameModeConstantFloat {}
                    "AssistPoolMax" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "AssistPoolMin" = GameModeConstantFloat {
                        mValue: f32 = 0.200000003
                    }
                    "AssistDurationOverride" = GameModeConstantFloat {
                        mValue: f32 = 15
                    }
                    "ShutdownGold_Global_PerLevel" = GameModeConstantFloatPerLevel {}
                    "ShutdownGold_Participants_PercentageForKiller" = GameModeConstantFloat {}
                    "ShutdownGold_Participants_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            150
                            300
                            375
                            450
                            500
                            550
                            600
                            650
                            700
                            750
                            800
                            850
                            900
                            950
                            1000
                            1050
                            1100
                            1150
                            1200
                            1250
                            1300
                            1350
                            1400
                            1450
                            1500
                            1550
                            1600
                            1650
                            1700
                            1750
                            1800
                            1850
                        }
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMin" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_RatioMax" = GameModeConstantFloat {
                        mValue: f32 = 1.10000002
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMin" = GameModeConstantFloat {
                        mValue: f32 = -1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_MultiplierMax" = GameModeConstantFloat {
                        mValue: f32 = 1
                    }
                    "ShutdownGold_TeamGoldAdvantageMod_PerLevel" = GameModeConstantFloatPerLevel {
                        mValues: list[f32] = {
                            0
                            0
                            0
                            50
                            50
                            50
                            50
                            50
                        }
                    }
                    "EnableBountiesInBlockBuilder" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    0xe721231e = GameModeConstantFloat {
                        mValue: f32 = 6
                    }
                }
            }
            "LoadingScreen" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "ShowBeta" = GameModeConstantBool {}
                    "ShowSummonerSpells" = GameModeConstantBool {
                        mValue: bool = true
                    }
                    "ShowMastery" = GameModeConstantBool {
                        mValue: bool = true
                    }
                }
            }
            "Companions" = GameModeConstantsGroup {
                mConstants: map[hash,pointer] = {
                    "FollowerEnabled" = GameModeConstantBool {}
                    "LeashDistance" = GameModeConstantFloat {
                        mValue: f32 = 400
                    }
                    "TeleportDistance" = GameModeConstantFloat {
                        mValue: f32 = 3000
                    }
                    "AvoidanceDelta" = GameModeConstantFloat {
                        mValue: f32 = 20
                    }
                    "OwnerSpeedMult" = GameModeConstantFloat {
                        mValue: f32 = 0.899999976
                    }
                    "LeashDistanceMax" = GameModeConstantFloat {
                        mValue: f32 = 600
                    }
                    "EnemyAvoidance" = GameModeConstantFloat {
                        mValue: f32 = 1600
                    }
                }
            }
            "Performance" = GameModeConstantsGroup {}
        }
    }
    0xd88e5d96 = ExperienceCurveData {
        mExperienceRequiredPerLevel: list[f32] = {
            661
            662
            1140
            1650
            2400
            3180
            4060
            5040
            6120
            7300
            8580
            9960
            11440
            13020
            14700
            16480
            18360
            20340
            22420
            24000
            25880
            27760
            29640
            31520
            33400
            35280
            37160
            39040
            40920
        }
        mExperienceGrantedForKillPerLevel: list[f32] = {
            35
            95
            155
            215
            275
            335
            395
            455
            515
            590
            640
            690
            740
            790
            840
            890
            940
            990
            1040
            1090
            1140
            1190
            1240
            1290
            1340
            1390
            1440
            1490
            1540
            1590
        }
        mLevelDifferenceExperienceMultiplier: f32 = 0.159999996
    }
    0xde56637a = DeathTimes {
        mTimeDeadPerLevel: list[f32] = {
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
            20
        }
        mScalingStartTime: u32 = 25000
        mScalingIncrementTime: u32 = 60
        mScalingPercentIncrease: f32 = 0.0250000004
        mScalingPercentCap: f32 = 1.25
    }
    0x3d1a56c6 = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "MODE_Slime2018_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MODE_Slime2018_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MODE_Slime2018_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_GameMode_Slime2018_Arena_Champion_Kill"
                    "Play_sfx_GameMode_Slime2018_Arena_Crowd_Countdown_1"
                    "Play_sfx_GameMode_Slime2018_Arena_Crowd_Countdown_2"
                    "Play_sfx_GameMode_Slime2018_Arena_Crowd_Countdown_3"
                    "Play_sfx_GameMode_Slime2018_Arena_Event_End"
                    "Play_sfx_GameMode_Slime2018_Arena_Round_End"
                    "Play_sfx_GameMode_Slime2018_Arena_Round_Start"
                    "Play_sfx_GameMode_Slime2018_BardleRoyale_Death"
                    "Play_sfx_GameMode_Slime2018_BardleRoyale_Ring_Inside"
                    "Play_sfx_GameMode_Slime2018_BardleRoyale_Ring_Outside"
                    "Play_sfx_GameMode_Slime2018_event_end"
                    "Play_sfx_GameMode_Slime2018_event_lost"
                    "Play_sfx_GameMode_Slime2018_event_start"
                    "Play_sfx_GameMode_Slime2018_event_start_arena"
                    "Play_sfx_GameMode_Slime2018_event_start_bardleroyale"
                    "Play_sfx_GameMode_Slime2018_event_start_in_30"
                    "Play_sfx_GameMode_Slime2018_event_start_kingofthehill"
                    "Play_sfx_GameMode_Slime2018_event_start_lootteemo"
                    "Play_sfx_GameMode_Slime2018_event_start_lootveigar"
                    "Play_sfx_GameMode_Slime2018_event_start_paranoiaroyale"
                    "Play_sfx_GameMode_Slime2018_event_start_pushthecart"
                    "Play_sfx_GameMode_Slime2018_event_start_scuttlerace"
                    "Play_sfx_GameMode_Slime2018_event_start_snowball"
                    "Play_sfx_GameMode_Slime2018_event_start_suddendeath"
                    "Play_sfx_GameMode_Slime2018_event_start_urfdeathmatch"
                    "Play_sfx_GameMode_Slime2018_event_won"
                    "Play_sfx_GameMode_Slime2018_LootGoblin_death"
                    "Play_sfx_GameMode_Slime2018_LootGoblin_hit"
                    "Play_sfx_GameMode_Slime2018_onfire_buffdeactivate"
                    "Play_sfx_GameMode_Slime2018_onfire_cast"
                    "Play_sfx_GameMode_Slime2018_onfire_cast_self"
                    "Play_sfx_GameMode_Slime2018_PushTheCart_cart_explode"
                    "Play_sfx_GameMode_Slime2018_PushTheCart_cart_spawn"
                    "Play_sfx_GameMode_Slime2018_PushTheCart_cart_suddendeath"
                    "Play_sfx_GameMode_Slime2018_PushTheCart_cart_turbo"
                    "Play_sfx_GameMode_Slime2018_Rewards_BattleSled_jumpin"
                    "Play_sfx_GameMode_Slime2018_Rewards_blitzhook_hit"
                    "Play_sfx_GameMode_Slime2018_Rewards_blitzhook_missilelaunch"
                    "Play_sfx_GameMode_Slime2018_Rewards_CaitlynAceintheHole_buffactivate"
                    "Play_sfx_GameMode_Slime2018_Rewards_CaitlynAceintheHole_cast"
                    "Play_sfx_GameMode_Slime2018_Rewards_CaitlynAceintheHoleMissile_hit"
                    "Play_sfx_GameMode_Slime2018_Rewards_CaitlynAceintheHoleMissile_missilecast"
                    "Play_sfx_GameMode_Slime2018_Rewards_CaitlynAceintheHoleMissile_missilelaunch"
                    "Play_sfx_GameMode_Slime2018_Rewards_finisher_rainbow"
                    "Play_sfx_GameMode_Slime2018_Rewards_poroking_attack_chomp"
                    "Play_sfx_GameMode_Slime2018_Rewards_poroking_death"
                    "Play_sfx_GameMode_Slime2018_Rewards_poroking_firebreath"
                    "Play_sfx_GameMode_Slime2018_Rewards_poroking_heal"
                    "Play_sfx_GameMode_Slime2018_Rewards_poroking_land"
                    "Play_sfx_GameMode_Slime2018_Rewards_recall_fireworks"
                    "Play_sfx_GameMode_Slime2018_SnowballFight_Pengu_Grow"
                    "Play_sfx_GameMode_Slime2018_SnowballFight_Pengu_Spawn"
                    "Play_sfx_GameMode_Slime2018_URFDM_Countdown_1"
                    "Play_sfx_GameMode_Slime2018_URFDM_Countdown_2"
                    "Play_sfx_GameMode_Slime2018_URFDM_Countdown_3"
                    "Play_sfx_GameMode_Slime2018_URFDM_End"
                    "Play_sfx_GameMode_Slime2018_URFDM_Killed"
                    "Play_sfx_GameMode_Slime2018_URFDM_Start"
                    "Play_sfx_OdinRecall_OnBuffCast"
                    "Play_sfx_OdinRecall_OnBuffDeactivate"
                    "Play_sfx_Slime_AbsoluteZero_buffactivate"
                    "Play_sfx_Slime_AbsoluteZero_hit"
                    "Play_sfx_SLIME_Blue_a2n_buffactivate"
                    "Play_sfx_SLIME_Blue_aggro1"
                    "Play_sfx_SLIME_Blue_aggro2"
                    "Play_sfx_SLIME_Blue_aggro3"
                    "Play_sfx_SLIME_Blue_death_cast"
                    "Play_sfx_SLIME_Blue_n2a_buffactivate"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack2_OnCast"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack2_OnHit"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack3_OnCast"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack3_OnHit"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack_OnCast"
                    "Play_sfx_SLIME_Blue_SLIME_BlueBasicAttack_OnHit"
                    "Play_sfx_SLIME_Blue_spawn_cast"
                    "Play_sfx_SLIME_ChaosMinionMelee_SLIME_ChaosMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_SLIME_ChaosMinionMelee_SLIME_ChaosMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_SLIME_ChaosMinionMelee_SLIME_ChaosMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_SLIME_ChaosMinionMelee_SLIME_ChaosMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_SLIME_ChaosMinionMelee_SLIME_ChaosMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_SLIME_ChaosMinionRanged_SLIME_ChaosMinionRangedBasicAttack_OnCast"
                    "Play_sfx_SLIME_ChaosMinionRanged_SLIME_ChaosMinionRangedBasicAttack_OnHit"
                    "Play_sfx_SLIME_ChaosMinionSiege_SLIME_ChaosMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_SLIME_ChaosMinionSiege_SLIME_ChaosMinionSiegeBasicAttack_OnMissileCast"
                    "Play_sfx_SLIME_ChaosMinionSuper_SLIME_ChaosMinionSuperBasicAttack_OnCast"
                    "Play_sfx_SLIME_ChaosMinionSuper_SLIME_ChaosMinionSuperBasicAttack_OnHit"
                    "Play_sfx_SLIME_ChaosMinionSuperSuper_SLIME_ChaosMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_Slime_enterfeeneypult_cast"
                    "Play_sfx_Slime_EnterWarthog_cast"
                    "Play_sfx_Slime_event_snowball_OnCast"
                    "Play_sfx_Slime_FeeneypultTargeting_cast"
                    "Play_sfx_Slime_FeeneypultTargeting_distant2d"
                    "Play_sfx_Slime_FeeneypultTargeting_distant_missileLaunch"
                    "Play_sfx_Slime_FeeneypultTargeting_hitlocation"
                    "Play_sfx_Slime_FeeneypultTargeting_missileLaunch"
                    "Play_sfx_SLIME_Gromp_a2n_buffactivate"
                    "Play_sfx_SLIME_Gromp_aggro2_buffactivate"
                    "Play_sfx_SLIME_Gromp_aggro3_buffactivate"
                    "Play_sfx_SLIME_Gromp_death_cast"
                    "Play_sfx_SLIME_Gromp_idle2_buffactivate"
                    "Play_sfx_SLIME_Gromp_idle3_buffactivate"
                    "Play_sfx_SLIME_Gromp_idle4_buffactivate"
                    "Play_sfx_SLIME_Gromp_idle6_buffactivate"
                    "Play_sfx_SLIME_Gromp_n2a_buffactivate"
                    "Play_sfx_SLIME_Gromp_SLIME_GrompBasicAttack_OnCast"
                    "Play_sfx_SLIME_Gromp_SLIME_GrompBasicAttack_OnHit"
                    "Play_sfx_SLIME_Gromp_SLIME_GrompBasicAttack_OnMissileCast"
                    "Play_sfx_SLIME_Gromp_spawn_cast"
                    "Play_sfx_Slime_LootGoblin_DarkMatter_OnCast"
                    "Play_sfx_Slime_LootGoblin_DarkMatter_OnHitLocation"
                    "Play_sfx_Slime_LootGoblin_death"
                    "Play_sfx_Slime_LootGoblin_EventHorizon_OnCast"
                    "Play_sfx_Slime_LootGoblin_EventHorizon_OnHitLocation"
                    "Play_sfx_Slime_LootGoblin_hit"
                    "Play_sfx_SLIME_Murkwolf_a2n_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_aggro3_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_death_cast"
                    "Play_sfx_SLIME_Murkwolf_idle2_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_idle3_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_idle5_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_n2a_buffactivate"
                    "Play_sfx_SLIME_Murkwolf_SLIME_MurkwolfBasicAttack2_OnCast"
                    "Play_sfx_SLIME_Murkwolf_SLIME_MurkwolfBasicAttack2_OnHit"
                    "Play_sfx_SLIME_Murkwolf_SLIME_MurkwolfBasicAttack_OnCast"
                    "Play_sfx_SLIME_Murkwolf_SLIME_MurkwolfBasicAttack_OnHit"
                    "Play_sfx_SLIME_Murkwolf_spawn_cast"
                    "Play_sfx_SLIME_MurkwolfMini_a2n_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_aggro2_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_aggro3_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_aggro_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_death_cast"
                    "Play_sfx_SLIME_MurkwolfMini_idle1_howl_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_idle2_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_idle3_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_idle4_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_idle5_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_n2a_buffactivate"
                    "Play_sfx_SLIME_MurkwolfMini_SLIME_MurkwolfMiniBasicAttack2_OnCast"
                    "Play_sfx_SLIME_MurkwolfMini_SLIME_MurkwolfMiniBasicAttack2_OnHit"
                    "Play_sfx_SLIME_MurkwolfMini_SLIME_MurkwolfMiniBasicAttack_OnCast"
                    "Play_sfx_SLIME_MurkwolfMini_SLIME_MurkwolfMiniBasicAttack_OnHit"
                    "Play_sfx_SLIME_MurkwolfMini_spawn_cast"
                    "Play_sfx_Slime_NexusMinioBasicAttack_cast"
                    "Play_sfx_Slime_NexusMinioBasicAttack_hit"
                    "Play_sfx_SLIME_OrderMinionMelee_SLIME_OrderMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_SLIME_OrderMinionMelee_SLIME_OrderMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_SLIME_OrderMinionMelee_SLIME_OrderMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_SLIME_OrderMinionMelee_SLIME_OrderMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_SLIME_OrderMinionMelee_SLIME_OrderMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_SLIME_OrderMinionRanged_SLIME_OrderMinionRangedBasicAttack_OnCast"
                    "Play_sfx_SLIME_OrderMinionRanged_SLIME_OrderMinionRangedBasicAttack_OnHit"
                    "Play_sfx_SLIME_OrderMinionSiege_SLIME_OrderMinionSiegeBasicAttack_OnCast"
                    "Play_sfx_SLIME_OrderMinionSiege_SLIME_OrderMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_SLIME_OrderMinionSuper_SLIME_OrderMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_SLIME_OrderMinionSuper_SLIME_OrderMinionSuperBasicAttack_OnCast"
                    "Play_sfx_SLIME_OrderMinionSuper_SLIME_OrderMinionSuperBasicAttack_OnHit"
                    "Play_sfx_SLIME_Razorbeak_a2n_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_aggro1_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_aggro2_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_aggro3_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_death_cast"
                    "Play_sfx_SLIME_Razorbeak_n2a_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_normal1_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_normal2_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_normal3_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_normal4_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_normal5_buffactivate"
                    "Play_sfx_SLIME_Razorbeak_SLIME_RazorbeakBasicAttack2_OnCast"
                    "Play_sfx_SLIME_Razorbeak_SLIME_RazorbeakBasicAttack_OnCast"
                    "Play_sfx_SLIME_Razorbeak_SLIME_RazorbeakBasicAttack_OnHit"
                    "Play_sfx_SLIME_Razorbeak_SLIME_RazorbeakBasicAttack_OnMissileCast"
                    "Play_sfx_SLIME_Razorbeak_SLIME_RazorbeakBasicAttack_OnMissileLaunch"
                    "Play_sfx_SLIME_Razorbeak_spawn_cast"
                    "Play_sfx_SLIME_RazorbeakMini_a2n_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_aggro1_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_aggro2_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_aggro3_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_death_cast"
                    "Play_sfx_SLIME_RazorbeakMini_n2a_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_normal1_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_normal2_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_normal3_buffactivate"
                    "Play_sfx_SLIME_RazorbeakMini_SLIME_RazorbeakMiniBasicAttack2_OnCast"
                    "Play_sfx_SLIME_RazorbeakMini_SLIME_RazorbeakMiniBasicAttack_OnCast"
                    "Play_sfx_SLIME_RazorbeakMini_SLIME_RazorbeakMiniBasicAttack_OnHit"
                    "Play_sfx_SLIME_RazorbeakMini_spawn2_cast"
                    "Play_sfx_SLIME_RazorbeakMini_spawn3_cast"
                    "Play_sfx_SLIME_RazorbeakMini_spawn4_cast"
                    "Play_sfx_SLIME_Red_a2n_buffactivate"
                    "Play_sfx_SLIME_Red_aggro2_buffactivate"
                    "Play_sfx_SLIME_Red_aggro_buffactivate"
                    "Play_sfx_SLIME_Red_death_cast"
                    "Play_sfx_SLIME_Red_n2a_buffactivate"
                    "Play_sfx_SLIME_Red_normal2_buffactivate"
                    "Play_sfx_SLIME_Red_normal_buffactivate"
                    "Play_sfx_SLIME_Red_RedBasicAttack_cast"
                    "Play_sfx_SLIME_Red_SLIME_RedBasicAttack2_OnCast"
                    "Play_sfx_SLIME_Red_SLIME_RedBasicAttack2_OnHit"
                    "Play_sfx_SLIME_Red_SLIME_RedBasicAttack3_OnCast"
                    "Play_sfx_SLIME_Red_SLIME_RedBasicAttack3_OnHit"
                    "Play_sfx_SLIME_Red_SLIME_RedBasicAttack_OnHit"
                    "Play_sfx_SLIME_Red_spawn_cast"
                    "Play_sfx_SLIME_RiftHerald_capture"
                    "Play_sfx_SLIME_RiftHerald_dance"
                    "Play_sfx_SLIME_RiftHerald_dash_ground_hit"
                    "Play_sfx_SLIME_RiftHerald_dash_hit"
                    "Play_sfx_SLIME_RiftHerald_dash_hit_vox"
                    "Play_sfx_SLIME_RiftHerald_dash_run_fs"
                    "Play_sfx_SLIME_RiftHerald_dash_sonicboom"
                    "Play_sfx_SLIME_RiftHerald_dash_windup_vox"
                    "Play_sfx_SLIME_RiftHerald_death"
                    "Play_sfx_SLIME_RiftHerald_death_reverb"
                    "Play_sfx_SLIME_RiftHerald_Eye_Vulnerable_buffactivate"
                    "Play_sfx_SLIME_RiftHerald_Eye_Vulnerable_buffdeactivate"
                    "Play_sfx_SLIME_RiftHerald_FS"
                    "Play_sfx_SLIME_RiftHerald_idle_angry_ground_hit"
                    "Play_sfx_SLIME_RiftHerald_idle_angry_vox"
                    "Play_sfx_SLIME_RiftHerald_idle_angry_vox_roar"
                    "Play_sfx_SLIME_RiftHerald_idle_base_vox"
                    "Play_sfx_SLIME_RiftHerald_idle_trans"
                    "Play_sfx_SLIME_RiftHerald_ItemVoidCrusher_cast"
                    "Play_sfx_SLIME_RiftHerald_ItemVoidCrusher_ChannelingSuccessStop_cast"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack2_OnCast"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack2_OnHit"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack3_OnCast"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack3_OnHit"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack_OnCast"
                    "Play_sfx_SLIME_RiftHerald_MercenaryBasicAttack_OnHit"
                    "Play_sfx_SLIME_RiftHerald_MiniBaronVulnerable_buffactivate"
                    "Play_sfx_SLIME_RiftHerald_spawn"
                    "Play_sfx_SLIME_RiftHerald_spawn_void"
                    "Play_sfx_SLIME_RiftHerald_spawn_vox"
                    "Play_sfx_SLIME_RiftHerald_SpinAttack_cast"
                    "Play_sfx_SLIME_RiftHerald_SpinAttack_hit"
                    "Play_sfx_SLIME_RiftHerald_SpinAttack_hit_ground"
                    "Play_sfx_SLIME_RiftHerald_SpinAttack_vox"
                    "Play_sfx_SLIME_RiftHerald_taunt"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack2_OnCast"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack2_OnHit"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack3_OnCast"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack3_OnHit"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack_OnCast"
                    "Play_sfx_SLIME_RiftHeraldBasicAttack_OnHit"
                    "Play_sfx_Slime_RocketGrab_cast"
                    "Play_sfx_Slime_RocketGrabMissile_hit"
                    "Play_sfx_Slime_RocketGrabMissile_missilelaunch"
                    "Play_sfx_Slime_Rupture_cast"
                    "Play_sfx_Slime_Rupture_hit"
                    "Play_sfx_Slime_SnowballMissile_OnHit"
                    "Play_sfx_Slime_WarthogExplosionKnockup_OnBuffActivate"
                    "Play_vo_SLIME_Blue_BlueBasicAttack_Attack3D"
                    "Play_vo_SLIME_Gromp_GrompBasicAttack_Attack3D"
                    "Play_vo_SLIME_Murkwolf_MurkwolfBasicAttack_Attack3D"
                    "Play_vo_SLIME_MurkwolfMini_MurkwolfMiniBasicAttack_Attack3D"
                    "Play_vo_SLIME_Red_RedBasicAttack_Attack3D"
                    "Play_vo_SLIME_RiftHerald_SLIME_RiftHeraldBasicAttack_Attack3D"
                    "Stop_sfx_GameMode_Slime2018_Rewards_poroking_firebreath"
                    "Stop_sfx_SLIME_RiftHerald_capture"
                    "Stop_sfx_Slime_WarthogExplosionKnockup_OnBuffActivate"
                }
            }
            BankUnit {
                name: string = "MUS_Map12_FirstBlood"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_FirstBlood_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_FirstBlood_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_FirstBlood_audio.wpk"
                }
                events: list[string] = {
                    "map12_FirstBlood_phase_select"
                    "set_state_mus_map12_FirstBlood_event_suddendeath"
                }
            }
            BankUnit {
                name: string = "Announcer_Global_Female1_NexusBlitz_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_NexusBlitz_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_NexusBlitz_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_NexusBlitz_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Female1_NexusBlitz_AllyUrfCannon"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnAce"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillMinionYouEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnDefeat"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnFirstBlood"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillRiftHeraldEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnKillRiftHeraldYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnMinionsSpawn"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnQuit"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnReconnect"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map1"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map10"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map11"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map2"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map3"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map4"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map6"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage2Map8"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage3Map10"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnStartGameMessage3Map3"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Core_OnVictory"
                    "Play_vo_Announcer_Female1_NexusBlitz_Countdown"
                    "Play_vo_Announcer_Female1_NexusBlitz_DPSCheck"
                    "Play_vo_Announcer_Female1_NexusBlitz_EnemyURFCannon"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventDamageTaken"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventFewPointsRemain"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStart"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStart30Seconds"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartBardleRoyale"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartCapture"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartJuggernaut"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartKingOfTheHill"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartLootGoblin"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartParanoia"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartPrizeFight"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartPushTheCart"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartReachScoreLimit"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartScuttleRace"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartSoon"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartSurviveInside"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventStartURFDeathMatch"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonBardleRoyaleBlueTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonBardleRoyaleRedTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonBlue"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonBothTeams"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonEnemyTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonKingOfTheHillBlueTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonKingOfTheHillRedTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonPushTheCartBlueTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonPushTheCartRedTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonRed"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonTreasureGoblinBlueTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonTreasureGoblinRedTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_EventWonYourTeam"
                    "Play_vo_Announcer_Female1_NexusBlitz_Go"
                    "Play_vo_Announcer_Female1_NexusBlitz_HideNSeek"
                    "Play_vo_Announcer_Female1_NexusBlitz_KingOfTheHill"
                    "Play_vo_Announcer_Female1_NexusBlitz_KrugFarming"
                    "Play_vo_Announcer_Female1_NexusBlitz_MegaShutdown"
                    "Play_vo_Announcer_Female1_NexusBlitz_OnFire"
                    "Play_vo_Announcer_Female1_NexusBlitz_OnFireAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_OnFireEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_PrizeFight"
                    "Play_vo_Announcer_Female1_NexusBlitz_ProtectSoraka"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardBattleSledAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardBattleSledEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardBuffAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardBuffEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardDragonSoulAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardDragonSoulEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardInBase"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardPoroKingAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardPoroKingEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardRocketGrabAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardRocketGrabEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardTurretEnchantedAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardTurretEnchantedEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardVehicleAlly"
                    "Play_vo_Announcer_Female1_NexusBlitz_RewardVehicleEnemy"
                    "Play_vo_Announcer_Female1_NexusBlitz_ScuttleRace"
                    "Play_vo_Announcer_Female1_NexusBlitz_SuddenDeath"
                    "Play_vo_Announcer_Female1_NexusBlitz_SuddenDeathCountdown"
                    "Play_vo_Announcer_Female1_NexusBlitz_SuddenDeathStart"
                    "Play_vo_Announcer_Female1_NexusBlitz_Welcome"
                }
                voiceOver: bool = true
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "map12_FirstBlood_phase_select"
            victoryMusicID: string = "mus_map12_victory"
            defeatMusicID: string = "mus_map12_defeat"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Env_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = "FIRSTBLOOD"
    }
    0x3df7a428 = GameModeMapData {
        mModeName: hash = "ARAM"
        itemLists: list2[link] = {
            0x413f2f94
            0x53f3ac3c
            0x1ced71a9
            0x0355c4fb
        }
        mItemShopData: link = 0x8f58df52
        AnnouncementsMapping: link = 0x41e538c0
        mRelativeColorization: bool = true
        mNeutralTimersDisplay: link = 0xbdd5e038
        mCursorConfig: hash = "UX/HUD/Globals/CursorConfig"
        mCursorConfigUpdate: hash = 0xdb80aa27
        mHudScoreData: hash = "UX/HUD/Globals/ScoreData_ARAM"
        mStatsUiData: link = 0x5a7e4017
        mExperienceCurveData: link = 0xd88e5d96
        mExperienceModData: link = 0x45163f15
        mDeathTimes: link = 0xa40f595b
        mLoadScreenTipConfiguration: link = 0xd5b1a6ea
        mMapLocators: link = 0x9cb63864
        mPerkReplacements: embed = PerkReplacementList {
            mReplacements: list[pointer] = {
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Sorcery/Waterwalking"
                    mReplaceWith: hash = "Perks/Styles/Sorcery/Scorch"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/ZombieWard"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/GhostPoro"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
            }
        }
        mGameModeConstants: link = 0x332b9e84
        mGameplayConfig: link = 0xa6506f8a
        mSurrenderSettings: link = 0x748598d2
        0x6941e612: link = 0xa3c25554
        mLoadingScreenBackground: string = "ASSETS/UX/LoadingScreen/HABackground.tex"
        0x084c58ee: list[string] = {
            "ASSETS/UX/LoadingScreen/Trueshot/Trueshot_Cities.Trueshot.tex"
            "ASSETS/UX/LoadingScreen/Trueshot/Trueshot_Jayce.Trueshot.tex"
            "ASSETS/UX/LoadingScreen/Trueshot/Trueshot_Vi.Trueshot.tex"
            "ASSETS/UX/LoadingScreen/Trueshot/Trueshot_Caitlyn.Trueshot.tex"
            "ASSETS/UX/LoadingScreen/Trueshot/Trueshot_Jinx.Trueshot.tex"
        }
    }
    0x73d381b7 = GameModeMapData {
        mModeName: hash = "FIRSTBLOOD"
        itemLists: list2[link] = {
            0x413f2f94
            0x1ced71a9
            0xbecd97c7
            0xcd39d678
        }
        mItemShopData: link = 0x8f58df52
        mNeutralTimersDisplay: link = 0x34b335c7
        mCursorConfig: hash = "UX/HUD/Globals/CursorConfig"
        mCursorConfigUpdate: hash = 0xdb80aa27
        mHudScoreData: hash = "UX/HUD/Globals/ScoreData_FIRSTBLOOD"
        mStatsUiData: link = 0x5a7e4017
        mExperienceCurveData: link = 0x9b6c4191
        mExperienceModData: link = 0x45163f15
        mDeathTimes: link = 0xde56637a
        mLoadScreenTipConfiguration: link = 0xd5b1a6ea
        mMapLocators: link = 0x9cb63864
        mPerkReplacements: embed = PerkReplacementList {
            mReplacements: list[pointer] = {
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Inspiration/BiscuitDelivery"
                    mReplaceWith: hash = "Perks/Styles/Inspiration/FuturesMarket"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Sorcery/Waterwalking"
                    mReplaceWith: hash = "Perks/Styles/Sorcery/Scorch"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/ZombieWard"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/GhostPoro"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Inspiration/PerfectTiming"
                    mReplaceWith: hash = "Perks/Styles/Inspiration/MagicalFootwear"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Inspiration/MinionDematerializer"
                    mReplaceWith: hash = "Perks/Styles/Inspiration/FuturesMarket"
                }
            }
        }
        mGameModeConstants: link = 0xbf6161db
        mGameplayConfig: link = 0xa6506f8a
        mSurrenderSettings: link = 0x748598d2
        0x6941e612: link = 0xa3c25554
        mLoadingScreenBackground: string = "ASSETS/UX/LoadingScreen/FirstBloodSplash.tex"
    }
    0xb42c9063 = GameModeMapData {
        mModeName: hash = "TUTORIAL"
        0x64569ff4: u8 = 1
        mItemShopData: link = 0x8f58df52
        mCursorConfig: hash = "UX/HUD/Globals/CursorConfig_TUTORIAL"
        mCursorConfigUpdate: hash = "UX/HUD/Globals/CursorConfig_TUTORIAL"
        mHudScoreData: hash = "UX/HUD/Globals/ScoreData_TUTORIAL"
        mStatsUiData: link = 0x5a7e4017
        mExperienceCurveData: link = 0xb3d105ad
        mExperienceModData: link = 0x45163f15
        mDeathTimes: link = 0xbc3962f6
        mLoadScreenTipConfiguration: link = 0xd5b1a6ea
        mMapLocators: link = 0x9cb63864
        mGameModeConstants: link = 0x27f4caaf
        mGameplayConfig: link = 0xa6506f8a
        mSurrenderSettings: link = 0x748598d2
        0x6941e612: link = 0xa3c25554
        mLoadingScreenBackground: string = "ASSETS/UX/LoadingScreen/basic_tutorial_loadscreen.tex"
    }
    0xb50dd49c = GameModeMapData {
        mModeName: hash = "KINGPORO"
        mNeutralTimersDisplay: link = 0x75dfce0c
        mCursorConfig: hash = "UX/HUD/Globals/CursorConfig"
        mCursorConfigUpdate: hash = 0xdb80aa27
        mHudScoreData: hash = "UX/HUD/Globals/ScoreData_KINGPORO"
        mStatsUiData: link = 0x5a7e4017
        mExperienceCurveData: link = 0xd88e5d96
        mExperienceModData: link = 0x45163f15
        mDeathTimes: link = 0xa40f595b
        mLoadScreenTipConfiguration: link = 0xd5b1a6ea
        mMapLocators: link = 0x9cb63864
        mPerkReplacements: embed = PerkReplacementList {
            mReplacements: list[pointer] = {
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Sorcery/Waterwalking"
                    mReplaceWith: hash = "Perks/Styles/Sorcery/GatheringStorm"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/ZombieWard"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Inspiration/UnsealedSpellbook"
                    mReplaceWith: hash = "Perks/Styles/Inspiration/GlacialAugment"
                }
                PerkReplacement {
                    mReplaceTarget: hash = "Perks/Styles/Domination/GhostPoro"
                    mReplaceWith: hash = "Perks/Styles/Domination/EyeballCollection"
                }
            }
        }
        mGameModeConstants: link = 0x8f97a940
        mGameplayConfig: link = 0xa6506f8a
        mSurrenderSettings: link = 0x748598d2
        0x6941e612: link = 0xa3c25554
        mLoadingScreenBackground: string = "ASSETS/UX/LoadingScreen/KingPoroBackground.tex"
    }
    0x41e538c0 = AnnouncementMap {
        ParentList: link = 0xf751e943
        0x81082e4b: string = "ClassicBase"
        0x79175e85: hash = 0x7d2eefce
        0xcf8c591b: hash = 0x6e781626
        Announcements: map[string,link] = {
            "OnAce" = 0x3b27ccd2
            "OnStartGameMessage2" = 0xe17333e4
            "OnStartGameMessage3" = 0xe2733577
            "OnStartGameMessage4" = 0xdf7330be
            "OnStartGameMessage5" = 0xe0733251
        }
    }
    0x6e4a799c = ScriptDataObject {
        mName: string = "ARAMMinionTrapDetectionScriptData"
        mConstants: map[string,pointer] = {
            "DetectionRange" = GameModeConstantInteger {
                mValue: i32 = 1100
            }
            "BlackOutDuration" = GameModeConstantInteger {
                mValue: i32 = 25000
            }
            "TrapSightDuration" = GameModeConstantFloat {
                mValue: f32 = 3
            }
        }
        0x9be36761: link = 0xb874104c
    }
    0xa312e218 = ScriptDataObject {
        mName: string = "ARAMGamePacingScriptData"
        mConstants: map[string,pointer] = {
            "MinionDeathGold" = GameModeConstantInteger {
                mValue: i32 = 6
            }
            "HomestartStopTime" = GameModeConstantInteger {
                mValue: i32 = 300
            }
            "HomestartHasteDuration" = GameModeConstantFloat {
                mValue: f32 = 10
            }
            "HomestartMoveSpeedMult" = GameModeConstantFloat {
                mValue: f32 = 0.5
            }
            "TowerDamageEarlyMultiplier" = GameModeConstantFloat {
                mValue: f32 = 1
            }
            "TowerDamageLateMultiplier" = GameModeConstantFloat {
                mValue: f32 = 1.25
            }
            "TowerDamageMultiplierMinTime" = GameModeConstantInteger {
                mValue: i32 = 1080
            }
            "TowerDamageMultiplierMaxTime" = GameModeConstantInteger {
                mValue: i32 = 1800
            }
            "PokeDamageReductionRange" = GameModeConstantInteger {
                mValue: i32 = 1000
            }
            "PokeDamageReduction" = GameModeConstantFloat {
                mValue: f32 = 0.150000006
            }
            "MinionAoEDamageMultiplierEarly" = GameModeConstantFloat {
                mValue: f32 = 0.75
            }
            "MinionAoEDamageMultiplierLate" = GameModeConstantFloat {
                mValue: f32 = 0.75
            }
            "MinionAoEDamageMultiplierMinTime" = GameModeConstantInteger {
                mValue: i32 = 540
            }
            "MinionAoEDamageMultiplierMaxTime" = GameModeConstantInteger {
                mValue: i32 = 900
            }
        }
        0x9be36761: link = 0xb874104c
    }
    0xa010d345 = FeatureAudioDataProperties {
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "mus_map12_phase_select"
            victoryMusicID: string = "mus_map12_victory"
            defeatMusicID: string = "mus_map12_defeat"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = "Default"
    }
    0xa0bfc980 = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "Announcer_Global_Trueshot_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Trueshot_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Trueshot_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Trueshot_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_Trueshot_OnAce"
                    "Play_vo_Announcer_Global_Trueshot_OnAceblue"
                    "Play_vo_Announcer_Global_Trueshot_OnAcepurple"
                    "Play_vo_Announcer_Global_Trueshot_OnAcered"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionDoubleKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionDoubleKillpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionDoubleKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillHeroHero"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillMinionYouEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillTurretHeroAlt"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionPentaKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionPentaKillpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionPentaKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionQuadraKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionQuadraKillpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionQuadraKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionTripleKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionTripleKillpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionTripleKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionUnrealKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionUnrealKillEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionUnrealKillpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionUnrealKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnChampionUnrealKillYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerDieblue"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerDiepurple"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerDiered"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnblue"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnred"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnSoonblue"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnSoonpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnSoonred"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerRespawnYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerUnderAttackblue"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerUnderAttackpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnDampenerUnderAttackred"
                    "Play_vo_Announcer_Global_Trueshot_OnDefeat"
                    "Play_vo_Announcer_Global_Trueshot_OnFirstBlood"
                    "Play_vo_Announcer_Global_Trueshot_OnInhibitorAttackedYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillDragonblue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillDragonpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillDragonred"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Global_Trueshot_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6blue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6purple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6red"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6You"
                    "Play_vo_Announcer_Global_Trueshot_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnKillWormblue"
                    "Play_vo_Announcer_Global_Trueshot_OnKillWormpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnKillWormred"
                    "Play_vo_Announcer_Global_Trueshot_OnLeave"
                    "Play_vo_Announcer_Global_Trueshot_OnLeaveEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnLeaveYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnMinionAlmostKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnMinionAlmostKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnMinionHalfKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnMinionHalfKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnMinionsSpawn"
                    "Play_vo_Announcer_Global_Trueshot_OnNexusAttackedYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnNexusUnderAttackblue"
                    "Play_vo_Announcer_Global_Trueshot_OnNexusUnderAttackpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnNexusUnderAttackred"
                    "Play_vo_Announcer_Global_Trueshot_OnOneMinuteMinionsSpawn"
                    "Play_vo_Announcer_Global_Trueshot_OnQuit"
                    "Play_vo_Announcer_Global_Trueshot_OnQuitEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnQuitEnemyTeamAlt"
                    "Play_vo_Announcer_Global_Trueshot_OnQuitYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnQuitYourTeamAlt"
                    "Play_vo_Announcer_Global_Trueshot_OnReconnect"
                    "Play_vo_Announcer_Global_Trueshot_OnReconnectEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnReconnectYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map1"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map10"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map11"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map2"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map4"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map6"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage1Map8"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2ButchersBridge"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map1"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map10"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map11"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map12"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map2"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map3"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map4"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map6"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage2Map8"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage3Map10"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage3Map3"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage3Map8"
                    "Play_vo_Announcer_Global_Trueshot_OnStartGameMessage4Map10"
                    "Play_vo_Announcer_Global_Trueshot_OnSurrenderblue"
                    "Play_vo_Announcer_Global_Trueshot_OnSurrenderpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnSurrenderred"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretAlmostKillblue"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretAlmostKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretAttackedYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretDieblue"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretDiepurple"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretDiered"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretHalfKillred"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretUnderAttackblue"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretUnderAttackpurple"
                    "Play_vo_Announcer_Global_Trueshot_OnTurretUnderAttackred"
                    "Play_vo_Announcer_Global_Trueshot_OnVictory"
                    "Play_vo_Announcer_Global_Trueshot_OnVictoryblue"
                    "Play_vo_Announcer_Global_Trueshot_OnVictorypurple"
                    "Play_vo_Announcer_Global_Trueshot_OnVictoryred"
                    "Play_vo_Announcer_Global_Trueshot_OnWelcome"
                    "Play_vo_Announcer_Global_Trueshot_OnWelcomeToLeague"
                    "Play_vo_Announcer_Global_Trueshot_TurretPlatingFall30Seconds"
                    "Play_vo_Announcer_Global_Trueshot_TurretPlatingFallOff"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "Music_Map12_Trueshot"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_Trueshot_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_Trueshot_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_Trueshot_audio.wpk"
                }
                events: list[string] = {
                    "mus_map12_phase_defeat_Trueshot"
                    "mus_map12_phase_victory_Trueshot"
                }
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "mus_map12_phase_select"
            victoryMusicID: string = "mus_map12_phase_victory_Trueshot"
            defeatMusicID: string = "mus_map12_phase_defeat_Trueshot"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = 0x79ece715
    }
    0xa8ad0e4a = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "Announcer_Tutorial"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Tutorial_ExtraAlistar"
                    "Play_vo_Tutorial_ExtraCannot"
                    "Play_vo_Tutorial_ExtraCriticalPath"
                    "Play_vo_Tutorial_ExtraDestroyTurret"
                    "Play_vo_Tutorial_ExtraGoodJob"
                    "Play_vo_Tutorial_ExtraLookOut"
                    "Play_vo_Tutorial_ExtraLowHealth"
                    "Play_vo_Tutorial_ExtraMinionAdvance"
                    "Play_vo_Tutorial_ExtraNextStep"
                    "Play_vo_Tutorial_ExtraNo"
                    "Play_vo_Tutorial_ExtraObjective"
                    "Play_vo_Tutorial_ExtraShipIt"
                    "Play_vo_Tutorial_ExtraTravisGeorge"
                    "Play_vo_Tutorial_ExtraTryndamere"
                    "Play_vo_Tutorial_ExtraTutorialComplete"
                    "Play_vo_Tutorial_ExtraWarwick"
                    "Play_vo_Tutorial_ExtraWellDone"
                    "Play_vo_Tutorial_ExtraYes"
                    "Play_vo_Tutorial_Tutorial_2ndWaypoint"
                    "Play_vo_Tutorial_Tutorial_AlmostThere"
                    "Play_vo_Tutorial_Tutorial_AttackTraining"
                    "Play_vo_Tutorial_Tutorial_BecomingALegend"
                    "Play_vo_Tutorial_Tutorial_Beware"
                    "Play_vo_Tutorial_Tutorial_Bots"
                    "Play_vo_Tutorial_Tutorial_CastRecall"
                    "Play_vo_Tutorial_Tutorial_ClaimVictory"
                    "Play_vo_Tutorial_Tutorial_ClothArmor"
                    "Play_vo_Tutorial_Tutorial_ConfirmVolley"
                    "Play_vo_Tutorial_Tutorial_Congratulations"
                    "Play_vo_Tutorial_Tutorial_Controlledbyanother"
                    "Play_vo_Tutorial_Tutorial_DefendingFriendlies"
                    "Play_vo_Tutorial_Tutorial_DestroyInhibitor"
                    "Play_vo_Tutorial_Tutorial_EachTime"
                    "Play_vo_Tutorial_Tutorial_EnemyChampion"
                    "Play_vo_Tutorial_Tutorial_EnemyDefenses"
                    "Play_vo_Tutorial_Tutorial_Engage"
                    "Play_vo_Tutorial_Tutorial_Extra_Commendable1"
                    "Play_vo_Tutorial_Tutorial_Extra_Commendable2"
                    "Play_vo_Tutorial_Tutorial_Extra_Commendable3"
                    "Play_vo_Tutorial_Tutorial_Extra_Congratulations1"
                    "Play_vo_Tutorial_Tutorial_Extra_Congratulations2"
                    "Play_vo_Tutorial_Tutorial_Extra_Congratulations3"
                    "Play_vo_Tutorial_Tutorial_Extra_Fantastic1"
                    "Play_vo_Tutorial_Tutorial_Extra_Fantastic2"
                    "Play_vo_Tutorial_Tutorial_Extra_Fantastic3"
                    "Play_vo_Tutorial_Tutorial_Extra_GoodJob1"
                    "Play_vo_Tutorial_Tutorial_Extra_GoodJob2"
                    "Play_vo_Tutorial_Tutorial_Extra_GoodJob3"
                    "Play_vo_Tutorial_Tutorial_Extra_Outstanding1"
                    "Play_vo_Tutorial_Tutorial_Extra_Outstanding2"
                    "Play_vo_Tutorial_Tutorial_Extra_Outstanding3"
                    "Play_vo_Tutorial_Tutorial_Extra_Success1"
                    "Play_vo_Tutorial_Tutorial_Extra_Success2"
                    "Play_vo_Tutorial_Tutorial_Extra_Success3"
                    "Play_vo_Tutorial_Tutorial_Extra_Victory1"
                    "Play_vo_Tutorial_Tutorial_Extra_Victory2"
                    "Play_vo_Tutorial_Tutorial_Extra_Victory3"
                    "Play_vo_Tutorial_Tutorial_Extra_WellDone1"
                    "Play_vo_Tutorial_Tutorial_Extra_WellDone2"
                    "Play_vo_Tutorial_Tutorial_Extra_WellDone3"
                    "Play_vo_Tutorial_Tutorial_FinishOff"
                    "Play_vo_Tutorial_Tutorial_ForThisBattle"
                    "Play_vo_Tutorial_Tutorial_FoW"
                    "Play_vo_Tutorial_Tutorial_GainGold"
                    "Play_vo_Tutorial_Tutorial_Gold"
                    "Play_vo_Tutorial_Tutorial_GreaterThreat"
                    "Play_vo_Tutorial_Tutorial_GreatWork"
                    "Play_vo_Tutorial_Tutorial_HeadOn"
                    "Play_vo_Tutorial_Tutorial_Heal"
                    "Play_vo_Tutorial_Tutorial_HighAttackSpeed"
                    "Play_vo_Tutorial_Tutorial_Improve"
                    "Play_vo_Tutorial_Tutorial_InhibitorDisabled"
                    "Play_vo_Tutorial_Tutorial_InLoL"
                    "Play_vo_Tutorial_Tutorial_IntroChampion"
                    "Play_vo_Tutorial_Tutorial_LayWaste"
                    "Play_vo_Tutorial_Tutorial_LevelUp"
                    "Play_vo_Tutorial_Tutorial_LookOut"
                    "Play_vo_Tutorial_Tutorial_LookOut2"
                    "Play_vo_Tutorial_Tutorial_MoreDamage"
                    "Play_vo_Tutorial_Tutorial_MoveAshe"
                    "Play_vo_Tutorial_Tutorial_MoveAshe2"
                    "Play_vo_Tutorial_Tutorial_MoveChampion"
                    "Play_vo_Tutorial_Tutorial_NonPlayerChampions"
                    "Play_vo_Tutorial_Tutorial_NormalBattle"
                    "Play_vo_Tutorial_Tutorial_NormalBattle2"
                    "Play_vo_Tutorial_Tutorial_NoSupport"
                    "Play_vo_Tutorial_Tutorial_OhNo"
                    "Play_vo_Tutorial_Tutorial_OtherSummoners"
                    "Play_vo_Tutorial_Tutorial_PowerEquipment"
                    "Play_vo_Tutorial_Tutorial_PressForward"
                    "Play_vo_Tutorial_Tutorial_PurchaseThornmail"
                    "Play_vo_Tutorial_Tutorial_RapidReplenish"
                    "Play_vo_Tutorial_Tutorial_RememberToUse"
                    "Play_vo_Tutorial_Tutorial_Replenish"
                    "Play_vo_Tutorial_Tutorial_ReturnPlatform"
                    "Play_vo_Tutorial_Tutorial_SelectVolley"
                    "Play_vo_Tutorial_Tutorial_SpendAbilityPoint"
                    "Play_vo_Tutorial_Tutorial_SpendGold"
                    "Play_vo_Tutorial_Tutorial_StayBehind"
                    "Play_vo_Tutorial_Tutorial_SteadyGold"
                    "Play_vo_Tutorial_Tutorial_Succeeded"
                    "Play_vo_Tutorial_Tutorial_SucceededCombined"
                    "Play_vo_Tutorial_Tutorial_SummonedAnother"
                    "Play_vo_Tutorial_Tutorial_SupportOfOthers"
                    "Play_vo_Tutorial_Tutorial_TakenOutDefenses"
                    "Play_vo_Tutorial_Tutorial_TakeTheBrunt"
                    "Play_vo_Tutorial_Tutorial_TakeUpArms"
                    "Play_vo_Tutorial_Tutorial_TheObject"
                    "Play_vo_Tutorial_Tutorial_Thornmail"
                    "Play_vo_Tutorial_Tutorial_TrackedIn"
                    "Play_vo_Tutorial_Tutorial_TurnedTide"
                    "Play_vo_Tutorial_Tutorial_TwoSpells"
                    "Play_vo_Tutorial_Tutorial_UnlockCamera"
                    "Play_vo_Tutorial_Tutorial_UseVolley"
                    "Play_vo_Tutorial_Tutorial_Welcome"
                    "Play_vo_Tutorial_Tutorial_Wounded"
                }
            }
            BankUnit {
                name: string = "Announcer_Tutorial2"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial2_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial2_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Tutorial2_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Tutorial2_Announcer_Base_Under_Attack"
                    "Play_vo_Tutorial2_Announcer_Inhibitor_Under_Attack"
                    "Play_vo_Tutorial2_Announcer_Nexus_Under_Attack"
                    "Play_vo_Tutorial2_Announcer_Turret_Under_Attack"
                    "Play_vo_Tutorial2_Gag_Spin_To_Win"
                    "Play_vo_Tutorial2_General_Commendable"
                    "Play_vo_Tutorial2_General_Congratulations"
                    "Play_vo_Tutorial2_General_Excellent"
                    "Play_vo_Tutorial2_General_Good_Job"
                    "Play_vo_Tutorial2_General_Success"
                    "Play_vo_Tutorial2_General_Well_Done"
                    "Play_vo_Tutorial2_Intro_Begin"
                    "Play_vo_Tutorial2_Intro_Click_Continue"
                    "Play_vo_Tutorial2_Intro_Complete_Quest"
                    "Play_vo_Tutorial2_Intro_Exit_Base"
                    "Play_vo_Tutorial2_Intro_Goal"
                    "Play_vo_Tutorial2_Intro_Good_Job"
                    "Play_vo_Tutorial2_Intro_Guide"
                    "Play_vo_Tutorial2_Intro_Lanes"
                    "Play_vo_Tutorial2_Intro_Minions"
                    "Play_vo_Tutorial2_Intro_Primary_Quests"
                    "Play_vo_Tutorial2_Intro_Quest_Tracker"
                    "Play_vo_Tutorial2_Intro_Ready"
                    "Play_vo_Tutorial2_Intro_Secondary_Quests"
                    "Play_vo_Tutorial2_Intro_Tips"
                    "Play_vo_Tutorial2_Intro_Welcome"
                    "Play_vo_Tutorial2_MuteVO"
                    "Play_vo_Tutorial2_Quest_Boots"
                    "Play_vo_Tutorial2_Quest_Clear_Lane"
                    "Play_vo_Tutorial2_Quest_Complete"
                    "Play_vo_Tutorial2_Quest_Destroy_Inhibitor"
                    "Play_vo_Tutorial2_Quest_Destroy_Nexus"
                    "Play_vo_Tutorial2_Quest_Destroy_Nexus_Turrets"
                    "Play_vo_Tutorial2_Quest_Destroy_Turret"
                    "Play_vo_Tutorial2_Quest_Dragon"
                    "Play_vo_Tutorial2_Quest_Exit_Base"
                    "Play_vo_Tutorial2_Quest_Golem"
                    "Play_vo_Tutorial2_Quest_Lizard"
                    "Play_vo_Tutorial2_Quest_New"
                    "Play_vo_Tutorial2_Quest_Recall"
                    "Play_vo_Tutorial2_Quest_Received"
                    "Play_vo_Tutorial2_Quest_Slay_Champion"
                    "Play_vo_Tutorial2_Quest_Slay_Minions"
                    "Play_vo_Tutorial2_Quest_Starting_Item"
                    "Play_vo_Tutorial2_Quest_Wolves"
                    "Play_vo_Tutorial2_Quest_Wraiths"
                    "Play_vo_Tutorial2_Tip_Act_Quickly"
                    "Play_vo_Tutorial2_Tip_Ambush"
                    "Play_vo_Tutorial2_Tip_Assists"
                    "Play_vo_Tutorial2_Tip_Baron_Nashor"
                    "Play_vo_Tutorial2_Tip_Be_Alert"
                    "Play_vo_Tutorial2_Tip_Be_Careful"
                    "Play_vo_Tutorial2_Tip_Be_Wary_Near_Turrets"
                    "Play_vo_Tutorial2_Tip_Brush"
                    "Play_vo_Tutorial2_Tip_Carry_On"
                    "Play_vo_Tutorial2_Tip_Chat"
                    "Play_vo_Tutorial2_Tip_Chat_History"
                    "Play_vo_Tutorial2_Tip_Clear_Front_Turrets"
                    "Play_vo_Tutorial2_Tip_Danger"
                    "Play_vo_Tutorial2_Tip_Death_Recap"
                    "Play_vo_Tutorial2_Tip_Don_t_Be_Discouraged"
                    "Play_vo_Tutorial2_Tip_Dragon_Reward"
                    "Play_vo_Tutorial2_Tip_Dragon_Tactics"
                    "Play_vo_Tutorial2_Tip_Dragonslayer"
                    "Play_vo_Tutorial2_Tip_Enemy_Platform"
                    "Play_vo_Tutorial2_Tip_Experience_Points"
                    "Play_vo_Tutorial2_Tip_First_Skill_Point"
                    "Play_vo_Tutorial2_Tip_Golem"
                    "Play_vo_Tutorial2_Tip_Golem_Tactics"
                    "Play_vo_Tutorial2_Tip_High_Gold"
                    "Play_vo_Tutorial2_Tip_Inhibitor_Respawn"
                    "Play_vo_Tutorial2_Tip_Inhibitor_Reward"
                    "Play_vo_Tutorial2_Tip_Know_Battlefield"
                    "Play_vo_Tutorial2_Tip_Last_Hitting"
                    "Play_vo_Tutorial2_Tip_Lizard"
                    "Play_vo_Tutorial2_Tip_Lizard_Tactics"
                    "Play_vo_Tutorial2_Tip_Low_Health"
                    "Play_vo_Tutorial2_Tip_Manaless_Champion"
                    "Play_vo_Tutorial2_Tip_Minimap"
                    "Play_vo_Tutorial2_Tip_Minimap_Travel"
                    "Play_vo_Tutorial2_Tip_Neutral_Minions"
                    "Play_vo_Tutorial2_Tip_Passive_Ability"
                    "Play_vo_Tutorial2_Tip_Pay_Attention"
                    "Play_vo_Tutorial2_Tip_Ping_Minimap"
                    "Play_vo_Tutorial2_Tip_Respawn_Time"
                    "Play_vo_Tutorial2_Tip_Scoreboard"
                    "Play_vo_Tutorial2_Tip_Shop_While_Dead"
                    "Play_vo_Tutorial2_Tip_Skill_Points"
                    "Play_vo_Tutorial2_Tip_Spend_Gold"
                    "Play_vo_Tutorial2_Tip_Starting_Item"
                    "Play_vo_Tutorial2_Tip_Status_Effects"
                    "Play_vo_Tutorial2_Tip_Stay_Behind_Minions"
                    "Play_vo_Tutorial2_Tip_Ultimate_Ability"
                    "Play_vo_Tutorial2_Tip_Watch_Out"
                }
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "mus_map12_phase_select"
            victoryMusicID: string = "mus_map12_victory"
            defeatMusicID: string = "mus_map12_defeat"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = "TUTORIAL"
    }
    0xaeb17d00 = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "Announcer_Global_KaynRhaast_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_KaynRhaast_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_KaynRhaast_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_KaynRhaast_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_RhaastKayn_OnAce"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillminionredYouEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnDefeat"
                    "Play_vo_Announcer_Global_RhaastKayn_OnFirstBlood"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnMinionsSpawn"
                    "Play_vo_Announcer_Global_RhaastKayn_OnQuit"
                    "Play_vo_Announcer_Global_RhaastKayn_OnReconnect"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map1"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map10"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map11"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map12"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map2"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map4"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage1Map6"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2ButchersBridge"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map1"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map10"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map11"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map12"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map2"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map3"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map4"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage2Map6"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage3Map10"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage3Map11"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage3Map12"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage3Map3"
                    "Play_vo_Announcer_Global_RhaastKayn_OnStartGameMessage4Map10"
                    "Play_vo_Announcer_Global_RhaastKayn_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Global_RhaastKayn_OnVictory"
                    "Play_vo_Announcer_Global_RhaastKayn_WelcomeGenericMap"
                }
                voiceOver: bool = true
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "mus_map12_phase_select"
            victoryMusicID: string = "mus_map12_victory"
            defeatMusicID: string = "mus_map12_defeat"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map12_Ambience_base"
        }
        feature: hash = 0x01692855
    }
    0xb7d38bf6 = MapAudioDataProperties {
        BaseData: link = "Maps/Shipping/Common/Audio"
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "NPC_Map12_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map12_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map12_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map12_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Lissandra_freljordlore"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_Ambient"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_Browsing"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_Close"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_ForgotItems"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_Open"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenAshe"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenBlitzcrank"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenCaitlyn"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenEzreal"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenHeimerdinger"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenJayce"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenLissandra"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenMulti"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenOrianna"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenRich"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenSejuani"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenVi"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_OpenZilean"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Hermit_Purchase"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Ambient"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Browsing"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Close"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_ForgotItems"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Open"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenAnivia"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenAshe"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenBrand"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenBroOlaf"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenGragas"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenLissandra"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenMulti"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenNami"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenNunu"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenOlaf"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenRich"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenSejuani"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenTrundle"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenTryndamere"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenUdyr"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenVolibear"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_OpenYordle"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Purchase"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Purchase3022"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Purchase3092"
                    "Play_vo_Shopkeeper_Map12_HA_AP_Viking_Purchase3191"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "Announcer_Global_Female1_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Female1_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_Female1_OnAce"
                    "Play_vo_Announcer_Global_Female1_OnAceblue"
                    "Play_vo_Announcer_Global_Female1_OnAcepurple"
                    "Play_vo_Announcer_Global_Female1_OnAcered"
                    "Play_vo_Announcer_Global_Female1_OnChampionDoubleKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionDoubleKillpurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionDoubleKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionHexaKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionHexaKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionHexaKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionHexaKillYou"
                    "Play_vo_Announcer_Global_Female1_OnChampionHexaKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillHeroHero"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillMinionYouEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillTurretHeroAlt"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionPentaKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionPentaKillpurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionPentaKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionQuadraKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionQuadraKillpurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionQuadraKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionTripleKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionTripleKillpurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionTripleKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionUnrealKillblue"
                    "Play_vo_Announcer_Global_Female1_OnChampionUnrealKillEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnChampionUnrealKillpurple"
                    "Play_vo_Announcer_Global_Female1_OnChampionUnrealKillred"
                    "Play_vo_Announcer_Global_Female1_OnChampionUnrealKillYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerDieblue"
                    "Play_vo_Announcer_Global_Female1_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerDiepurple"
                    "Play_vo_Announcer_Global_Female1_OnDampenerDiered"
                    "Play_vo_Announcer_Global_Female1_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnblue"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnpurple"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnred"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnSoonblue"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnSoonpurple"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnSoonred"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerRespawnYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnDampenerUnderAttackblue"
                    "Play_vo_Announcer_Global_Female1_OnDampenerUnderAttackpurple"
                    "Play_vo_Announcer_Global_Female1_OnDampenerUnderAttackred"
                    "Play_vo_Announcer_Global_Female1_OnDefeat"
                    "Play_vo_Announcer_Global_Female1_OnFirstBlood"
                    "Play_vo_Announcer_Global_Female1_OnInhibitorAttackedYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillDragonblue"
                    "Play_vo_Announcer_Global_Female1_OnKillDragonpurple"
                    "Play_vo_Announcer_Global_Female1_OnKillDragonred"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Global_Female1_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6blue"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6purple"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6red"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6You"
                    "Play_vo_Announcer_Global_Female1_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Global_Female1_OnKillWormblue"
                    "Play_vo_Announcer_Global_Female1_OnKillWormpurple"
                    "Play_vo_Announcer_Global_Female1_OnKillWormred"
                    "Play_vo_Announcer_Global_Female1_OnLeave"
                    "Play_vo_Announcer_Global_Female1_OnLeaveEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnLeaveYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnMinionAlmostKillblue"
                    "Play_vo_Announcer_Global_Female1_OnMinionAlmostKillred"
                    "Play_vo_Announcer_Global_Female1_OnMinionHalfKillblue"
                    "Play_vo_Announcer_Global_Female1_OnMinionHalfKillred"
                    "Play_vo_Announcer_Global_Female1_OnMinionsSpawn"
                    "Play_vo_Announcer_Global_Female1_OnNexusAttackedYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnNexusUnderAttackblue"
                    "Play_vo_Announcer_Global_Female1_OnNexusUnderAttackpurple"
                    "Play_vo_Announcer_Global_Female1_OnNexusUnderAttackred"
                    "Play_vo_Announcer_Global_Female1_OnOneMinuteMinionsSpawn"
                    "Play_vo_Announcer_Global_Female1_OnQuit"
                    "Play_vo_Announcer_Global_Female1_OnQuitEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnQuitEnemyTeamAlt"
                    "Play_vo_Announcer_Global_Female1_OnQuitYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnQuitYourTeamAlt"
                    "Play_vo_Announcer_Global_Female1_OnReconnect"
                    "Play_vo_Announcer_Global_Female1_OnReconnectEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnReconnectYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map1"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map10"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map11"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map2"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map4"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map6"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage1Map8"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2ButchersBridge"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map1"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map10"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map11"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map12"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map2"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map3"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map4"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map6"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage2Map8"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage3Map10"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage3Map3"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage3Map8"
                    "Play_vo_Announcer_Global_Female1_OnStartGameMessage4Map10"
                    "Play_vo_Announcer_Global_Female1_OnSurrenderblue"
                    "Play_vo_Announcer_Global_Female1_OnSurrenderpurple"
                    "Play_vo_Announcer_Global_Female1_OnSurrenderred"
                    "Play_vo_Announcer_Global_Female1_OnTurretAlmostKillblue"
                    "Play_vo_Announcer_Global_Female1_OnTurretAlmostKillred"
                    "Play_vo_Announcer_Global_Female1_OnTurretAttackedYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnTurretDieblue"
                    "Play_vo_Announcer_Global_Female1_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Global_Female1_OnTurretDiepurple"
                    "Play_vo_Announcer_Global_Female1_OnTurretDiered"
                    "Play_vo_Announcer_Global_Female1_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Global_Female1_OnTurretHalfKillred"
                    "Play_vo_Announcer_Global_Female1_OnTurretUnderAttackblue"
                    "Play_vo_Announcer_Global_Female1_OnTurretUnderAttackpurple"
                    "Play_vo_Announcer_Global_Female1_OnTurretUnderAttackred"
                    "Play_vo_Announcer_Global_Female1_OnVictory"
                    "Play_vo_Announcer_Global_Female1_OnVictoryblue"
                    "Play_vo_Announcer_Global_Female1_OnVictorypurple"
                    "Play_vo_Announcer_Global_Female1_OnVictoryred"
                    "Play_vo_Announcer_Global_Female1_OnWelcome"
                    "Play_vo_Announcer_Global_Female1_OnWelcomeToLeague"
                    "Play_vo_Announcer_Global_Female1_TurretPlatingFall30Seconds"
                    "Play_vo_Announcer_Global_Female1_TurretPlatingFallOff"
                    "Play_vo_Announcer_Global_OnPointEnemyTeam"
                    "Play_vo_Announcer_Global_OnPointYou"
                    "Play_vo_Announcer_Global_OnPointYourTeam"
                    "Play_vo_Announcer_Global_OnStartGameMessage1ModeSnowdowShowdown"
                    "Play_vo_Announcer_Global_OnVictoryAlmostEnemy"
                    "Play_vo_Announcer_Global_OnVictoryAlmostYou"
                    "Play_vo_Announcer_Global_OnVictoryAlmostYourTeam"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "ENV_Map12_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map12_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map12_SFX_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map12_SFX_audio.wpk"
                }
                events: list[string] = {
                    "Play_sfx_Env_Map12_Ambience_base"
                    "Play_sfx_Env_map12_Chaos_Barriers"
                    "Play_sfx_Env_map12_chaos_inhibitor_alive_loop"
                    "Play_sfx_Env_map12_chaos_inhibitor_death_cast"
                    "Play_sfx_Env_map12_chaos_nexus_alive_loop"
                    "Play_sfx_Env_map12_fire_big"
                    "Play_sfx_Env_map12_fire_med_big"
                    "Play_sfx_env_map12_ha_ap_bannermidbridge_highwind"
                    "Play_sfx_env_map12_ha_ap_bannermidbridge_lowwind"
                    "Play_sfx_env_map12_ha_ap_bridgelanestatues_shatter"
                    "Play_sfx_env_map12_ha_ap_bridgelanestatues_shatter_ne"
                    "Play_sfx_env_map12_ha_ap_bridgelanestatues_shatter_se"
                    "Play_sfx_env_map12_ha_ap_chains_fallleft"
                    "Play_sfx_env_map12_ha_ap_chains_fallright"
                    "Play_sfx_env_map12_ha_ap_chains_windlow"
                    "Play_sfx_env_map12_ha_ap_chains_windstrong"
                    "Play_sfx_env_map12_ha_ap_chains_windstrong_left"
                    "Play_sfx_env_map12_ha_ap_chains_windstrong_right"
                    "Play_sfx_env_map12_ha_ap_cloth"
                    "Play_sfx_env_map12_ha_ap_cutaway_break"
                    "Play_sfx_env_map12_ha_ap_hermit_annoyed"
                    "Play_sfx_env_map12_ha_ap_hermit_door_close"
                    "Play_sfx_env_map12_ha_ap_hermit_door_open"
                    "Play_sfx_env_map12_ha_ap_hermit_entering"
                    "Play_sfx_env_map12_ha_ap_hermit_fire"
                    "Play_sfx_env_map12_ha_ap_hermit_idle1"
                    "Play_sfx_env_map12_ha_ap_hermit_idle1_leadin"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_fidget"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_leadin"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_pointing"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_readvara"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_readvarb"
                    "Play_sfx_env_map12_ha_ap_hermit_idle2_underbench"
                    "Play_sfx_env_map12_ha_ap_hermit_leaving1"
                    "Play_sfx_env_map12_ha_ap_hermit_selling2"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_annoyed"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_entering1"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_idle1"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_idle2"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_idle3"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_idle4"
                    "Play_sfx_env_map12_ha_ap_hermitrobot_leaving1"
                    "Play_sfx_env_map12_ha_ap_herotower_break"
                    "Play_sfx_env_map12_ha_ap_periphbridge_break"
                    "Play_sfx_env_map12_ha_ap_poro_base_jump"
                    "Play_sfx_env_map12_ha_ap_poro_explosion"
                    "Play_sfx_env_map12_ha_ap_shop_lantern"
                    "Play_sfx_env_map12_ha_ap_viking_shop_aura"
                    "Play_sfx_env_map12_ha_ap_viking_shop_close"
                    "Play_sfx_env_map12_ha_ap_viking_shop_open"
                    "Play_sfx_env_map12_heavywind_cast"
                    "Play_sfx_Env_map12_Order_Barriers"
                    "Play_sfx_Env_map12_order_inhibitor_alive_loop"
                    "Play_sfx_Env_map12_order_inhibitor_death_cast"
                    "Play_sfx_Env_map12_order_nexus_alive_loop"
                    "Play_sfx_Env_Turret_map12_ChaosTurret_break01"
                    "Play_sfx_Env_Turret_map12_ChaosTurret_break02"
                    "Play_sfx_Env_Turret_map12_ChaosTurret_break03"
                    "Play_sfx_Env_Turret_map12_OrderTurret_break01"
                    "Play_sfx_Env_Turret_map12_OrderTurret_break02"
                    "Play_sfx_Env_Turret_map12_OrderTurret_break03"
                    "Stop_sfx_Env_map12_Chaos_Barriers"
                    "Stop_sfx_env_map12_ha_ap_fire"
                    "Stop_sfx_env_map12_ha_ap_hermit_annoyed"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle1"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle1_leadin"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_fidget"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_leadin"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_pointing"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_readvara"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_readvarb"
                    "Stop_sfx_env_map12_ha_ap_hermit_idle2_underbench"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_annoyed"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_entering1"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_idle1"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_idle2"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_idle3"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_idle4"
                    "Stop_sfx_env_map12_ha_ap_hermitrobot_leaving1"
                    "Stop_sfx_env_map12_ha_ap_viking_shop_aura"
                    "Stop_sfx_env_map12_ha_ap_viking_shop_close"
                    "Stop_sfx_env_map12_ha_ap_viking_shop_open"
                    "Stop_sfx_env_map12_heavywind_cast"
                    "Stop_sfx_Env_map12_Order_Barriers"
                }
            }
            BankUnit {
                name: string = "MUS_Map12"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map12_audio.wpk"
                }
                events: list[string] = {
                    "mus_map12_defeat"
                    "mus_map12_phase_select"
                    "mus_map12_victory"
                }
            }
            BankUnit {
                name: string = "MISC_Map12_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Map12_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Map12_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_AramSpeedShrine_AramSpeedShrineBuff_OnBuffActivate"
                    "Play_sfx_EggActivate"
                    "Play_sfx_ShowdownRecall_OnBuffActivate"
                    "Play_sfx_ShowdownRecallImproved_OnBuffActivate"
                    "Stop_sfx_AramSpeedShrine_AramSpeedShrineBuff_OnBuffActivate"
                    "Stop_sfx_ShowdownRecall_OnBuffActivate"
                    "Stop_sfx_ShowdownRecallImproved_OnBuffActivate"
                }
            }
        }
        features: list[link] = {
            0xa010d345
            0xa8ad0e4a
            0x012578c1
            0xee7a7da2
            0xaeb17d00
            0x3d1a56c6
            0xa0bfc980
        }
    }
    0xc5fdcaa1 = SpellObject {
        mScriptName: string = "PoroSnaxFeedToKing4_FeeneypultTargeting"
        mSpell: pointer = SpellDataResource {
            flags: u32 = 36
            mCastTime: f32 = 0.25
            cooldownTime: list[f32] = {
                0
                0
                0
                0
                0
                0
                0
            }
            mProjectTargetToCastRange: bool = true
            castRange: list[f32] = {
                1025
                1025
                1025
                1025
                1025
                1025
                1025
            }
            castRangeDisplayOverride: list[f32] = {
                1025
                1025
                1025
                1025
                1025
                1025
                1025
            }
            castRadius: list[f32] = {
                250
                250
                250
                250
                250
                250
                250
            }
            castFrame: f32 = 7.5
            mTargetingTypeData: pointer = LocationClamped {}
            mAIData: embed = AISpellData {
                mRange: f32 = 1025
            }
            mClientData: embed = SpellDataResourceClient {
                mTargeterDefinitions: list[pointer] = {
                    TargeterDefinitionAoe {
                        centerLocator: embed = DrawablePositionLocator {
                            basePosition: u32 = 3
                        }
                        isConstrainedToRange: bool = true
                        constraintRange: embed = FloatPerSpellLevel {
                            mPerLevelValues: list[f32] = {
                                1025
                                1025
                                1025
                                1025
                                1025
                                1025
                            }
                        }
                    }
                    TargeterDefinitionCone {
                        startLocator: embed = DrawablePositionLocator {
                            orientationType: u32 = 2
                        }
                        endLocator: embed = DrawablePositionLocator {
                            basePosition: u32 = 3
                            orientationType: u32 = 2
                        }
                        coneAngleDegrees: option[f32] = {
                            22
                        }
                        coneRange: option[f32] = {
                            1200
                        }
                    }
                }
                mRightClickSpellAction: u32 = 1
            }
        }
    }
    0xee7a7da2 = FeatureAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "ENV_Map14_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map14_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map14_SFX_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Map14_SFX_audio.wpk"
                }
                events: list[string] = {
                    "Play_sfx_Env_Map14_Ambience_Anim_Bottle_break"
                    "Play_sfx_Env_Map14_Ambience_Anim_Bridge_Close_doors"
                    "Play_sfx_Env_Map14_Ambience_Anim_Bridge_Close_lock"
                    "Play_sfx_Env_Map14_Ambience_Anim_Bridge_Open_doors"
                    "Play_sfx_Env_Map14_Ambience_Anim_Bridge_Open_lock"
                    "Play_sfx_Env_Map14_Ambience_Anim_FishHook_idle"
                    "Play_sfx_Env_Map14_Ambience_Anim_SharkHook_wind"
                    "Play_sfx_Env_Map14_Ambience_Anim_ShopSouth_movement"
                    "Play_sfx_Env_Map14_Ambience_Anim_Squid_twitch"
                    "Play_sfx_Env_Map14_Ambience_Anim_Squid_wind"
                    "Play_sfx_Env_Map14_Ambience_base"
                    "Play_sfx_Env_Map14_Ambience_Emitter_BridgeCreak"
                    "Play_sfx_Env_Map14_Ambience_Emitter_Fire"
                    "Play_sfx_Env_Map14_Ambience_Emitter_PubBrew"
                    "Play_sfx_Env_Map14_Ambience_Emitter_PubShark"
                    "Play_sfx_Env_Map14_Ambience_Emitter_PubSouth"
                    "Play_sfx_Env_Map14_Ambience_Emitter_PubSquid"
                    "Play_sfx_Env_Map14_Ambience_Emitter_River"
                    "Play_sfx_Env_Map14_Ambience_Emitter_Rope"
                    "Play_sfx_Env_Map14_Ambience_Emitter_ShipMast"
                    "Play_sfx_Env_Map14_Ambience_Emitter_Shootout_Cannons"
                    "Play_sfx_Env_Map14_Ambience_Emitter_Shootout_Guns"
                    "Play_sfx_Env_Map14_Ambience_Emitter_Waterfall"
                    "Play_sfx_Env_Map14_chaos_inhibitor_alive_loop"
                    "Play_sfx_Env_Map14_chaos_inhibitor_dead_loop"
                    "Play_sfx_Env_Map14_chaos_Inhibitor_death_cast"
                    "Play_sfx_Env_Map14_chaos_inhibitor_respawn_cast"
                    "Play_sfx_Env_Map14_chaos_nexus_alive_loop"
                    "Play_sfx_Env_Map14_ChaosTurret_death"
                    "Play_sfx_Env_Map14_ChaosTurretChampionBasicAttack_cast"
                    "Play_sfx_Env_Map14_ChaosTurretChampionBasicAttack_hit"
                    "Play_sfx_Env_Map14_ChaosTurretChampionBasicAttack_idle"
                    "Play_sfx_Env_Map14_ChaosTurretChampionBasicAttack_missilelaunch"
                    "Play_sfx_Env_Map14_ChaosTurretMinionBasicAttack_cast"
                    "Play_sfx_Env_Map14_ChaosTurretMinionBasicAttack_hit"
                    "Play_sfx_Env_Map14_ChaosTurretMinionBasicAttack_missilelaunch"
                    "Play_sfx_Env_Map14_FirstBlood_Cannons_cast"
                    "Play_sfx_Env_Map14_order_inhibitor_alive_loop"
                    "Play_sfx_Env_Map14_order_inhibitor_dead_loop"
                    "Play_sfx_Env_Map14_order_inhibitor_death_cast"
                    "Play_sfx_Env_Map14_order_inhibitor_respawn_cast"
                    "Play_sfx_Env_Map14_order_nexus_alive_loop"
                    "Play_sfx_Env_Map14_OrderTurret_death"
                    "Play_sfx_Env_Map14_OrderTurretChampionBasicAttack_cast"
                    "Play_sfx_Env_Map14_OrderTurretChampionBasicAttack_hit"
                    "Play_sfx_Env_Map14_OrderTurretChampionBasicAttack_idle"
                    "Play_sfx_Env_Map14_OrderTurretChampionBasicAttack_missilelaunch"
                    "Play_sfx_Env_Map14_OrderTurretMinionBasicAttack_cast"
                    "Play_sfx_Env_Map14_OrderTurretMinionBasicAttack_hit"
                    "Play_sfx_Env_Map14_OrderTurretMinionBasicAttack_missilelaunch"
                    "Play_sfx_SnowballFollowupCast_Bilgewater_cast"
                    "Play_sfx_SnowballFollowupCast_Bilgewater_hit"
                    "Play_sfx_SnowballFollowupCast_Bilgewater_missilelaunch"
                    "Play_sfx_SummonerSnowball_Bilgewater_cast"
                    "Play_sfx_SummonerSnowball_Bilgewater_hit"
                    "Play_sfx_SummonerSnowball_Bilgewater_missilelaunch"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_BridgeCreak"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_Fire"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_PubBrew"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_PubShark"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_PubSouth"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_PubSquid"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_River"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_Rope"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_ShipMast"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_Shootout_Cannons"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_Shootout_Guns"
                    "Stop_sfx_Env_Map14_Ambience_Emitter_Waterfall"
                    "Stop_sfx_Env_Map14_ChaosTurretChampionBasicAttack_idle"
                    "Stop_sfx_Env_Map14_OrderTurretChampionBasicAttack_missilelaunch"
                }
            }
            BankUnit {
                name: string = "MUS_Map14"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map14_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map14_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Map14_audio.wpk"
                }
                events: list[string] = {
                    "Play_mus_map11_phase_defeat_Bilgewater"
                    "Play_mus_map11_phase_select_bilgewater"
                    "Play_mus_map11_phase_select_bilgewater_transition"
                    "Play_mus_map11_phase_victory_Bilgewater"
                    "Play_mus_map14_phase_defeat_base"
                    "Play_mus_map14_phase_select"
                    "Play_mus_map14_phase_victory_base"
                }
            }
            BankUnit {
                name: string = "NPC_Map14_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map14_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map14_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/NPC_Map14_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_Ambient"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_Browsing"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_Close"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_Open"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenCorki"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenDiana"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenDraven"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenEzreal"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenFizz"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenGangplank"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenHeimerdinger"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenNami"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenNautilus"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenRumble"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenSivir"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenTahmKench"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_OpenUdyr"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Bubbs_Purchase"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_Ambient"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_Browsing"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_Close"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_Open"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenAshe"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenFizz"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenGangplank"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenGragas"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenGraves"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenKarthus"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenMaokai"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenMissFortune"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenNami"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenNautilus"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenReksai"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenTwistedFate"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_OpenTwitch"
                    "Play_vo_Shopkeeper_Map12_BW_AP_Finn_Purchase"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "Announcer_Global_Male1_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Male1_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Male1_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Male1_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_Male1_OnAce"
                    "Play_vo_Announcer_Global_Male1_OnAceblue"
                    "Play_vo_Announcer_Global_Male1_OnAceEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnAcepurple"
                    "Play_vo_Announcer_Global_Male1_OnAcered"
                    "Play_vo_Announcer_Global_Male1_OnAceYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillblueHeropurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillblueHeroredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillpurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillpurpleHereblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillred"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillredHeroblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionDoubleKillYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillHeroHero"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillMinionYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillblueHeropurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillblueHeroredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillpurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillpurpleHeroblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillred"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillredHeroblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionPentaKillYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillblueHeropurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillblueHeroredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillpurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillpurpleHeroblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillred"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillredHeroblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionQuadraKillYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillblueHeropurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillblueHeroredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillpurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillpurpleHeroblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillred"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillredHeroblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionTripleKillYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillblueHeropurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillblueHeroredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroYouHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillpurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillpurpleHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillpurpleHeroblueHeropurple"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillred"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillredHeroblue"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillredHeroblueHerored"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnChampionUnrealKillYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerDieblue"
                    "Play_vo_Announcer_Global_Male1_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerDiepurple"
                    "Play_vo_Announcer_Global_Male1_OnDampenerDiered"
                    "Play_vo_Announcer_Global_Male1_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnblue"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnpurple"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnred"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnSoonblue"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnSoonpurple"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnSoonred"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerRespawnYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnDampenerUnderAttackblue"
                    "Play_vo_Announcer_Global_Male1_OnDampenerUnderAttackpurple"
                    "Play_vo_Announcer_Global_Male1_OnDampenerUnderAttackred"
                    "Play_vo_Announcer_Global_Male1_OnDefeat"
                    "Play_vo_Announcer_Global_Male1_OnFirstBlood"
                    "Play_vo_Announcer_Global_Male1_OnFirstBloodblue"
                    "Play_vo_Announcer_Global_Male1_OnFirstBloodEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnFirstBloodpurple"
                    "Play_vo_Announcer_Global_Male1_OnFirstBloodred"
                    "Play_vo_Announcer_Global_Male1_OnFirstBloodYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnInhibitorAttackedYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonblue"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonpurple"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonred"
                    "Play_vo_Announcer_Global_Male1_OnKillDragonYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Global_Male1_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6blue"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6purple"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6red"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6You"
                    "Play_vo_Announcer_Global_Male1_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillWormblue"
                    "Play_vo_Announcer_Global_Male1_OnKillWormHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillWormHeroYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnKillWormpurple"
                    "Play_vo_Announcer_Global_Male1_OnKillWormred"
                    "Play_vo_Announcer_Global_Male1_OnKillWormYouYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnMinionsSpawn"
                    "Play_vo_Announcer_Global_Male1_OnNexusAttackedYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnNexusUnderAttackblue"
                    "Play_vo_Announcer_Global_Male1_OnNexusUnderAttackpurple"
                    "Play_vo_Announcer_Global_Male1_OnNexusUnderAttackred"
                    "Play_vo_Announcer_Global_Male1_OnQuit"
                    "Play_vo_Announcer_Global_Male1_OnReconnect"
                    "Play_vo_Announcer_Global_Male1_OnReconnectYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map1"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map10"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map11"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map12"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map2"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map4"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map6"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage1Map8"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2ButchersBridge"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map1"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map10"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map11"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map12"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map12_Unused"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map2"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map3"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map4"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map6"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage2Map8"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage3Map10"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage3Map3"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage3Map8"
                    "Play_vo_Announcer_Global_Male1_OnStartGameMessage4Map10"
                    "Play_vo_Announcer_Global_Male1_OnSurrenderblue"
                    "Play_vo_Announcer_Global_Male1_OnSurrenderpurple"
                    "Play_vo_Announcer_Global_Male1_OnSurrenderred"
                    "Play_vo_Announcer_Global_Male1_OnTurretDieblue"
                    "Play_vo_Announcer_Global_Male1_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Global_Male1_OnTurretDiepurple"
                    "Play_vo_Announcer_Global_Male1_OnTurretDiered"
                    "Play_vo_Announcer_Global_Male1_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Global_Male1_OnTurretUnderAttackblue"
                    "Play_vo_Announcer_Global_Male1_OnTurretUnderAttackpurple"
                    "Play_vo_Announcer_Global_Male1_OnTurretUnderAttackred"
                    "Play_vo_Announcer_Global_Male1_OnVictory"
                    "Play_vo_Announcer_Global_Male1_OnVictoryblue"
                    "Play_vo_Announcer_Global_Male1_OnVictorypurple"
                    "Play_vo_Announcer_Global_Male1_OnVictoryred"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "NPC_Map14_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/NPC_Map14_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/NPC_Map14_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_Env_Map14_BW_AP_Bubbs_entrance1"
                    "Play_sfx_Env_Map14_BW_AP_Bubbs_entrance2"
                    "Play_sfx_Env_Map14_BW_AP_Bubbs_exit1"
                    "Play_sfx_Env_Map14_BW_AP_Finn_entrance1"
                    "Play_sfx_Env_Map14_BW_AP_Finn_exit1"
                }
            }
            BankUnit {
                name: string = "Announcer_Global_Pyke_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Pyke_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Pyke_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/Announcer_Global_Pyke_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Announcer_Global_Pyke_OnAce"
                    "Play_vo_Announcer_Global_Pyke_OnChampionDoubleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionDoubleKillYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillHeroHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillHeroHeroYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillHeroYouEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionblueHero"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionblueHeropurple"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionblueHerored"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillMinionHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillMinionHeroYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionpurpleHero"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionpurpleHeroblue"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionredHero"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillminionredHeroblue"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillMinionYouEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillturretblueHeropurple"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillturretblueHerored"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillTurretHeroEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillTurretHeroYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillturretpurpleHeroblue"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillturretredHeroblue"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillTurretYouEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionKillYouHeroYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionPentaKillEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionPentaKillYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionQuadraKillEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionQuadraKillYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionTripleKillEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnChampionTripleKillYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnDampenerDieEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnDampenerDieYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnDampenerRespawnSoonEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnDampenerRespawnSoonYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnDefeat"
                    "Play_vo_Announcer_Global_Pyke_OnFirstBlood"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpree"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet1"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet2"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet3"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet4"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet5"
                    "Play_vo_Announcer_Global_Pyke_OnKilledUnitOnKillingSpreeSet6"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet1EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet1YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet2EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet2YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet3EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet3YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet4EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet4YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet5EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet5YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet6EnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnKillingSpreeSet6YourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnMinionsSpawn"
                    "Play_vo_Announcer_Global_Pyke_OnOneMinuteMinionsSpawn"
                    "Play_vo_Announcer_Global_Pyke_OnQuit"
                    "Play_vo_Announcer_Global_Pyke_OnReconnect"
                    "Play_vo_Announcer_Global_Pyke_OnStartGameMessage2"
                    "Play_vo_Announcer_Global_Pyke_OnStartGameMessage2ButchersBridge"
                    "Play_vo_Announcer_Global_Pyke_OnTurretDieEnemyTeam"
                    "Play_vo_Announcer_Global_Pyke_OnTurretDieYourTeam"
                    "Play_vo_Announcer_Global_Pyke_OnVictory"
                }
                voiceOver: bool = true
            }
        }
        music: embed = MusicAudioDataProperties {
            themeMusicID: string = "Play_mus_map14_phase_select"
            victoryMusicID: string = "Play_mus_map14_phase_victory_base"
            defeatMusicID: string = "Play_mus_map14_phase_defeat_base"
            victoryBannerSound: string = "Play_sfx_Env_SRUAP_Victory_Banner"
            defeatBannerSound: string = "Play_sfx_Evn_SRUAP_Defeat_Banner"
            ambientEvent: string = "Play_sfx_Env_Map14_Ambience_base"
        }
        feature: hash = 0x7bfe68d7
    }
    0xb874104c = GameModeConstantsGroup {}
    "Maps/Shipping/Common/Audio" = MapAudioDataProperties {
        bankUnits: list2[embed] = {
            BankUnit {
                name: string = "Init"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/Init.bnk"
                }
            }
            BankUnit {
                name: string = "MISC_Global_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Global_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Global_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_practicedummy_death"
                    "Play_sfx_practicedummy_onhit"
                    "Play_sfx_practicedummy_spawn"
                    "Play_sfx_SpawningBeacon"
                    "Stop_sfx_spawningbeacon"
                }
            }
            BankUnit {
                name: string = "MISC_Gameplay_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Gameplay_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Gameplay_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_Death_Ally"
                    "Play_sfx_Death_Enemy"
                    "Play_sfx_Death_Kill"
                    "Play_sfx_Death_Self"
                    "Play_sfx_deathexplo_Death"
                    "Play_sfx_DeathStinger_01"
                    "Play_sfx_DeathStinger_02"
                    "Play_sfx_DeathStinger_03"
                    "Play_sfx_DeathStinger_04"
                    "Play_sfx_DeathStinger_05"
                    "Play_sfx_GoldAquisition_P_cast"
                    "Play_sfx_hud_base_store_item_with_debt"
                    "Play_sfx_levelup_levelup"
                    "Play_sfx_Misc_Gameplay_Shield_Break"
                    "Play_sfx_Perks_Domination_DarkHarvest_OnBuffCast"
                    "Play_sfx_Perks_Domination_DarkHarvest_OnHit"
                    "Play_sfx_Perks_Domination_DarkHarvest_OnMissileCast"
                    "Play_sfx_Perks_Domination_Electrocute_OnBuffActivate"
                    "Play_sfx_Perks_Domination_GhostPoro_OnBuffCast"
                    "Play_sfx_Perks_Domination_HailOfBlades_OnBuffActivate"
                    "Play_sfx_Perks_Domination_HailOfBlades_Ready"
                    "Play_sfx_Perks_Domination_ThrilloftheHunt_OnBuffActivate"
                    "Play_sfx_Perks_Domination_ThrilloftheHunt_OnBuffDeactivate"
                    "Play_sfx_Perks_Domination_ThrilloftheHunt_OnHit"
                    "Play_sfx_Perks_Domination_ThrilloftheHunt_Target_OnBuffCast"
                    "Play_sfx_Perks_Domination_ZombieWard_OnBuffCast"
                    "Play_sfx_Perks_Inspiration_ChannelBlink_buffactivate"
                    "Play_sfx_Perks_Inspiration_ChannelBlink_buffdeactivate"
                    "Play_sfx_Perks_Inspiration_FirstStrike_buffactivate"
                    "Play_sfx_Perks_Inspiration_FirstStrike_cast"
                    "Play_sfx_Perks_Inspiration_FirstStrike_hit"
                    "Play_sfx_Perks_Inspiration_FirstStrike_missilelaunch"
                    "Play_sfx_Perks_Inspiration_HextechFreezeray_Auto_OnHit"
                    "Play_sfx_Perks_Inspiration_HextechFreezeray_hit"
                    "Play_sfx_Perks_Inspiration_HextechFreezeray_OnMissileCast"
                    "Play_sfx_Perks_Inspiration_Kleptomancy_buffactivate"
                    "Play_sfx_Perks_Inspiration_MinionAbsorber_OnBuffActivate"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_PanelOpen"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerBarrier"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerBoost"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerClarity"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerDot"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerExhaust"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerFlash"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerHaste"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerHeal"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerSmite"
                    "Play_sfx_Perks_Inspiration_SummonerSpecialist_SummonerTeleport"
                    "Play_sfx_Perks_Precision_Conqueror_OnBuffActivate"
                    "Play_sfx_Perks_Precision_Conqueror_OnBuffDeactivate"
                    "Play_sfx_Perks_Precision_Conqueror_Ready"
                    "Play_sfx_Perks_Precision_ExhilaratingStrike_Heal_OnBuffActivate"
                    "Play_sfx_Perks_Precision_ExhilaratingStrike_OnBuffActivate"
                    "Play_sfx_Perks_Precision_ExhilaratingStrike_OnHit"
                    "Play_sfx_Perks_Precision_ExhilaratingStrike_speed"
                    "Play_sfx_Perks_Precision_LethalTempo_buffdeactivate"
                    "Play_sfx_Perks_Precision_LethalTempo_cast_lua"
                    "Play_sfx_Perks_Precision_LethalTempo_loop"
                    "Play_sfx_Perks_Precision_LethalTempo_ready"
                    "Play_sfx_Perks_Precision_PressTheAttack_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Aftershock_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Aftershock_OnBuffDeactivate"
                    "Play_sfx_Perks_Resolve_BonePlating_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_BonePlating_OnBuffDeactivate"
                    "Play_sfx_Perks_Resolve_BonePlating_OnHit"
                    "Play_sfx_Perks_Resolve_GuardiansSoul_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_GuardiansSoul_OnBuffCast_ready"
                    "Play_sfx_Perks_Resolve_GuardiansSoul_OnBuffCast_self"
                    "Play_sfx_Perks_Resolve_GuardiansSoul_OnBuffDeactivate"
                    "Play_sfx_Perks_Resolve_RuinedKingsTribute_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_RuinedKingsTribute_OnBuffCast_heal"
                    "Play_sfx_Perks_Resolve_RuinedKingsTribute_OnHit"
                    "Play_sfx_Perks_Resolve_ShieldBash_big_hit"
                    "Play_sfx_Perks_Resolve_ShieldBash_hit"
                    "Play_sfx_Perks_Resolve_Siege01Down_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege01Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege02Down_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege02Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege03Down_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege03Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege04Down_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege04Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege05Down_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege05Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege06Up_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege_OnBuffActivate"
                    "Play_sfx_Perks_Resolve_Siege_OnBuffDeactivate"
                    "Play_sfx_Perks_Resolve_Siege_OnHit"
                    "Play_sfx_Perks_Sorcery_Meteor_missilelaunch"
                    "Play_sfx_Perks_Sorcery_Meteor_OnHit"
                    "Play_sfx_Perks_Sorcery_Meteor_OnMiss"
                    "Play_sfx_Perks_Sorcery_Meteor_OnMissileCast"
                    "Play_sfx_Perks_Sorcery_Meteor_ready"
                    "Play_sfx_Perks_Sorcery_NimbusCloak_OnBuffActivate"
                    "Play_sfx_Perks_Sorcery_NimbusCloak_OnBuffCast"
                    "Play_sfx_Perks_Sorcery_NimbusCloak_OnBuffDeactivate"
                    "Play_sfx_Perks_Sorcery_NullifyingOrb_buffactivate"
                    "Play_sfx_Perks_Sorcery_NullifyingOrb_buffdeactivate"
                    "Play_sfx_Perks_Sorcery_Perxie_Attack_hit"
                    "Play_sfx_Perks_Sorcery_Perxie_Attack_missilelaunch"
                    "Play_sfx_Perks_Sorcery_Perxie_Homeguard3D_footstep"
                    "Play_sfx_Perks_Sorcery_Perxie_Recall3D_buffactivate"
                    "Play_sfx_Perks_Sorcery_Perxie_Return_OnMissileCast"
                    "Play_sfx_Perks_Sorcery_Perxie_Shield_buffactivate"
                    "Play_sfx_Perks_Sorcery_Perxie_Shield_missilelaunch"
                    "Play_sfx_Perks_Sorcery_SpellSlingersSurge_OnBuffActivate"
                    "Play_sfx_Perks_TenMinuteBuffs_OnBuffActivate"
                    "Play_sfx_Recall_OnBuffActivate"
                    "Play_sfx_Recall_return"
                    "Play_sfx_RecallImproved_OnBuffActivate"
                    "Play_sfx_Respawn_respawn"
                    "Play_sfx_SnowballFollowupCast_hit"
                    "Play_sfx_SnowballFollowupCast_OnCast"
                    "Play_sfx_SRU_SOG_SRU_Project_SOGSpawn_buffactivate"
                    "Play_sfx_SRU_SOG_SRU_SOGSpawn_buffactivate"
                    "Play_sfx_SRU_Spawn_SRU_CreatureMiniSpawn_buffactivate"
                    "Play_sfx_SRU_Spawn_SRU_CreatureSpawn"
                    "Play_sfx_SummonerBacktrack_cast"
                    "Play_sfx_SummonerBacktrack_cast_self"
                    "Play_sfx_SummonerBacktrack_missilelaunch"
                    "Play_sfx_SummonerBarrier_OnBuffActivate"
                    "Play_sfx_SummonerBarrier_OnBuffDeactivate"
                    "Play_sfx_SummonerBarrier_OnCast"
                    "Play_sfx_SummonerBoost_OnCast"
                    "Play_sfx_SummonerClairvoyance_place"
                    "Play_sfx_SummonerDot_OnBuffActivate"
                    "Play_sfx_SummonerDot_OnBuffActivate_stereo"
                    "Play_sfx_SummonerDot_OnBuffDeactivate"
                    "Play_sfx_SummonerDot_OnBuffDeactivate_stereo"
                    "Play_sfx_SummonerDot_OnHit"
                    "Play_sfx_SummonerDot_OnHit_stereo"
                    "Play_sfx_SummonerExhaust_OnHit"
                    "Play_sfx_SummonerExhaustSlow_OnBuffActivate"
                    "Play_sfx_SummonerExhaustSlow_OnBuffActivate_stereo"
                    "Play_sfx_SummonerFlash_OnCast"
                    "Play_sfx_SummonerFlash_return"
                    "Play_sfx_SummonerHaste_OnBuffActivate"
                    "Play_sfx_SummonerHaste_OnBuffDeactivate"
                    "Play_sfx_SummonerHaste_OnCast"
                    "Play_sfx_SummonerHeal_OnCast"
                    "Play_sfx_SummonerMana_OnCast"
                    "Play_sfx_SummonerPoroRecall_cast"
                    "Play_sfx_SummonerPoroRecall_hit"
                    "Play_sfx_SummonerPoroThrow_cast"
                    "Play_sfx_SummonerPoroThrow_hit"
                    "Play_sfx_SummonerPoroThrow_missilelaunch"
                    "Play_sfx_SummonerPoroThrow_Skin06_cast"
                    "Play_sfx_SummonerPoroThrow_Skin06_hit"
                    "Play_sfx_SummonerPoroThrow_Skin06_missilelaunch"
                    "Play_sfx_SummonerReturn_onbuffdeactivate"
                    "Play_sfx_SummonerSmite_OnHit"
                    "Play_sfx_SummonerSnowball_hit"
                    "Play_sfx_SummonerSnowball_miss"
                    "Play_sfx_SummonerSnowball_missilelaunch"
                    "Play_sfx_SummonerSnowball_OnCast"
                    "Play_sfx_SummonerTeleport_buffactivate"
                    "Play_sfx_SummonerTeleport_marker"
                    "Play_sfx_SummonerTeleport_return"
                    "Play_sfx_SummonerTeleport_upgrade_transform"
                    "Play_sfx_SuperRecall_OnBuffActivate"
                    "Play_sfx_SuperRecall_return"
                    "Play_sfx_SuperRecallImproved_OnBuffActivate"
                    "Stop_sfx_levelup_levelup"
                    "Stop_sfx_Perks_Domination_ThrilloftheHunt_OnBuffActivate"
                    "Stop_sfx_Perks_Resolve_GuardiansSoul_OnBuffActivate"
                    "Stop_sfx_Perks_Sorcery_Perxie_Recall3D_buffactivate"
                    "Stop_sfx_Recall_OnBuffActivate"
                    "Stop_sfx_Recall_return"
                    "Stop_sfx_RecallImproved_OnBuffActivate"
                    "Stop_sfx_SummonerBarrier_OnBuffActivate"
                    "Stop_sfx_SummonerDot_OnBuffActivate"
                    "Stop_sfx_SummonerDot_OnBuffActivate_stereo"
                    "Stop_sfx_SummonerExhaustSlow_OnBuffActivate"
                    "Stop_sfx_SummonerHaste_OnBuffActivate"
                    "Stop_sfx_SummonerPoroThrow_missilelaunch"
                    "Stop_sfx_SummonerPoroThrow_Skin06_missilelaunch"
                    "Stop_sfx_SummonerTeleport_buffactivate"
                    "Stop_sfx_SummonerTeleport_marker"
                    "Stop_sfx_SummonerTeleport_return"
                    "Stop_sfx_SuperRecall_OnBuffActivate"
                    "Stop_sfx_SuperRecallImproved_OnBuffActivate"
                }
            }
            BankUnit {
                name: string = "NPC_Global_Minions_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/NPC_Global_Minions_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/NPC_Global_Minions_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack2_OnHit"
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_HA_ChaosMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack2_OnCast"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack2_OnHit"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack3_OnCast"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack3_OnHit"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack_OnCast"
                    "Play_sfx_HA_ChaosMinionRangedBasicAttack_OnHit"
                    "Play_sfx_HA_ChaosMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_HA_ChaosMinionSiegeBasicAttack_OnMissileCast"
                    "Play_sfx_HA_ChaosMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_HA_ChaosMinionSuperBasicAttack2_OnHit"
                    "Play_sfx_HA_ChaosMinionSuperBasicAttack_OnCast"
                    "Play_sfx_HA_ChaosMinionSuperBasicAttack_OnHit"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack2_OnHit"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_HA_OrderMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_HA_OrderMinionRangedBasicAttack2_OnCast"
                    "Play_sfx_HA_OrderMinionRangedBasicAttack2_OnHit"
                    "Play_sfx_HA_OrderMinionRangedBasicAttack_OnCast"
                    "Play_sfx_HA_OrderMinionRangedBasicAttack_OnHit"
                    "Play_sfx_HA_OrderMinionSiegeBasicAttack_OnCast"
                    "Play_sfx_HA_OrderMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_HA_OrderMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_HA_OrderMinionSuperBasicAttack2_OnHit"
                    "Play_sfx_HA_OrderMinionSuperBasicAttack_OnCast"
                    "Play_sfx_HA_OrderMinionSuperBasicAttack_OnHit"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack2_OnHit"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_SRU_ChaosMinionMelee_SRU_ChaosMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack2_OnCast"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack2_OnHit"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack3_OnCast"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack3_OnHit"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack_OnCast"
                    "Play_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack_OnHit"
                    "Play_sfx_SRU_ChaosMinionSiege_SRU_ChaosMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_SRU_ChaosMinionSiege_SRU_ChaosMinionSiegeBasicAttack_OnMissileCast"
                    "Play_sfx_SRU_ChaosMinionSuper_SRU_ChaosMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_SRU_ChaosMinionSuper_SRU_ChaosMinionSuperBasicAttack2_OnHit"
                    "Play_sfx_SRU_ChaosMinionSuper_SRU_ChaosMinionSuperBasicAttack_OnCast"
                    "Play_sfx_SRU_ChaosMinionSuper_SRU_ChaosMinionSuperBasicAttack_OnHit"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack2_OnCast"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack2_OnHit"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack3_OnCast"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack3_OnHit"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack_OnCast"
                    "Play_sfx_SRU_OrderMinionMelee_SRU_OrderMinionMeleeBasicAttack_OnHit"
                    "Play_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack2_OnCast"
                    "Play_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack2_OnHit"
                    "Play_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack_OnCast"
                    "Play_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack_OnHit"
                    "Play_sfx_SRU_OrderMinionSiege_SRU_OrderMinionSiegeBasicAttack_OnCast"
                    "Play_sfx_SRU_OrderMinionSiege_SRU_OrderMinionSiegeBasicAttack_OnHit"
                    "Play_sfx_SRU_OrderMinionSuper_SRU_OrderMinionSuperBasicAttack2_OnCast"
                    "Play_sfx_SRU_OrderMinionSuper_SRU_OrderMinionSuperBasicAttack2_OnHit"
                    "Play_sfx_SRU_OrderMinionSuper_SRU_OrderMinionSuperBasicAttack_OnCast"
                    "Play_sfx_SRU_OrderMinionSuper_SRU_OrderMinionSuperBasicAttack_OnHit"
                    "Play_sfx_SRU_Spawn_MinionsSpawn_cast"
                    "Stop_sfx_HA_ChaosMinionRangedBasicAttack2_OnCast"
                    "Stop_sfx_HA_ChaosMinionRangedBasicAttack3_OnCast"
                    "Stop_sfx_HA_ChaosMinionRangedBasicAttack_OnCast"
                    "Stop_sfx_HA_ChaosMinionSiegeBasicAttack_OnMissileCast"
                    "Stop_sfx_HA_OrderMinionRangedBasicAttack2_OnCast"
                    "Stop_sfx_HA_OrderMinionRangedBasicAttack_OnCast"
                    "Stop_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack2_OnCast"
                    "Stop_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack3_OnCast"
                    "Stop_sfx_SRU_ChaosMinionRanged_SRU_ChaosMinionRangedBasicAttack_OnCast"
                    "Stop_sfx_SRU_ChaosMinionSiege_SRU_ChaosMinionSiegeBasicAttack_OnMissileCast"
                    "Stop_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack2_OnCast"
                    "Stop_sfx_SRU_OrderMinionRanged_SRU_OrderMinionRangedBasicAttack_OnCast"
                    "Stop_sfx_SRU_Spawn_MinionsSpawn_cast"
                }
            }
            BankUnit {
                name: string = "ENV_EoG_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_EoG_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_EoG_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_Env_Global_EoG_ChaosNexus_death_cast"
                    "Play_sfx_Env_Global_EoG_OrderNexus_death_oc"
                    "Play_sfx_Env_SRUAP_Victory_Banner"
                    "Play_sfx_Evn_SRUAP_Defeat_Banner"
                    "Play_sfx_lunarrevel_victory_fireworks"
                    "Stop_sfx_Env_Global_EoG_ChaosNexus_death_cast"
                    "Stop_sfx_Env_Global_EoG_OrderNexus_death_cast"
                    "Stop_sfx_Env_Global_EoG_OrderNexus_death_oc"
                    "Stop_sfx_Env_SRUAP_Victory_Banner"
                    "Stop_sfx_Evn_SRUAP_Defeat_Banner"
                    "Stop_sfx_lunarrevel_victory_fireworks"
                }
            }
            BankUnit {
                name: string = "ENV_Global_Buildings_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Global_Buildings_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Global_Buildings_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_Env_Global_Emitter_Brush_OnMovement"
                    "Play_sfx_Env_Global_Emitter_cauldron"
                    "Play_sfx_Env_Global_Emitter_firebig"
                    "Play_sfx_Env_Global_Emitter_firemedbig"
                    "Play_sfx_Env_Global_Emitter_firemedium"
                    "Play_sfx_Env_Global_Emitter_firesmall"
                    "Play_sfx_Env_Global_Emitter_steam"
                    "Play_sfx_Env_HQ_Destroyed"
                    "Play_sfx_Env_HQ_On"
                    "Play_sfx_Env_HQ_OnDestroy"
                    "Play_sfx_Env_HQ_Online"
                    "Play_sfx_Env_HQ_OnNexusRise2D"
                    "Play_sfx_Env_HQ_PowerUp"
                    "Play_sfx_Env_Inhibitor_Destroyed"
                    "Play_sfx_Env_Inhibitor_OnDestroy"
                    "Play_sfx_env_map12_ha_ap_hermit_fire"
                    "Play_sfx_Env_ShrineTurretAttack_cast"
                    "Play_sfx_Env_ShrineTurretAttack_hit"
                    "Play_sfx_Env_Turret_Death3D"
                    "Play_sfx_Env_Turret_Destroyed"
                    "Play_sfx_Env_Turret_explosion"
                    "Play_sfx_Env_Turret_shatter"
                    "Play_sfx_Env_Turret_shatter2"
                    "Play_sfx_Env_TurretBasicAttack_hit"
                    "Play_sfx_Env_TurretBasicAttack_missilelaunch"
                    "Play_sfx_Env_TurretChampionBasicAttack_cast"
                    "Play_sfx_Env_TurretChampionBasicAttack_hit"
                    "Play_sfx_Env_TurretChampionBasicAttack_missilelaunch"
                    "Stop_sfx_Env_HQ_On"
                    "Stop_sfx_Env_HQ_OnNexusRise2D"
                    "Stop_sfx_Env_HQ_PowerUp"
                    "Stop_sfx_Env_Inhibitor_Destroyed"
                    "Stop_sfx_env_map12_ha_ap_fire"
                    "Stop_sfx_Env_ShrineTurretAttack_hit"
                    "Stop_sfx_Env_TurretBasicAttack_missilelaunch"
                    "Stop_sfx_Env_TurretChampionBasicAttack_missilelaunch"
                }
            }
            BankUnit {
                name: string = "MUS_Global"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Global_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Global_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MUS_Global_audio.wpk"
                }
                events: list[string] = {
                    "mus_global_health_dead_select"
                    "mus_global_health_revive_select"
                    "mus_global_mainbuff_activate"
                    "mus_global_mainbuff_inactivate"
                }
            }
            BankUnit {
                name: string = "ITEMS_Global"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ITEMS_Global_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ITEMS_Global_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_1035_buffactivate"
                    "Play_sfx_1039_buffactivate"
                    "Play_sfx_2065Active_OnCast"
                    "Play_sfx_2065CombatBuff_hit"
                    "Play_sfx_2065MoveSpeed_OnBuffActivate"
                    "Play_sfx_3001Debuff_buffactivate"
                    "Play_sfx_3026_buffactivate"
                    "Play_sfx_3046Buff_buffactivate"
                    "Play_sfx_3050Active_OnCast"
                    "Play_sfx_3053Shield_OnBuffActivate"
                    "Play_sfx_3053Shield_OnBuffDeactivate"
                    "Play_sfx_3053StackingBuff_OnBuffCast"
                    "Play_sfx_3053StackingBuff_OnBuffDeactivate"
                    "Play_sfx_3071Buff_hit"
                    "Play_sfx_3078_buffactivate"
                    "Play_sfx_3121Shield_buffactivate"
                    "Play_sfx_3121Shield_OnBuffActivate"
                    "Play_sfx_3121Shield_OnBuffDeactivate"
                    "Play_sfx_3152_hit"
                    "Play_sfx_3152_hit_ground"
                    "Play_sfx_3152Active_OnCast"
                    "Play_sfx_3152missile_missilelaunch"
                    "Play_sfx_3153Spell_OnHit"
                    "Play_sfx_3153Spell_OnMissileLaunch"
                    "Play_sfx_3155HexdrinkerBuff_buffactivate"
                    "Play_sfx_3155HexdrinkerBuff_OnBuffActivate"
                    "Play_sfx_3155HexdrinkerBuff_OnBuffDeactivate"
                    "Play_sfx_3156MawBuff_buffactivate"
                    "Play_sfx_3156MawBuff_OnBuffActivate"
                    "Play_sfx_3156MawBuff_OnBuffDeactivate"
                    "Play_sfx_3190Active_OnCast"
                    "Play_sfx_3190Shield_OnBuffActivate"
                    "Play_sfx_3190Shield_OnBuffDeactivate"
                    "Play_sfx_3222Active_OnHit"
                    "Play_sfx_4005Marker_hit"
                    "Play_sfx_4401MaxStacked_cast"
                    "Play_sfx_4401MaxStacked_OnBuffActivate"
                    "Play_sfx_4401MaxStacked_OnBuffDeactivate"
                    "Play_sfx_4628_buffactivate"
                    "Play_sfx_4629RampingBuff_OnBuffDeactivate"
                    "Play_sfx_4629StackCounter_buffactivate"
                    "Play_sfx_4629StackCounter_cast"
                    "Play_sfx_4633EnrageBuff_OnBuffActivate"
                    "Play_sfx_4633EnrageBuff_OnBuffDeactivate"
                    "Play_sfx_4636_hit"
                    "Play_sfx_4636_ready_cast"
                    "Play_sfx_4636_speed_buffactivate"
                    "Play_sfx_4644ShieldProtectionBuff_Activate_buffactivate"
                    "Play_sfx_4644ShieldProtectionBuff_buffdeactivate"
                    "Play_sfx_4644ShieldProtectionBuff_cast"
                    "Play_sfx_4644ShieldProtectionBuff_OnBuffActivate"
                    "Play_sfx_6029_hit"
                    "Play_sfx_6029active_OnCast"
                    "Play_sfx_6035_Spell_OnCast"
                    "Play_sfx_6617_buffactivate"
                    "Play_sfx_6617_hit"
                    "Play_sfx_6617_hit_max"
                    "Play_sfx_6617_missilelaunch"
                    "Play_sfx_6630_heal"
                    "Play_sfx_6630_hit"
                    "Play_sfx_6630active_OnCast"
                    "Play_sfx_6631_hit"
                    "Play_sfx_6631active_OnCast"
                    "Play_sfx_6653burn_buffactivate"
                    "Play_sfx_6655_hit"
                    "Play_sfx_6655buff_buffactivate"
                    "Play_sfx_6655Missile_OnHit"
                    "Play_sfx_6655Missile_OnMissileLaunch"
                    "Play_sfx_6656_hit_root"
                    "Play_sfx_6656_hit_slow"
                    "Play_sfx_6656cast_OnCast"
                    "Play_sfx_6656missile_OnMissileCast"
                    "Play_sfx_6662Slow_buffactivate"
                    "Play_sfx_6664Active_hit"
                    "Play_sfx_6664Active_OnBuffActivate"
                    "Play_sfx_6664Active_OnBuffCast"
                    "Play_sfx_6664Active_OnBuffDeactivate"
                    "Play_sfx_6664Active_OnCast"
                    "Play_sfx_6671cast_OnCast"
                    "Play_sfx_6671missile1_OnHit"
                    "Play_sfx_6671missile1_OnMissileLaunch"
                    "Play_sfx_6671missile2_OnHit"
                    "Play_sfx_6671missile2_OnMissileLaunch"
                    "Play_sfx_6671missile3_OnHit"
                    "Play_sfx_6671missile3_OnMissileLaunch"
                    "Play_sfx_6672buff_buffactivate"
                    "Play_sfx_6672buff_hit"
                    "Play_sfx_6672buff_missilecast"
                    "Play_sfx_6673shield_OnBuffActivate"
                    "Play_sfx_6673shield_OnBuffDeactivate"
                    "Play_sfx_6676_hit_champ"
                    "Play_sfx_6676_hit_minion"
                    "Play_sfx_6676gold_buffactivate"
                    "Play_sfx_6688Cast_OnCast"
                    "Play_sfx_6688Cast_OnHitLocation"
                    "Play_sfx_6688Shield_OnBuffDeactivate"
                    "Play_sfx_6691_buffactivate"
                    "Play_sfx_6691_hit"
                    "Play_sfx_6691stealth_buffactivate"
                    "Play_sfx_6691stealth_OnBuffDeactivate"
                    "Play_sfx_6692_buffactivate"
                    "Play_sfx_6692_hit"
                    "Play_sfx_6692shield_OnBuffActivate"
                    "Play_sfx_6692shield_OnBuffDeactivate"
                    "Play_sfx_6693active_hit"
                    "Play_sfx_6693active_OnCast"
                    "Play_sfx_8001Active_cast"
                    "Play_sfx_8001Active_hit"
                    "Play_sfx_8001TenacityDebuff_OnBuffCast"
                    "Play_sfx_8001Vengeance_OnBuffActivate"
                    "Play_sfx_AwesomeBuff_Heartsplosion_hit"
                    "Play_sfx_AwesomeBuff_OrbitalLaser_hit"
                    "Play_sfx_AwesomeBuff_Urf_hit"
                    "Play_sfx_BansheesVeil_OnBuffActivate"
                    "Play_sfx_BansheesVeil_OnBuffDeactivate"
                    "Play_sfx_BilgewaterCalmWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_BilgewaterCalmWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_BlueTrinket_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_CamouflageRevealed_buffactivate"
                    "Play_sfx_CamouflageRevealedPriorityTarget_buffactivate"
                    "Play_sfx_DeathfireGraspSpell_OnBuffActivate"
                    "Play_sfx_DeathfireGraspSpell_OnCast"
                    "Play_sfx_DeathfireGraspSpell_OnHit"
                    "Play_sfx_DeathfireGraspSpell_OnMissileLaunch"
                    "Play_sfx_DragonSlayerBuff_buffactivate"
                    "Play_sfx_DreadnoughtMaxMS_hit"
                    "Play_sfx_DreadnoughtMomentumBuff_buffactivate"
                    "Play_sfx_ElixirOfIron_OnBuffCast"
                    "Play_sfx_ElixirOfSorcery_OnBuffCast"
                    "Play_sfx_ElixirOfWrath_OnBuffCast"
                    "Play_sfx_GargoyleStoneplate_buffdeactivate"
                    "Play_sfx_GargoyleStoneplate_Large_cast"
                    "Play_sfx_GhostwalkersActive_Indicator"
                    "Play_sfx_GhostwalkersActive_OnBuffActivate"
                    "Play_sfx_GhostwalkersActive_OnBuffDeactivate"
                    "Play_sfx_GhostwalkersActive_OnCast"
                    "Play_sfx_HextechGunbladeSpell_OnHit"
                    "Play_sfx_Item2003_OnBuffActivate"
                    "Play_sfx_Item2003_OnCast"
                    "Play_sfx_Item3078TriforceSpeed_OnBuffActivate"
                    "Play_sfx_Item3181SanguineBladeBuff_OnBuffActivate"
                    "Play_sfx_Item6696ResetMis_OnHitLocation"
                    "Play_sfx_Item6696ResetMis_OnMissileLaunch"
                    "Play_sfx_ItemAtmasReckoningBuff_OnBuffActivate"
                    "Play_sfx_ItemAtmasReckoningBuff_OnBuffDeactivate"
                    "Play_sfx_ItemCrystalFlask_OnBuffActivate"
                    "Play_sfx_ItemCrystalFlask_OnCast"
                    "Play_sfx_ItemDuskAlertSight_OnBuffActivate"
                    "Play_sfx_ItemEnergyShard_impact"
                    "Play_sfx_ItemEnergyShard_ready"
                    "Play_sfx_ItemFirecannon_ready"
                    "Play_sfx_ItemHorn_OnCast"
                    "Play_sfx_ItemHurricaneAttack_OnHit"
                    "Play_sfx_ItemHurricaneAttack_OnMissileLaunch"
                    "Play_sfx_ItemKnightsVow_OnCast"
                    "Play_sfx_ItemKnightsVowKnight_OnBuffActivate"
                    "Play_sfx_ItemMageKillerVeil_OnBuffActivate"
                    "Play_sfx_ItemMageKillerVeil_OnBuffDeactivate"
                    "Play_sfx_ItemMercurial_OnCast"
                    "Play_sfx_ItemMiniRegenPotion_OnBuffActivate"
                    "Play_sfx_ItemMiniRegenPotion_OnCast"
                    "Play_sfx_ItemMuramana_hit"
                    "Play_sfx_ItemPoroSnack_OnCast"
                    "Play_sfx_ItemRedemption_cast"
                    "Play_sfx_ItemRedemption_hit"
                    "Play_sfx_ItemRedemption_OnCast"
                    "Play_sfx_ItemRedemptionAlly_hit"
                    "Play_sfx_ItemRedemptionEnemy_hit"
                    "Play_sfx_ItemShivAndFirecannon_ready"
                    "Play_sfx_ItemSmiteSlow_OnBuffActivate"
                    "Play_sfx_ItemSoTD_OnBuffActivate"
                    "Play_sfx_ItemSoTD_OnCast"
                    "Play_sfx_ItemSpearofShojinActive_OnBuffActivate"
                    "Play_sfx_ItemSpearofShojinActive_OnBuffDeactivate"
                    "Play_sfx_ItemSpearofShojinActive_reset"
                    "Play_sfx_ItemStarksBindingProcMissile_oml"
                    "Play_sfx_JammerDevice_OnBuffActivate"
                    "Play_sfx_JammerDevice_OnBuffDeactivate"
                    "Play_sfx_LootedOracleElixirSight_OnBuffActivate"
                    "Play_sfx_OracleElixirSight_OnBuffActivate"
                    "Play_sfx_OracleExtractSight_OnBuffActivate"
                    "Play_sfx_PoroSnaxMissile_hit"
                    "Play_sfx_PoroSnaxMissile_OnMissileLaunch"
                    "Play_sfx_QuicksilverSash_OnCast"
                    "Play_sfx_RanduinsOmen_OnCast"
                    "Play_sfx_RapidFireCannon_explode_structure"
                    "Play_sfx_RapidFireCannon_explode_unit"
                    "Play_sfx_RelicGreaterLantern_OnCast"
                    "Play_sfx_RelicGreaterSpotter_OnCast"
                    "Play_sfx_RelicLantern_OnCast"
                    "Play_sfx_RelicMinorSpotter_OnCast"
                    "Play_sfx_RelicSmallLantern_OnCast"
                    "Play_sfx_RelicSpotter_OnCast"
                    "Play_sfx_RelicVisionLantern_OnCast"
                    "Play_sfx_S4ConqueringWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_S4ConqueringWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_S4TriumphantWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_S4TriumphantWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_S4VictoriousWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_S4VictoriousWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_S5_SummonerSmiteDuel_OnHit"
                    "Play_sfx_S5_SummonerSmitePlayerGanker_OnHit"
                    "Play_sfx_SightWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardAllStars_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardAllStars_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardArcade_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardArcade_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardAstroPoro_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardAstroPoro_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardBanner_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardBanner_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardBat_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardBat_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardBattleCast_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardBattleCast_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardCandyCane_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardCandyCane_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardDragonSlayer_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardDragonSlayer_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardDraven_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardDraven_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardFutbol_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardFutbol_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardGentlemanPoro_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardGentlemanPoro_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardGhost_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardGhost_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardGingerBread_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardGingerBread_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardHorseBanner_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardHorseBanner_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardHorseGong_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardHorseGong_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardLantern_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardLantern_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardLunarDragon_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardLunarDragon_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardLux_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardLux_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardMecha_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardMecha_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardPoro2014_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardPoro2014_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardPoroBattlecast_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardPoroBattlecast_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardPoroDragon_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardPoroDragon_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardPoroShadow_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardPoroShadow_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardRiot_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardRiot_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardS3Champ_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardS3Champ_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardS4Champ_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardS4Champ_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSeason3_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSeason3_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardShurima_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardShurima_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardShurimaAmumu_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardShurimaAmumu_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardShurimaRammus_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardShurimaRammus_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin100_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin100_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin101_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin101_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin102_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin102_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin103_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin103_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin104_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin104_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin105_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin105_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin106_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin106_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin107_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin107_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin108_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin108_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin109_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin109_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin110_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin110_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin111_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin111_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin112_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin112_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin113_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin113_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin114_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin114_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin115_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin115_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin116_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin116_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin117_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin117_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin118_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin118_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin119_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin119_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin120_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin120_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin121_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin121_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin122_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin122_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin123_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin123_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin124_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin124_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin125_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin125_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin126_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin126_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin127_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin127_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin128_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin128_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin130_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin130_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin131_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin131_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin132_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin132_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin133_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin133_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin134_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin134_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin135_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin135_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin136_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin136_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin137_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin137_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin138_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin138_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin139_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin139_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin140_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin140_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin141_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin141_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin188_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin188_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin189_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin189_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin190_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin190_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin191_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin191_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin192_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin192_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin193_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin193_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin194_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin194_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin195_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin195_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin196_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin196_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin197_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin197_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin198_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin198_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin199_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin199_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin200_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin200_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin201_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin201_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin202_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin202_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin203_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin203_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin204_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin204_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin205_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin205_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin206_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin206_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin207_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin207_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin208_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin208_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin209_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin209_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin210_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin210_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin211_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin211_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin212_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin212_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin213_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin213_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin214_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin214_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin215_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin215_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin216_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin216_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin217_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin217_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin218_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin218_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin219_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin219_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSkin43_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSkin43_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSkin44_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSkin44_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSkin45_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSkin45_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin46_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin46_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin47_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin47_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin48_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin48_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin49_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin49_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin50_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin50_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin51_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin51_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin52_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin52_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin53_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin53_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin54_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin54_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin55_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin55_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin56_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin56_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin57_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin57_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin58_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin58_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin59_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin59_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin60_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin60_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin61_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin61_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin62_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin62_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin63_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin63_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin64_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin64_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin65_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin65_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin66_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin66_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin67_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin67_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin68_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin68_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin69_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin69_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin70_SightWardAudioBuff_A_OnBuffActivate"
                    "Play_sfx_SightwardSkin70_SightWardAudioBuff_B_OnBuffActivate"
                    "Play_sfx_SightwardSkin70_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin70_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin71_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin71_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin72_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin72_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin73_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin73_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin74_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin74_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin75_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin75_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin76_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin76_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin77_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin77_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin78_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin78_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin79_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin79_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin80_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin80_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin81_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin81_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin82_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin82_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin83_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin83_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin84_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin84_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin85_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin85_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin86_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin86_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin87_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin87_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin88_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin88_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin89_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin89_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin90_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin90_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin91_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin91_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin92_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin92_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin93_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin93_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin94_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin94_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin95_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin95_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin96_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin96_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin97_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin97_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin98_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin98_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightwardSkin99_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightwardSkin99_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSKT_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSKT_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSnowMan_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSnowMan_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSoraka_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSoraka_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardSpider_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardSpider_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardStone_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardStone_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardTree_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardTree_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardUrf2015_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardUrf2015_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardValentine2015_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardValentine2015_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SightWardValentine_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_SightWardValentine_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_SpectralFury_OnBuffActivate"
                    "Play_sfx_SpectralFury_OnBuffDeactivate"
                    "Play_sfx_Stormrazor_OnHit"
                    "Play_sfx_Stormrazor_Ready"
                    "Play_sfx_SupportItems_questcomplete"
                    "Play_sfx_TalentReaperVFX_OnHit"
                    "Play_sfx_TalentReaperVFX_OnMissileLaunch"
                    "Play_sfx_TraitorousTrappings_OnBuffActivate"
                    "Play_sfx_TraitorousTrappings_OnBuffDeactivate"
                    "Play_sfx_TraitorousTrappings_OnCast"
                    "Play_sfx_TrinketLensLvl1Audio_buffactivate"
                    "Play_sfx_TrinketLensLvl1Audio_buffdeactivate"
                    "Play_sfx_TrinketLensLvl2Audio_buffactivate"
                    "Play_sfx_TrinketLensLvl3Audio_buffactivate"
                    "Play_sfx_TrinketOrbLvl1_OnCast"
                    "Play_sfx_TrinketOrbLvl1Audio_BuffActivate"
                    "Play_sfx_TrinketOrbLvl2_OnCast"
                    "Play_sfx_TrinketOrbLvl2Audio_BuffActivate"
                    "Play_sfx_TrinketOrbLvl3_OnCast"
                    "Play_sfx_TrinketTotemLvl2Audio_OnBuffActivate"
                    "Play_sfx_TrinketTotemLvl2Audio_OnBuffDeactivate"
                    "Play_sfx_TrinketTotemLvl3Audio_OnBuffActivate"
                    "Play_sfx_TrinketTotemLvl3Audio_OnBuffDeactivate"
                    "Play_sfx_VisionWard_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_VisionWard_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_YellowTrinket_SightWardAudioBuff_OnBuffActivate"
                    "Play_sfx_YellowTrinket_SightWardAudioBuff_OnBuffDeactivate"
                    "Play_sfx_YoumusBlade_OnCast"
                    "Play_sfx_ZhonyasRingShield_cast"
                    "Play_sfx_ZhonyasRingShield_OnBuffActivate"
                    "Play_sfx_ZhonyasRingShield_OnBuffDeactivate"
                    "Stop_sfx_3053Shield_OnBuffActivate"
                    "Stop_sfx_3153Spell_OnMissileLaunch"
                    "Stop_sfx_3155HexdrinkerBuff_OnBuffActivate"
                    "Stop_sfx_3190Shield_OnBuffActivate"
                    "Stop_sfx_6664Active_OnBuffActivate"
                    "Stop_sfx_DeathfireGraspSpell_OnBuffActivate"
                    "Stop_sfx_DeathfireGraspSpell_OnMissileLaunch"
                    "Stop_sfx_Item2003_OnBuffActivate"
                    "Stop_sfx_ItemAtmasReckoningBuff_OnBuffActivate"
                    "Stop_sfx_ItemCrystalFlask_OnBuffActivate"
                    "Stop_sfx_ItemMiniRegenPotion_OnBuffActivate"
                    "Stop_sfx_ItemRedemption_cast"
                    "Stop_sfx_ItemRedemption_hit"
                    "Stop_sfx_ItemRedemptionAlly_hit"
                    "Stop_sfx_ItemRedemptionEnemy_hit"
                    "Stop_sfx_ItemSmiteSlow_OnBuffActivate"
                    "Stop_sfx_SpectralFury_OnBuffActivate"
                    "Stop_sfx_TrinketLensLvl1Audio_buffactivate"
                    "Stop_sfx_TrinketLensLvl1Audio_buffdeactivate"
                    "Stop_sfx_TrinketLensLvl2Audio_buffactivate"
                    "Stop_sfx_TrinketLensLvl3Audio_buffactivate"
                    "Stop_sfx_TrinketOrbLvl1Audio_BuffActivate"
                    "Stop_sfx_TrinketOrbLvl2Audio_BuffActivate"
                    "Stop_sfx_ZhonyasRingShield_OnBuffActivate"
                }
            }
            BankUnit {
                name: string = "HUD_Global"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/HUD_Global_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/HUD_Global_events.bnk"
                }
                events: list[string] = {
                    "Play_sfx_hud_base_AttackFail_Disarm"
                    "Play_sfx_hud_base_button"
                    "Play_sfx_hud_base_camera_lock"
                    "Play_sfx_hud_base_camera_unlock"
                    "Play_sfx_hud_base_champ_stats_close"
                    "Play_sfx_hud_base_champ_stats_open"
                    "Play_sfx_hud_base_Chat_All"
                    "Play_sfx_hud_base_Chat_Team"
                    "Play_sfx_hud_base_Emotes_bubblenotification"
                    "Play_sfx_hud_base_Generic_button"
                    "Play_sfx_hud_base_Generic_button_click"
                    "Play_sfx_hud_base_generic_click"
                    "Play_sfx_hud_base_intromode_warning"
                    "Play_sfx_hud_base_item_slot_drop"
                    "Play_sfx_hud_base_item_slot_grab"
                    "Play_sfx_hud_base_LevelUp_click"
                    "Play_sfx_hud_base_LevelUp_layer"
                    "Play_sfx_hud_base_LevelUp_release"
                    "Play_sfx_hud_base_Map_Close"
                    "Play_sfx_hud_base_Map_Open"
                    "Play_sfx_hud_base_menu_close"
                    "Play_sfx_hud_base_menu_open"
                    "Play_sfx_hud_base_options_click0"
                    "Play_sfx_hud_base_options_click1"
                    "Play_sfx_hud_base_options_click2"
                    "Play_sfx_hud_base_options_close"
                    "Play_sfx_hud_base_Options_EndGame"
                    "Play_sfx_hud_base_options_open"
                    "Play_sfx_hud_base_Pings_AreaIsWarded"
                    "Play_sfx_hud_base_Pings_Attack"
                    "Play_sfx_hud_base_Pings_Base"
                    "Play_sfx_hud_base_Pings_button"
                    "Play_sfx_hud_base_Pings_Click"
                    "Play_sfx_hud_base_Pings_ComeHere"
                    "Play_sfx_hud_base_Pings_Danger"
                    "Play_sfx_hud_base_Pings_Defend"
                    "Play_sfx_hud_base_Pings_GetBack"
                    "Play_sfx_hud_base_Pings_MIA"
                    "Play_sfx_hud_base_Pings_OnMyWay"
                    "Play_sfx_hud_base_Pings_OnMyWay_caster"
                    "Play_sfx_hud_base_Pings_OnMyWay_Close"
                    "Play_sfx_hud_base_Pings_OnMyWay_Far"
                    "Play_sfx_hud_base_Pings_OnMyWay_recipient"
                    "Play_sfx_hud_base_Recall_Select"
                    "Play_sfx_hud_base_scn7_btn_1"
                    "Play_sfx_hud_base_scn7_btn_2"
                    "Play_sfx_hud_base_scn7_btn_3"
                    "Play_sfx_hud_base_scn7_btn_4"
                    "Play_sfx_hud_base_scn7_btn_5"
                    "Play_sfx_hud_base_scn7_btn_6"
                    "Play_sfx_hud_base_scn7_btn_7"
                    "Play_sfx_hud_base_Score_Open"
                    "Play_sfx_hud_base_scoreboard_close"
                    "Play_sfx_hud_base_scoreboard_open"
                    "Play_sfx_hud_base_Spectator_BurstDamage"
                    "Play_sfx_hud_base_Spectator_BurstDamageLeft"
                    "Play_sfx_hud_base_Spectator_BurstDamageRight"
                    "Play_sfx_hud_base_Spectator_scn1_btn_12"
                    "Play_sfx_hud_base_Spectator_scn1_btn_17"
                    "Play_sfx_hud_base_spell_generic_use"
                    "Play_sfx_hud_base_spell_levelup"
                    "Play_sfx_hud_base_spell_summoner_use"
                    "Play_sfx_hud_base_spell_upgrade"
                    "Play_sfx_hud_base_SpellFail_Cooldown"
                    "Play_sfx_hud_base_SpellFail_Grounded"
                    "Play_sfx_hud_base_SpellFail_NoMana"
                    "Play_sfx_hud_base_SpellFail_Silence"
                    "Play_sfx_hud_base_Store_Click"
                    "Play_sfx_hud_base_store_expand_open"
                    "Play_sfx_hud_base_store_filter_invert"
                    "Play_sfx_hud_base_store_filter_remove"
                    "Play_sfx_hud_base_store_filter_select"
                    "Play_sfx_hud_base_store_filter_stat_select"
                    "Play_sfx_hud_base_store_generic_close"
                    "Play_sfx_hud_base_store_generic_open"
                    "Play_sfx_hud_base_store_inventorytab_close"
                    "Play_sfx_hud_base_store_inventorytab_open"
                    "Play_sfx_hud_base_store_item_buy_basic"
                    "Play_sfx_hud_base_store_item_buy_epic"
                    "Play_sfx_hud_base_store_item_buy_mythic"
                    "Play_sfx_hud_base_store_item_buy_upgrade"
                    "Play_sfx_hud_base_store_item_hover_blue"
                    "Play_sfx_hud_base_store_item_hover_mythic"
                    "Play_sfx_hud_base_store_item_sell"
                    "Play_sfx_hud_base_store_quicktab_close"
                    "Play_sfx_hud_base_store_quicktab_open"
                    "Play_sfx_hud_base_store_quicktab_open_highlight"
                    "Play_sfx_hud_base_store_quicktab_pin"
                    "Play_sfx_hud_base_store_rec_select"
                    "Play_sfx_hud_base_Store_Select"
                    "Play_sfx_hud_base_store_tab_select"
                    "Play_sfx_hud_base_Store_Undo"
                    "Play_sfx_hud_button"
                    "Play_sfx_hud_Camera_Lock"
                    "Play_sfx_hud_Camera_Unlock"
                    "Play_sfx_hud_Champ_Click"
                    "Play_sfx_hud_Champ_Close"
                    "Play_sfx_hud_Champ_Open"
                    "Play_sfx_hud_Chat_All"
                    "Play_sfx_hud_Chat_Team"
                    "Play_sfx_hud_Generic_Button"
                    "Play_sfx_hud_Generic_Button_Click"
                    "Play_sfx_hud_Generic_Button_Release"
                    "Play_sfx_hud_intromode_warning"
                    "Play_sfx_hud_item_slot_drop"
                    "Play_sfx_hud_item_slot_grab"
                    "Play_sfx_hud_levelup_click"
                    "Play_sfx_hud_levelup_layer"
                    "Play_sfx_hud_levelup_release"
                    "Play_sfx_hud_lockcamera_click"
                    "Play_sfx_hud_lockcamera_release"
                    "Play_sfx_hud_Map_Close"
                    "Play_sfx_hud_Map_Open"
                    "Play_sfx_hud_Menu_Close"
                    "Play_sfx_hud_Menu_Open"
                    "Play_sfx_hud_Options_Click0"
                    "Play_sfx_hud_Options_Click1"
                    "Play_sfx_hud_Options_Click2"
                    "Play_sfx_hud_Options_Close"
                    "Play_sfx_hud_Options_EndGame"
                    "Play_sfx_hud_Options_Open"
                    "Play_sfx_hud_Pings_Attack"
                    "Play_sfx_hud_Pings_Base"
                    "Play_sfx_hud_Pings_button"
                    "Play_sfx_hud_Pings_Click"
                    "Play_sfx_hud_Pings_ComeHere"
                    "Play_sfx_hud_Pings_Danger"
                    "Play_sfx_hud_Pings_Defend"
                    "Play_sfx_hud_Pings_GetBack"
                    "Play_sfx_hud_Pings_MIA"
                    "Play_sfx_hud_Pings_OnMyWay"
                    "Play_sfx_hud_Recall_Select"
                    "Play_sfx_hud_scn7_btn_1"
                    "Play_sfx_hud_scn7_btn_2"
                    "Play_sfx_hud_scn7_btn_3"
                    "Play_sfx_hud_scn7_btn_4"
                    "Play_sfx_hud_scn7_btn_5"
                    "Play_sfx_hud_scn7_btn_6"
                    "Play_sfx_hud_scn7_btn_7"
                    "Play_sfx_hud_Score_Open"
                    "Play_sfx_hud_Spectator_BurstDamage"
                    "Play_sfx_hud_Spectator_BurstDamageLeft"
                    "Play_sfx_hud_Spectator_BurstDamageRight"
                    "Play_sfx_hud_Spectator_scn1_btn_12"
                    "Play_sfx_hud_Spectator_scn1_btn_17"
                    "Play_sfx_hud_Spell_Upgrade"
                    "Play_sfx_hud_Spell_Use"
                    "Play_sfx_hud_SpellFail_NoMana"
                    "Play_sfx_hud_SpellFail_Silence"
                    "Play_sfx_hud_Store_Buy"
                    "Play_sfx_hud_Store_Close"
                    "Play_sfx_hud_Store_Open"
                    "Play_sfx_hud_Store_Sell"
                    "Play_sfx_hud_Store_Undo"
                    "Play_sfx_hud_Store_Upgrade"
                    "Play_sfx_hud_SummonerSpell_Use"
                    "Play_sfx_hud_Turret_targetingwarning"
                    "Play_sfx_hud_unlockcamera_release"
                    "Play_ui_hud_base_levelup_release_02"
                }
            }
            BankUnit {
                name: string = "MISC_Emotes_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Emotes_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Emotes_SFX_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Emotes_SFX_audio.wpk"
                }
                events: list[string] = {
                    "Play_sfx_AS2015_TeamFire_Emote_buffactivate"
                    "Play_sfx_AS2015_TeamIce_Emote_buffactivate"
                    "Play_sfx_Emotes_3206"
                    "Play_sfx_Emotes_3274"
                    "Play_sfx_Emotes_3275"
                    "Play_sfx_Emotes_3276"
                    "Play_sfx_Emotes_3277"
                    "Play_sfx_Emotes_3278"
                    "Play_sfx_Emotes_3279"
                    "Play_sfx_Emotes_3280"
                    "Play_sfx_Emotes_3281"
                    "Play_sfx_Emotes_3282"
                    "Play_sfx_Emotes_3334"
                    "Play_sfx_Emotes_3335"
                    "Play_sfx_Emotes_3336"
                    "Play_sfx_Emotes_3337"
                    "Play_sfx_Emotes_3338"
                    "Play_sfx_Emotes_3339"
                    "Play_sfx_Emotes_3349"
                    "Play_sfx_Emotes_3350"
                    "Play_sfx_Emotes_3351"
                    "Play_sfx_Emotes_3352"
                    "Play_sfx_Emotes_3353"
                    "Play_sfx_Emotes_3354"
                    "Play_sfx_Emotes_3355"
                    "Play_sfx_Emotes_3356"
                    "Play_sfx_Emotes_3357"
                    "Play_sfx_Emotes_3358"
                    "Play_sfx_Emotes_3359"
                    "Play_sfx_Emotes_3407"
                    "Play_sfx_Emotes_3408"
                    "Play_sfx_Emotes_3409"
                    "Play_sfx_Emotes_3410"
                    "Play_sfx_Emotes_3411"
                    "Play_sfx_Emotes_3412"
                    "Play_sfx_Emotes_3413"
                    "Play_sfx_Emotes_3414"
                    "Play_sfx_Emotes_3415"
                    "Play_sfx_Emotes_3416"
                    "Play_sfx_Emotes_3417"
                    "Play_sfx_Emotes_3418"
                    "Play_sfx_Emotes_3419"
                    "Play_sfx_Emotes_3420"
                    "Play_sfx_Emotes_3421"
                    "Play_sfx_Emotes_3422"
                    "Play_sfx_Emotes_3423"
                    "Play_sfx_Emotes_3424"
                    "Play_sfx_Emotes_3425"
                    "Play_sfx_Emotes_3427"
                    "Play_sfx_Emotes_3428"
                    "Play_sfx_Emotes_3429"
                    "Play_sfx_Emotes_3430"
                    "Play_sfx_Emotes_3431"
                    "Play_sfx_Emotes_3432"
                    "Play_sfx_Emotes_3433"
                    "Play_sfx_Emotes_3435"
                    "Play_sfx_Emotes_3437"
                    "Play_sfx_Emotes_AccordingToPlan"
                    "Play_sfx_Emotes_Adoeable"
                    "Play_sfx_Emotes_AllAccordingToPlan"
                    "Play_sfx_Emotes_AllForYou"
                    "Play_sfx_Emotes_AllStars2018"
                    "Play_sfx_Emotes_Angry"
                    "Play_sfx_Emotes_AngryKitten_vox"
                    "Play_sfx_Emotes_AprilFools2019"
                    "Play_sfx_Emotes_AreYouKiddingMe"
                    "Play_sfx_Emotes_AwwYiss"
                    "Play_sfx_Emotes_Baka"
                    "Play_sfx_Emotes_BeeHappy"
                    "Play_sfx_Emotes_BeeMad"
                    "Play_sfx_Emotes_BeeSad"
                    "Play_sfx_Emotes_Bilgewater2018"
                    "Play_sfx_Emotes_Blep"
                    "Play_sfx_Emotes_BlepKench"
                    "Play_sfx_Emotes_Braumbread"
                    "Play_sfx_Emotes_ButWhy"
                    "Play_sfx_Emotes_CatchMeIfYouCan"
                    "Play_sfx_Emotes_Championship2018"
                    "Play_sfx_Emotes_ChampionshipGold2018"
                    "Play_sfx_Emotes_Charmed"
                    "Play_sfx_Emotes_Clean"
                    "Play_sfx_Emotes_ComeAtMe"
                    "Play_sfx_Emotes_Concerned"
                    "Play_sfx_Emotes_ConquerorAlistar"
                    "Play_sfx_Emotes_ConquerorKarma"
                    "Play_sfx_Emotes_ConquerorVarus"
                    "Play_sfx_Emotes_Cupyay"
                    "Play_sfx_Emotes_DarkStar"
                    "Play_sfx_Emotes_DealWithGrit"
                    "Play_sfx_Emotes_Delightify"
                    "Play_sfx_Emotes_Despair"
                    "Play_sfx_Emotes_Dislike"
                    "Play_sfx_Emotes_DoesNotCompute"
                    "Play_sfx_Emotes_DPengu"
                    "Play_sfx_Emotes_DravenApproves"
                    "Play_sfx_Emotes_Dravenbread"
                    "Play_sfx_Emotes_DressedToKill"
                    "Play_sfx_Emotes_EasyEZ"
                    "Play_sfx_Emotes_EverythingOK"
                    "Play_sfx_Emotes_EzrealCheer"
                    "Play_sfx_Emotes_FiredUp"
                    "Play_sfx_Emotes_FistBump"
                    "Play_sfx_Emotes_FromJinxWithLove"
                    "Play_sfx_Emotes_FTC"
                    "Play_sfx_Emotes_FTC_Defiance"
                    "Play_sfx_Emotes_FTC_Devotion"
                    "Play_sfx_Emotes_FTC_Insight"
                    "Play_sfx_Emotes_FTC_Lethal"
                    "Play_sfx_Emotes_Funny"
                    "Play_sfx_Emotes_Gasp"
                    "Play_sfx_Emotes_GG"
                    "Play_sfx_Emotes_GLHF"
                    "Play_sfx_Emotes_GoGetEm"
                    "Play_sfx_Emotes_Golly"
                    "Play_sfx_Emotes_GonnaBeABlast"
                    "Play_sfx_Emotes_GoodbyeFriend"
                    "Play_sfx_Emotes_GoodFortune"
                    "Play_sfx_Emotes_Gosh"
                    "Play_sfx_Emotes_GotEm"
                    "Play_sfx_Emotes_GottaRun"
                    "Play_sfx_Emotes_GreetingsPenguin_vox"
                    "Play_sfx_Emotes_Grouchy"
                    "Play_sfx_Emotes_GuardDawg"
                    "Play_sfx_Emotes_HappyKitten_vox"
                    "Play_sfx_Emotes_HappyLandings"
                    "Play_sfx_Emotes_HappyPengu_vox"
                    "Play_sfx_Emotes_HappyPoro_vox"
                    "Play_sfx_Emotes_Heartbreaker"
                    "Play_sfx_Emotes_HeresPoppy"
                    "Play_sfx_Emotes_Hi"
                    "Play_sfx_Emotes_HighNoonLucian"
                    "Play_sfx_Emotes_HighNoonThresh"
                    "Play_sfx_Emotes_HighNoonUrgot"
                    "Play_sfx_Emotes_HoppinMad"
                    "Play_sfx_Emotes_HowCouldYou"
                    "Play_sfx_Emotes_HowDelicious"
                    "Play_sfx_Emotes_HypeKitty"
                    "Play_sfx_Emotes_Incoming"
                    "Play_sfx_Emotes_JawDropPoro_vox"
                    "Play_sfx_Emotes_JoyPengu"
                    "Play_sfx_Emotes_JuticeGarenteed"
                    "Play_sfx_Emotes_KittenTaunt_vox"
                    "Play_sfx_Emotes_KrakenSkulls"
                    "Play_sfx_Emotes_Legend10_Freljord"
                    "Play_sfx_Emotes_Legend11_Battlecast"
                    "Play_sfx_Emotes_Legend12_Ionia"
                    "Play_sfx_Emotes_Legend13_Bilgewater"
                    "Play_sfx_Emotes_Legend14_Runic"
                    "Play_sfx_Emotes_Legend15_Noxus"
                    "Play_sfx_Emotes_Legend16_Targon"
                    "Play_sfx_Emotes_Legend17_Elderwood"
                    "Play_sfx_Emotes_Legend18_Void"
                    "Play_sfx_Emotes_Legend19_BloodMoon"
                    "Play_sfx_Emotes_Legend1_Zaun"
                    "Play_sfx_Emotes_Legend20_Eternal"
                    "Play_sfx_Emotes_Legend2_Piltover"
                    "Play_sfx_Emotes_Legend3_Infernal"
                    "Play_sfx_Emotes_Legend4_Arclight"
                    "Play_sfx_Emotes_Legend5_Chemtech"
                    "Play_sfx_Emotes_Legend6_ShadowIsles"
                    "Play_sfx_Emotes_Legend7_Shurima"
                    "Play_sfx_Emotes_Legend8_Lunari"
                    "Play_sfx_Emotes_Legend9_WarringKingdoms"
                    "Play_sfx_Emotes_LetsDoThis"
                    "Play_sfx_Emotes_LittleCamper"
                    "Play_sfx_Emotes_LovePoro_vox"
                    "Play_sfx_Emotes_LunarRevel_2018"
                    "Play_sfx_Emotes_MakeItRain"
                    "Play_sfx_Emotes_MastersChallengeS3"
                    "Play_sfx_Emotes_MaybeNextTime"
                    "Play_sfx_Emotes_MechaKingdomsGaren"
                    "Play_sfx_Emotes_MicDrop"
                    "Play_sfx_Emotes_Minionstein"
                    "Play_sfx_Emotes_MoneyBags"
                    "Play_sfx_Emotes_MPengu"
                    "Play_sfx_Emotes_MPenguAnimated"
                    "Play_sfx_Emotes_MSIEvent2018"
                    "Play_sfx_Emotes_MuchLove"
                    "Play_sfx_Emotes_MyCocoa"
                    "Play_sfx_Emotes_NautBad"
                    "Play_sfx_Emotes_Nervous"
                    "Play_sfx_Emotes_Nice"
                    "Play_sfx_Emotes_NiceTry"
                    "Play_sfx_Emotes_OdysseyRecruit"
                    "Play_sfx_Emotes_OdysseyVeteran"
                    "Play_sfx_Emotes_Oh"
                    "Play_sfx_Emotes_OhDeer"
                    "Play_sfx_Emotes_OhNo"
                    "Play_sfx_Emotes_OhPlease"
                    "Play_sfx_Emotes_Oink"
                    "Play_sfx_Emotes_Outrageous"
                    "Play_sfx_Emotes_PeacePoro"
                    "Play_sfx_Emotes_PoolParty2018"
                    "Play_sfx_Emotes_Poro"
                    "Play_sfx_Emotes_PoroPals"
                    "Play_sfx_Emotes_PrestigeAhri"
                    "Play_sfx_Emotes_Project2017"
                    "Play_sfx_Emotes_Rainbow"
                    "Play_sfx_Emotes_RaiseYourDongers"
                    "Play_sfx_Emotes_RankedRewards"
                    "Play_sfx_Emotes_Rawr"
                    "Play_sfx_Emotes_Really"
                    "Play_sfx_Emotes_RegiftedAmumu"
                    "Play_sfx_Emotes_SadKitten"
                    "Play_sfx_Emotes_Salutations"
                    "Play_sfx_Emotes_ScoutApproved"
                    "Play_sfx_Emotes_ShellShocked"
                    "Play_sfx_Emotes_Shhhh"
                    "Play_sfx_Emotes_ShockAhh"
                    "Play_sfx_Emotes_SignOfLove"
                    "Play_sfx_Emotes_Smooochie"
                    "Play_sfx_Emotes_Snowdown_Amumu"
                    "Play_sfx_Emotes_Snowdown_FatPoro"
                    "Play_sfx_Emotes_Snowdown_JingleBells"
                    "Play_sfx_Emotes_SoCool"
                    "Play_sfx_Emotes_SoLame"
                    "Play_sfx_Emotes_SonaYikes"
                    "Play_sfx_Emotes_SpookoLantern"
                    "Play_sfx_Emotes_SpringSplit2019"
                    "Play_sfx_Emotes_Squeal"
                    "Play_sfx_Emotes_SupDawg"
                    "Play_sfx_Emotes_Surprise"
                    "Play_sfx_Emotes_Surrenderat20"
                    "Play_sfx_Emotes_T_Pengu"
                    "Play_sfx_Emotes_TauntPoro_vox"
                    "Play_sfx_Emotes_TeamCat"
                    "Play_sfx_Emotes_TeamDog"
                    "Play_sfx_Emotes_TearsOfJoy"
                    "Play_sfx_Emotes_TeaTime"
                    "Play_sfx_Emotes_TellMeMore"
                    "Play_sfx_Emotes_Toast"
                    "Play_sfx_Emotes_Tombstone"
                    "Play_sfx_Emotes_TouchMe"
                    "Play_sfx_Emotes_ToughTimes"
                    "Play_sfx_Emotes_TyrantUrf"
                    "Play_sfx_Emotes_Unbenched"
                    "Play_sfx_Emotes_Unworthy"
                    "Play_sfx_Emotes_Vamporo"
                    "Play_sfx_Emotes_Veteran1"
                    "Play_sfx_Emotes_Veteran2"
                    "Play_sfx_Emotes_Veteran3"
                    "Play_sfx_Emotes_VitaminSea"
                    "Play_sfx_Emotes_VS2018"
                    "Play_sfx_Emotes_VSLion"
                    "Play_sfx_Emotes_VSWolf"
                    "Play_sfx_Emotes_Wahaha"
                    "Play_sfx_Emotes_WasThatMe"
                    "Play_sfx_Emotes_WP"
                    "Play_sfx_Emotes_Yip"
                    "Play_sfx_Emotes_YouGetTheHorns"
                    "Play_sfx_Emotes_YouLookFamiliar"
                    "Play_sfx_Emotes_YoureNext"
                    "Play_sfx_Emotes_Zzz"
                    "Play_sfx_Goodies_Emotes_Arcade2017"
                    "Play_sfx_Goodies_Emotes_Halo_Esports"
                    "Play_sfx_Goodies_Emotes_Halo_Snowdown_FatPoro"
                    "Play_sfx_Goodies_Emotes_Halo_Snowdown_JingleBells"
                    "Play_sfx_Goodies_Emotes_Halo_Snowdown_SadPresent"
                    "Play_sfx_Goodies_Emotes_Halo_URF_Urf"
                    "Play_sfx_Goodies_Emotes_Halo_VS_Chaos"
                    "Play_sfx_Goodies_Emotes_Halo_VS_Order"
                    "Play_sfx_Goodies_Emotes_Template_AngerConfused"
                    "Play_sfx_Goodies_Emotes_Template_HappyExcited"
                    "Play_sfx_Goodies_Emotes_Template_LoveCute"
                    "Play_sfx_Goodies_Emotes_Template_Prestige"
                    "Play_sfx_Goodies_Emotes_Template_SadBored"
                    "Play_sfx_Goodies_Emotes_Template_TrollMeme"
                    "Play_sfx_Goodies_Emotes_Template_Worlds2017"
                    "Play_sfx_MasteryEmote_Level4_buffactivate"
                    "Play_sfx_MasteryEmote_Level5_buffactivate"
                    "Play_sfx_MasteryEmote_Level6_buffactivate"
                    "Play_sfx_MasteryEmote_Level7_buffactivate"
                    "Play_sfx_MasteryEmoteSkin02_Level5_buffactivate"
                    "Play_sfx_MasteryEmoteSkin02_Level6_buffactivate"
                    "Play_sfx_MasteryEmoteSkin02_Level7_buffactivate"
                    "Play_sfx_WC2015_TeamEmblem_Emote_buffactivate"
                    "Play_sfx_WC2016_TeamEmblem_Emote_t1_buffactivate"
                    "Play_sfx_WC2016_TeamEmblem_Emote_t2_buffactivate"
                    "Play_sfx_WC2016_TeamEmblem_Emote_t3_buffactivate"
                }
            }
            BankUnit {
                name: string = "MISC_Emotes_VO"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/MISC_Emotes_VO_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/MISC_Emotes_VO_events.bnk"
                    "ASSETS/Sounds/Wwise2016/VO/en_US/Shared/MISC_Emotes_VO_audio.wpk"
                }
                events: list[string] = {
                    "Play_vo_Emotes_Angry_Darius"
                    "Play_vo_Emotes_Confused_Blitzcrank"
                    "Play_vo_Emotes_DealWithGrit_Graves"
                    "Play_vo_Emotes_Gasp_Zed"
                    "Play_vo_Emotes_Happy_Braum"
                    "Play_vo_Emotes_Happy_Fiora"
                    "Play_vo_Emotes_Happy_Gnar"
                    "Play_vo_Emotes_Happy_Lulu"
                    "Play_vo_Emotes_Happy_Lux"
                    "Play_vo_Emotes_Happy_Teemo"
                    "Play_vo_Emotes_Love_Taric"
                    "Play_vo_Emotes_Okay_Rammus"
                    "Play_vo_Emotes_Sad_Amumu"
                    "Play_vo_Emotes_Taunt_Jinx"
                }
                voiceOver: bool = true
            }
            BankUnit {
                name: string = "MISC_Eternals_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Eternals_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Eternals_SFX_events.bnk"
                }
            }
            BankUnit {
                name: string = "MISC_Event_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Event_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Event_SFX_events.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/MISC_Event_SFX_audio.wpk"
                }
                events: list[string] = {
                    "Play_mus_map11_demaciavice2019_spawn"
                    "Play_mus_map11_KDA2020_spawn"
                    "Play_mus_map11_SN2022_spawn"
                    "Play_mus_map11_starguardian2017_spawn"
                    "Play_mus_map11_starguardian2019_spawn"
                    "Play_mus_map11_starguardian_spawn"
                    "Play_mus_map11_Tournaments_spawn"
                    "Play_mus_map11_Worlds2020_spawn"
                    "Play_mus_map11_XP12021_spawn"
                    "Play_sfx_homeguard_idahotb_loop"
                    "Play_sfx_PopStar2018Spawn_oba"
                    "Play_sfx_RainbowSpawn_oba"
                    "Play_sfx_SnowdownSpawn_oba"
                    "Play_sfx_SnowdownSpawn_obd"
                    "Play_sfx_SOG_SpawnIn"
                    "Play_sfx_Spawn_10Year_confetti2D"
                    "Play_sfx_Spawn_10year_spawnin3D"
                    "Play_sfx_spawn_ba_defiance"
                    "Play_sfx_spawn_ba_devotion"
                    "Play_sfx_spawn_ba_insight"
                    "Play_sfx_spawn_ba_lethal"
                    "Stop_sfx_homeguard_idahotb_loop"
                }
            }
            BankUnit {
                name: string = "ENV_Global_Emitters_SFX"
                bankPath: list[string] = {
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Global_Emitters_SFX_audio.bnk"
                    "ASSETS/Sounds/Wwise2016/SFX/Shared/ENV_Global_Emitters_SFX_events.bnk"
                }
                events: list[string] = {
                    "Play_mus_map11_demaciavice2019_spawn"
                    "Play_mus_map11_KDA2020_spawn"
                    "Play_mus_map11_Sentinels2021_spawn"
                    "Play_mus_map11_starguardian2017_spawn"
                    "Play_mus_map11_starguardian2019_spawn"
                    "Play_mus_map11_starguardian_spawn"
                    "Play_mus_map11_Tournaments_spawn"
                    "Play_mus_map11_Worlds2020_spawn"
                    "Play_sfx_homeguard_idahotb_loop"
                    "Play_sfx_PopStar2018Spawn_oba"
                    "Play_sfx_RainbowSpawn_oba"
                    "Play_sfx_SnowdownSpawn_oba"
                    "Play_sfx_SnowdownSpawn_obd"
                    "Play_sfx_SOG_SpawnIn"
                    "Play_sfx_Spawn_10Year_confetti2D"
                    "Play_sfx_Spawn_10year_spawnin3D"
                    "Play_sfx_spawn_ba_defiance"
                    "Play_sfx_spawn_ba_devotion"
                    "Play_sfx_spawn_ba_insight"
                    "Play_sfx_spawn_ba_lethal"
                    "Stop_sfx_homeguard_idahotb_loop"
                }
            }
        }
        0x561de536: string = "Set_State_TFT_Mix_PC"
        0x1cf84925: string = "Set_State_TFT_Mix_Mobile"
    }
    0xf751e943 = AnnouncementMap {
        0x81082e4b: string = "ClassicBase"
        0x79175e85: hash = 0x7d2eefce
        0xcf8c591b: hash = 0x6e781626
        Announcements: map[string,link] = {
            "OnFirstBlood" = 0x9f346e5d
            "OnChampionKill" = 0x5d7e10e4
            "OnChampionDoubleKill" = 0x0a5b649d
            "OnChampionTripleKill" = 0x94534e2c
            "OnChampionQuadraKill" = 0x29ca3a72
            "OnChampionPentaKill" = 0x85acccb0
            "OnDampenerDie" = 0xf15ac5d1
            "OnDampenerRespawnSoon" = 0x5586a35c
            "OnDampenerRespawn" = 0x6f83473f
            "OnKillingSpree" = 0xcf69e361
            "OnKillingSpreeSet1" = 0x49598c02
            "OnKillingSpreeSet2" = 0x48598a6f
            "OnKillingSpreeSet3" = 0x475988dc
            "OnKillingSpreeSet4" = 0x46598749
            "OnKillingSpreeSet5" = 0x455985b6
            "OnKillingSpreeSet6" = 0x44598423
            "OnKilledUnitOnKillingSpree" = 0x4e3c2f8b
            "OnKilledUnitOnKillingSpreeDoubleKill" = 0xcaa389fa
            "OnKilledUnitOnKillingSpreePentaKill" = 0x604fe509
            "OnKilledUnitOnKillingSpreeQuadraKill" = 0x5ac44835
            "OnKilledUnitOnKillingSpreeSet1" = 0xfa4bb718
            "OnKilledUnitOnKillingSpreeSet2" = 0xfd4bbbd1
            "OnKilledUnitOnKillingSpreeSet3" = 0xfc4bba3e
            "OnKilledUnitOnKillingSpreeSet4" = 0xff4bbef7
            "OnKilledUnitOnKillingSpreeSet5" = 0xfe4bbd64
            "OnKilledUnitOnKillingSpreeSet6" = 0x014bc21d
            "OnKilledUnitOnKillingSpreeTripleKill" = 0x49f4e8a7
            "OnLeave" = 0x8fd0f3f2
            "OnMinionsSpawn" = 0x0dd87d95
            "OnQuit" = 0x330434a0
            "OnReconnect" = 0xa47d982c
            "OnAlert" = 0xe36681db
            "OnEqualizeVote" = 0x1270df94
            "OnTurretDie" = 0xf1d0d1d5
            "OnTurretFirstBlood" = 0xbfd0c4c7
            "OnEarlySurrenderVoteStart" = 0xe7251cfb
            "OnEqualizeAgreed" = 0xc920d9a4
            "OnEqualizeFailedVotes" = 0xc89d4d02
            "OnEqualizeNotEnoughGold" = 0x1f7df93b
            "OnEqualizeNotEnoughLevels" = 0x25f32792
            "OnEqualizeSpam" = 0x6ca4c799
            "OnEqualizeTooEarly" = 0x781a9a31
            "OnEqualizeVoteAlready" = 0xdd47f3e0
            "OnEqualizeVoteStart" = 0xd2cf1078
            "OnItemCallout" = 0xf8063b67
            "OnNormalAfkSurrenderAllowed" = 0xedb27685
            "OnSurrenderAgreed" = 0x03a789d4
            "OnSurrenderEarlyAccomplice" = 0x10050083
            "OnSurrenderEarlyAllowed" = 0x3f9afea9
            "OnSurrenderEarlyFailed" = 0x6019a1fa
            "OnSurrenderEarlyFailedDisabled" = 0xa80fa012
            "OnSurrenderEarlyFailedNeverAvailable" = 0xdac2574f
            "OnSurrenderEarlyFailedNoLongerAvailable" = 0x75fb7d5f
            "OnSurrenderEarlyOver" = 0x2e6b7915
            "OnSurrenderEarlyTooEarly" = 0xf5c5368e
            "OnSurrenderFailedVotes" = 0x68c715d2
            "OnSurrenderSpam" = 0xc10e7b69
            "OnSurrenderTooEarly" = 0xa69d11a1
            "OnSurrenderVote" = 0xc224dfe4
            "OnSurrenderVoteAlready" = 0x6a5b6a90
            "OnSurrenderVoteStart" = 0x681364e8
            "OnUnanimousSurrenderFailedVotes" = 0xb8e668c9
            "OnUnanimousSurrenderVoteStart" = 0x56792667
            "OnUnanimousAfkSurrenderAllowed" = 0xda9f1581
            "OnShutdown" = 0x8769e77d
            "OnReviveAlly" = 0xa804359c
        }
    }
    0x0305956f = MapCharacterList {
        characters: list2[link] = {
            "Characters/HA_ChaosMinionMelee"
            "Characters/HA_ChaosMinionRanged"
            "Characters/HA_ChaosMinionSiege"
            "Characters/HA_ChaosMinionSuper"
            "Characters/HA_OrderMinionMelee"
            "Characters/HA_OrderMinionRanged"
            "Characters/HA_OrderMinionSiege"
            "Characters/HA_OrderMinionSuper"
        }
    }
    0x19b17b3f = MapCharacterList {
        characters: list2[link] = {
            "Characters/HA_AP_ChaosTurret"
            "Characters/HA_AP_ChaosTurret2"
            "Characters/HA_AP_ChaosTurret3"
            "Characters/HA_AP_ChaosTurretRubble"
            "Characters/HA_AP_ChaosTurretShrine"
            "Characters/HA_AP_OrderShrineTurret"
            "Characters/HA_AP_OrderTurret"
            "Characters/HA_AP_OrderTurret2"
            "Characters/HA_AP_OrderTurret3"
            "Characters/HA_AP_OrderTurretRubble"
        }
    }
    0x2c7e1b6f = MapCharacterList {
        characters: list2[link] = {
            "Characters/PetPenguKnight"
            "Characters/PetGriffin"
            "Characters/PetGrumpyLion"
            "Characters/PetGhosty"
            "Characters/PetMiner"
            "Characters/PetMiniGolem"
            "Characters/PetTurtle"
            "Characters/PetSpiritFox"
            "Characters/PetGemTiger"
            "Characters/PetSGShisa"
            "Characters/PetSGPig"
            "Characters/PetSGCat"
            "Characters/PetAkaliDragon"
            "Characters/PetQiyanaDog"
            "Characters/PetSennaBunny"
            "Characters/PetHextechBirb"
            "Characters/PetBuglet"
            "Characters/PetGargoyle"
            "Characters/PetTFTAvatar"
            "Characters/PetDSSquid"
            "Characters/PetDSSwordGuy"
            "Characters/PetDSWhale"
            "Characters/PetPegasus"
            "Characters/PetFairy"
            "Characters/PetBellswayer"
            "Characters/PetAoShin"
            "Characters/PetUmbra"
            "Characters/PetChoncc"
            "Characters/PetDowsie"
            "Characters/PetFenroar"
            "Characters/PetNimblefoot"
            "Characters/PetChibiEkko"
            "Characters/PetChibiJinx"
            "Characters/PetChibiVi"
            "Characters/PetPiximander"
            "Characters/PetGloop"
            "Characters/PetDuckbill"
        }
    }
    0x30585024 = MapCharacterList {
        characters: list2[link] = {
            "Characters/brush_BW_A"
            "Characters/brush_BW_B"
            "Characters/brush_BW_C"
            "Characters/brush_BW_D"
            "Characters/brush_BW_E"
            "Characters/brush_BW_F"
            "Characters/brush_BW_G"
            "Characters/brush_BW_H"
            "Characters/brush_BW_I"
            "Characters/brush_BW_J"
        }
    }
    0x3fe66177 = MapCharacterList {
        characters: list2[link] = {
            "Characters/BW_AP_ChaosTurret"
            "Characters/BW_AP_ChaosTurret2"
            "Characters/BW_AP_ChaosTurret3"
            "Characters/BW_AP_ChaosTurretRubble"
            "Characters/BW_AP_OrderTurret"
            "Characters/BW_AP_OrderTurret2"
            "Characters/BW_AP_OrderTurret3"
            "Characters/BW_AP_OrderTurretRubble"
            "Characters/HA_AP_ChaosTurretShrine"
            "Characters/HA_AP_OrderShrineTurret"
        }
    }
    0x40d0e73d = MapCharacterList {
        characters: list2[link] = {
            "Characters/KingPoro"
            "Characters/KINGPORO_PoroFollower"
        }
    }
    0x42fc6f5a = MapCharacterList {
        characters: list2[link] = {
            "Characters/HA_FB_HealthRelic"
            "Characters/PreSeason_Turret_Shield"
            "Characters/SLIME_EnvironmentMinion"
        }
    }
    0x48ce86fc = MapCharacterList {
        characters: list2[link] = {
            "Characters/brush_HA_A"
            "Characters/brush_HA_B"
            "Characters/brush_HA_C"
            "Characters/brush_HA_D"
            "Characters/brush_HA_E"
            "Characters/brush_HA_F"
            "Characters/brush_HA_G"
            "Characters/brush_HA_H"
            "Characters/brush_HA_I"
            "Characters/brush_HA_J"
        }
    }
    0x4d52e5b5 = MapCharacterList {
        characters: list2[link] = {
            "Characters/HA_AP_Poro"
            "Characters/HA_AP_Poro_Large"
            "Characters/HA_AP_Poro_Small"
            "Characters/HA_AP_Poro_Snowman"
            "Characters/SRU_SnowDown_Gingerbread"
        }
    }
    0xde3b46b9 = MapCharacterList {
        characters: list2[link] = {
            "Characters/SRU_ChaosMinionMelee"
            "Characters/SRU_ChaosMinionRanged"
            "Characters/SRU_ChaosMinionSiege"
            "Characters/SRU_ChaosMinionSuper"
            "Characters/SRU_OrderMinionMelee"
            "Characters/SRU_OrderMinionRanged"
            "Characters/SRU_OrderMinionSiege"
            "Characters/SRU_OrderMinionSuper"
        }
    }
    0xdfe2b0ea = MapCharacterList {
        characters: list2[link] = {
            "Characters/DestroyedTower"
            "Characters/HA_AP_BannerMidBridge"
            "Characters/HA_AP_BridgeLaneStatue"
            "Characters/HA_AP_Chains"
            "Characters/HA_AP_Chains_Long"
            "Characters/HA_AP_ChaosTurretTutorial"
            "Characters/HA_AP_Cutaway"
            "Characters/HA_AP_HealthRelic"
            "Characters/HA_AP_Hermit"
            "Characters/HA_AP_Hermit_Robot"
            "Characters/HA_AP_HeroTower"
            "Characters/HA_AP_OrderTurretTutorial"
            "Characters/HA_AP_PeriphBridge"
            "Characters/HA_AP_Poro"
            "Characters/HA_AP_PoroSpawner"
            "Characters/HA_AP_ShpNorth"
            "Characters/HA_AP_ShpSouth"
            "Characters/HA_AP_Viking"
            "Characters/SRU_Baron"
            0x6c5eb5bc
            0xcab0f48d
        }
    }
    0xe2fcf6f2 = MapCharacterList {
        characters: list2[link] = {
            "Characters/BW_anclantern"
            "Characters/BW_AP_Bubbs"
            "Characters/BW_AP_Finn"
            "Characters/BW_boat"
            "Characters/Bw_Bottle"
            "Characters/bw_brdgdoor"
            "Characters/BW_dblrope"
            "Characters/BW_fishhk"
            "Characters/Bw_Hcannon"
            "Characters/BW_Lantern"
            "Characters/BW_seagull"
            "Characters/BW_shadowshark"
            "Characters/BW_shortrope"
            "Characters/BW_shrkhk"
            "Characters/BW_signa"
            "Characters/Bw_Squid"
            "Characters/bw_statlant"
            "Characters/bw_tooth"
            "Characters/BW_vship"
            "Characters/ChaosInhibitor"
            "Characters/ChaosInhibitor_D"
            "Characters/ChaosNexus"
            "Characters/DestroyedTower"
            "Characters/DestroyedNexus"
            "Characters/HA_AP_HealthRelic"
            "Characters/HA_AP_Poro"
            "Characters/HA_AP_PoroSpawner"
            "Characters/HA_AP_ShpNorth"
            "Characters/HA_AP_ShpSouth"
            "Characters/HABW_banner"
            "Characters/OrderNexus"
            "Characters/OrderInhibitor"
            "Characters/OrderInhibitor_D"
        }
    }
    0x0355c4fb = GameModeItemList {
        mItems: list2[hash] = {
            "Items/3181"
            "Items/2033"
        }
    }
    0x1ced71a9 = GameModeItemList {
        mItems: list2[hash] = {
            "Items/3901"
            "Items/3902"
            "Items/3903"
            "Items/2422"
            "Items/2403"
            "Items/2419"
            "Items/3600"
            "Items/3599"
            "Items/2052"
            "Items/2010"
            "Items/2423"
            "Items/2424"
            "Items/3040"
            "Items/3042"
            "Items/3330"
            "Items/3400"
            "Items/2001"
            "Items/1500"
            "Items/1501"
            "Items/1502"
            "Items/1503"
            "Items/1508"
            "Items/1509"
            "Items/1506"
            "Items/1507"
            "Items/7000"
            "Items/7001"
            "Items/7002"
            "Items/7003"
            "Items/7004"
            "Items/7005"
            "Items/7006"
            "Items/7007"
            "Items/7008"
            "Items/7009"
            "Items/7010"
            "Items/7011"
            "Items/7012"
            "Items/7013"
            "Items/7014"
            "Items/7015"
            "Items/7016"
            "Items/7017"
            "Items/7018"
            "Items/7019"
            "Items/7020"
            "Items/7021"
            "Items/7022"
            "Items/2007"
            "Items/1510"
            "Items/1511"
            "Items/1512"
            "Items/1515"
            "Items/7050"
            "Items/7023"
            "Items/7024"
        }
    }
    0x413f2f94 = GameModeItemList {
        mItems: list2[hash] = {
            "Items/1001"
            "Items/1004"
            "Items/1006"
            "Items/1011"
            "Items/1018"
            "Items/1026"
            "Items/1027"
            "Items/1028"
            "Items/1029"
            "Items/1031"
            "Items/1033"
            "Items/1036"
            "Items/1037"
            "Items/1038"
            "Items/1042"
            "Items/1043"
            "Items/1052"
            "Items/1053"
            "Items/1057"
            "Items/1058"
            "Items/2003"
            "Items/6695"
            "Items/6662"
            "Items/2015"
            "Items/2031"
            "Items/6609"
            "Items/6664"
            "Items/6694"
            "Items/2065"
            "Items/2138"
            "Items/2139"
            "Items/2140"
            "Items/6676"
            "Items/6675"
            "Items/2420"
            "Items/2421"
            "Items/6677"
            "Items/6656"
            "Items/6660"
            "Items/3001"
            "Items/3003"
            "Items/3006"
            "Items/3009"
            "Items/3011"
            "Items/3020"
            "Items/3024"
            "Items/3031"
            "Items/3033"
            "Items/3035"
            "Items/3036"
            "Items/6655"
            "Items/6632"
            "Items/6653"
            "Items/3044"
            "Items/3046"
            "Items/3047"
            "Items/3050"
            "Items/3051"
            "Items/3053"
            "Items/3057"
            "Items/3065"
            "Items/3066"
            "Items/3067"
            "Items/3068"
            "Items/3070"
            "Items/3071"
            "Items/3072"
            "Items/3074"
            "Items/3075"
            "Items/3076"
            "Items/3077"
            "Items/3078"
            "Items/3082"
            "Items/3083"
            "Items/3085"
            "Items/3086"
            "Items/3089"
            "Items/3091"
            "Items/3094"
            "Items/3095"
            "Items/3100"
            "Items/3102"
            "Items/3105"
            "Items/3107"
            "Items/3108"
            "Items/3109"
            "Items/3110"
            "Items/3111"
            "Items/3113"
            "Items/3114"
            "Items/3115"
            "Items/3116"
            "Items/3117"
            "Items/3123"
            "Items/3124"
            "Items/3133"
            "Items/3134"
            "Items/3135"
            "Items/3139"
            "Items/3140"
            "Items/3142"
            "Items/3143"
            "Items/3145"
            "Items/3152"
            "Items/3153"
            "Items/3155"
            "Items/3156"
            "Items/3157"
            "Items/3158"
            "Items/3165"
            "Items/3179"
            "Items/6333"
            "Items/3190"
            "Items/3191"
            "Items/3193"
            "Items/6693"
            "Items/3211"
            "Items/3222"
            "Items/6630"
            "Items/6631"
            "Items/6692"
            "Items/3504"
            "Items/3508"
            "Items/6671"
            "Items/6670"
            "Items/6691"
            "Items/3742"
            "Items/3748"
            "Items/3801"
            "Items/3802"
            "Items/3814"
            "Items/3004"
            "Items/6673"
            "Items/6672"
            "Items/3916"
            "Items/4005"
            "Items/4401"
            "Items/4628"
            "Items/4629"
            "Items/4630"
            "Items/4632"
            "Items/4633"
            "Items/4635"
            "Items/4636"
            "Items/4637"
            "Items/4642"
            "Items/6029"
            "Items/6035"
            "Items/6616"
            "Items/6617"
            "Items/1516"
            "Items/1517"
            "Items/1518"
            "Items/1519"
            "Items/8001"
            "Items/6696"
            "Items/3119"
            "Items/3121"
            "Items/8020"
            "Items/4644"
            "Items/4645"
        }
    }
    0x53f3ac3c = GameModeItemList {
        mItems: list2[hash] = {
            "Items/2051"
            "Items/3112"
            "Items/3177"
            "Items/3184"
        }
    }
    0xbecd97c7 = GameModeItemList {
        mItems: list2[hash] = {
            "Items/1054"
            "Items/1055"
            "Items/1056"
        }
    }
    0xcd39d678 = GameModeItemList {
        mItems: list2[hash] = {
            "Items/3363"
        }
    }
    0x8f58df52 = ItemShopGameModeData {
        0xc561f8e9: list[hash] = {
            "Items/1035"
            "Items/1039"
        }
        0x37792a41: list[hash] = {
            "Items/2001"
            "Items/2003"
            "Items/2010"
            "Items/2031"
            "Items/2055"
            "Items/2403"
            "Items/2419"
            "Items/3340"
            "Items/3363"
            "Items/3364"
            "Items/3599"
            "Items/3600"
        }
        0xdf5cfa0e: list2[hash] = {
            "Items/3006"
            "Items/3117"
            "Items/1001"
            "Items/3009"
            "Items/3158"
            "Items/3111"
            "Items/3047"
            "Items/2422"
            "Items/3020"
            "Items/3001"
            "Items/4628"
            "Items/4629"
            "Items/4637"
            "Items/3003"
            "Items/3102"
            "Items/3071"
            "Items/3153"
            "Items/3072"
            "Items/3742"
            "Items/3814"
            "Items/3508"
            "Items/3110"
            "Items/3193"
            "Items/6035"
            "Items/3026"
            "Items/3095"
            "Items/3085"
            "Items/3031"
            "Items/3504"
            "Items/3100"
            "Items/3036"
            "Items/3004"
            "Items/3156"
            "Items/3041"
            "Items/3139"
            "Items/6676"
            "Items/6675"
            "Items/3165"
            "Items/3033"
            "Items/3042"
            "Items/3115"
            "Items/3046"
            "Items/3089"
            "Items/3143"
            "Items/3094"
            "Items/3074"
            "Items/3107"
            "Items/3116"
            "Items/3181"
            "Items/3065"
            "Items/3053"
            "Items/6609"
            "Items/6695"
            "Items/6694"
            "Items/4641"
            "Items/4638"
            "Items/4643"
            "Items/3075"
            "Items/3748"
            "Items/3179"
            "Items/3135"
            "Items/3083"
            "Items/3091"
            "Items/3142"
            "Items/6616"
            "Items/3011"
            "Items/3051"
            "Items/3124"
            "Items/6655"
            "Items/6653"
            "Items/6656"
            "Items/3152"
            "Items/4636"
            "Items/6692"
            "Items/6691"
            "Items/6693"
            "Items/3190"
            "Items/2065"
            "Items/6617"
            "Items/4005"
            "Items/6630"
            "Items/6631"
            "Items/6632"
            "Items/3078"
            "Items/6671"
            "Items/6673"
            "Items/4633"
            "Items/6672"
            "Items/6662"
            "Items/6664"
            "Items/3068"
            "Items/3109"
            "Items/3222"
            "Items/4401"
            "Items/3050"
            "Items/3157"
            "Items/7000"
            "Items/7001"
            "Items/7002"
            "Items/7003"
            "Items/7004"
            "Items/7005"
            "Items/7006"
            "Items/7007"
            "Items/7008"
            "Items/7009"
            "Items/7010"
            "Items/7011"
            "Items/7012"
            "Items/7013"
            "Items/7014"
            "Items/7015"
            "Items/7016"
            "Items/7017"
            "Items/7018"
            "Items/7019"
            "Items/7020"
            "Items/7021"
            "Items/7022"
            "Items/8020"
            "Items/3119"
            "Items/3121"
            "Items/7023"
            "Items/7024"
            "Items/6696"
            "Items/4644"
            "Items/4645"
        }
        0xc3b3430a: u32 = 11
        0x51a18bc3: hash = "CLASSIC"
    }
    0xa3c25554 = GameModeAutoItemPurchasingConfig {
        0x19ef67a2: i32 = 20
        0xe34f62d0: list[string] = {
            "starting"
            "early"
            "essential"
        }
        0xc8adfdbc: list[string] = {
            "offensive"
            "defensive"
            "protective"
            "aggressive"
            "ability_scaling"
            "standard"
        }
        0x83f0cccd: list[string] = {
            "situational"
        }
        0x14596d09: hash = "Items/ItemGroups/Boots"
    }
    0xa6506f8a = GameplayConfig {
        mAutoAttackMinPreCastLockoutDeltaTimeSec: f32 = 0.0329999998
        mAutoAttackMinPostCastLockoutDeltaTimeSec: f32 = 0.0329999998
        mLethalityPercentGivenAtLevel0: f32 = 0.600000024
        mLethalityScalesToLevel: i32 = 18
        mLethalityScalesCapsAtLevel: i32 = 30
        mLethalityRatioFromTarget: f32 = 0
        mLethalityRatioFromAttacker: f32 = 1
        AbilityHasteMax: f32 = 500
        mAdaptiveForceAbilityPowerScale: f32 = 1
        mAdaptiveForceAttackDamageScale: f32 = 0.600000024
        mMinionDeathDelay: f32 = 0.0350000001
        mMinionAutoLeeway: f32 = 0.0350000001
        mMinionAAHelperLimit: f32 = 190
        mItemSellQueueTime: f32 = 0.25
        mCCScoreMultipliers: embed = CCScoreMultipliers {
            stun: f32 = 1
            taunt: f32 = 1
            fear: f32 = 1
            flee: f32 = 1
            suppression: f32 = 1
            knockup: f32 = 1
            knockback: f32 = 1
            polymorph: f32 = 1
            root: f32 = 1
            silence: f32 = 1
            charm: f32 = 1
            slow: f32 = 0.165999994
            blind: f32 = 0.5
            disarm: f32 = 0.5
            grounded: f32 = 0.5
            nearsight: f32 = 0.5
            drowsy: f32 = 0.165999994
            asleep: f32 = 1
        }
        mSummonerSpells: list[hash] = {
            "Shared/Spells/SummonerDot"
            "Shared/Spells/SummonerBarrier"
            "Shared/Spells/SummonerBoost"
            "Shared/Spells/SummonerExhaust"
            "Shared/Spells/SummonerFlash"
            "Shared/Spells/SummonerHaste"
            "Shared/Spells/SummonerHeal"
            "Shared/Spells/SummonerSmite"
            "Shared/Spells/SummonerTeleport"
            "Shared/Spells/SummonerMana"
            "Shared/Spells/SummonerSnowball"
            "Shared/Spells/SummonerPoroRecall"
            "Shared/Spells/SummonerPoroThrow"
            "Shared/Spells/SummonerDarkStarChampSelect1"
            "Shared/Spells/SummonerDarkStarChampSelect2"
            "Shared/Spells/SummonerSiegeChampSelect1"
            "Shared/Spells/SummonerSiegeChampSelect2"
            "Shared/Spells/SummonerReturn"
        }
        mLegacySummonerSpells: list[hash] = {
            "Shared/Spells/SummonerMana"
        }
        mBasicAttackCalculation: pointer = GameCalculation {
            mFormulaParts: list[pointer] = {
                StatByCoefficientCalculationPart {
                    mCoefficient: f32 = 1
                    mStat: u8 = 2
                }
            }
        }
        ItemsRolesPerRow: hash = "Shared/Spells/SpellOriginPerk"
        0xa64802f2: hash = "Shared/Spells/SpellOriginItem"
    }
    0xd5b1a6ea = LoadScreenTipConfiguration {
        mShowPBITipsOnLoadingScreen: bool = true
        mPBITipDurationOnLoadingScreen: f32 = 60
        mDurationInGame: f32 = 25
    }
    0x014bc21d = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet6"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x44598423 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet6"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet6_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x455985b6 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet5"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet5_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x46598749 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet4"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet4_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x475988dc = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet3"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet3_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x48598a6f = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet2"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet2_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x49598c02 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 70
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnKillingSpreeSet1"
            ChatMessageKey: string = "game_announcement_OnKillingSpreeSet1_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x49f4e8a7 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 78
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionTripleKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeTripleKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnChampionTripleKill@src your team | enemy team@"
            AlliedElements: hash = 0x3d9b025d
            EnemyElements: hash = 0x10943d68
        }
    }
    0x4e3c2f8b = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 75
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpree"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x5ac44835 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 82
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionQuadraKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeQuadraKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnChampionQuadraKill@src your team | enemy team@"
            AlliedElements: hash = 0xa4df3401
            EnemyElements: hash = 0x734d7a44
        }
    }
    0x604fe509 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 97
            CanBeMadeObsolete: bool = false
            Style: link = 0xc22feeab
            TextKey: string = "game_announcement_OnChampionPentaKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreePentaKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnChampionPentaKill@src your team | enemy team@"
            AlliedElements: hash = 0xf3c504af
            EnemyElements: hash = 0x2d5401c2
        }
    }
    0xcaa389fa = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 77
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionDoubleKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeDoubleKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnChampionDoubleKill@src your team | enemy team@"
            AlliedElements: hash = 0x725cd3eb
            EnemyElements: hash = 0x90c20576
        }
    }
    0xcf69e361 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0x3c580728
            TextKey: string = "game_announcement_OnKillingSpree"
            ChatMessageKey: string = "game_announcement_OnKillingSpree_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
        }
    }
    0xfa4bb718 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet1"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xfc4bba3e = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet3"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xfd4bbbd1 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet2"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xfe4bbd64 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet5"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xff4bbef7 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnKilledUnitOnKillingSpreeSet4"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x03a789d4 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderAgreed_@src your team | enemy team@"
        }
    }
    0x10050083 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyAccomplice"
        }
    }
    0x1270df94 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeVote"
        }
    }
    0x1f7df93b = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeNotEnoughGold"
        }
    }
    0x25f32792 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeNotEnoughLevels"
        }
    }
    0x2e6b7915 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyOver"
        }
    }
    0x3f9afea9 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyAllowed"
        }
    }
    0x56792667 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnUnanimousSurrenderVoteStart"
        }
    }
    0x6019a1fa = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyFailed_@src your team | enemy team@"
        }
    }
    0x681364e8 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderVoteStart"
        }
    }
    0x68c715d2 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderFailedVotes_@src your team | enemy team@"
        }
    }
    0x6a5b6a90 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderVoteAlready"
        }
    }
    0x6ca4c799 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeSpam"
        }
    }
    0x75fb7d5f = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyFailedNoLongerAvailable"
        }
    }
    0x781a9a31 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeTooEarly"
        }
    }
    0xa69d11a1 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderTooEarly"
        }
    }
    0xa80fa012 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyFailedDisabled"
        }
    }
    0xb8e668c9 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnUnanimousSurrenderFailedVotes_@src your team | enemy team@"
        }
    }
    0xc10e7b69 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderSpam"
        }
    }
    0xc224dfe4 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderVote"
        }
    }
    0xc89d4d02 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeFailedVotes_@src your team | enemy team@"
        }
    }
    0xc920d9a4 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeAgreed_@src your team | enemy team@"
        }
    }
    0xd2cf1078 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeVoteStart"
        }
    }
    0xda9f1581 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnUnanimousAfkSurrenderAllowed"
        }
    }
    0xdac2574f = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyFailedNeverAvailable"
        }
    }
    0xdd47f3e0 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEqualizeVoteAlready"
        }
    }
    0xe7251cfb = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnEarlySurrenderVoteStart"
        }
    }
    0xedb27685 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnNormalAfkSurrenderAllowed"
        }
    }
    0xf5c5368e = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_OnSurrenderEarlyTooEarly"
        }
    }
    0xf8063b67 = 0x78387eb5 {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xfa08bea1
            ChatMessageKey: string = "game_announcement_@ItemID@_@ItemCount@ | game_announcement_@ItemID@ | game_announcement_ItemCallout"
        }
    }
    0x0a5b649d = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 76
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionDoubleKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnChampionDoubleKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x725cd3eb
            EnemyElements: hash = 0x90c20576
        }
    }
    0x0dd87d95 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 100
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xd8f1d3b8
            TextKey: string = "game_announcement_OnMinionsSpawn"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            CommonElements: hash = 0x153e858c
        }
    }
    0x29ca3a72 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 82
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionQuadraKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnChampionQuadraKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0xa4df3401
            EnemyElements: hash = 0x734d7a44
        }
    }
    0x330434a0 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 92
            Style: link = 0xd7e84185
            TextKey: string = "game_announcement_OnQuit"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            CommonElements: hash = 0x49827f66
        }
    }
    0x3b27ccd2 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 76
            CanBeMadeObsolete: bool = false
            Style: link = 0x4bcfd49e
            TextKey: string = "game_announcement_OnAce"
            ChatMessageKey: string = "game_announcement_OnAce_@src your team | enemy team@_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x5586a35c = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 76
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xbbc7a80c
            ChatMessageKey: string = "game_announcement_OnDampenerRespawnSoon_@src your team | enemy team@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
        }
    }
    0x5d7e10e4 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 69
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionKill_@dest champion kill destination@_@src champion kill source@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src you | hero | minion | turret@@dest you | hero | minion | turret@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x6f83473f = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 80
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xbbc7a80c
            TextKey: string = "game_announcement_OnDampenerRespawn_@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x85acccb0 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 97
            CanBeMadeObsolete: bool = false
            Style: link = 0xc22feeab
            TextKey: string = "game_announcement_OnChampionPentaKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnChampionPentaKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0xf3c504af
            EnemyElements: hash = 0x2d5401c2
        }
    }
    0x8769e77d = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 77
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionShutdownAnnouncement"
            ChatMessageKey: string = "game_announcement_OnShutdown"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnKilledUnitOnKillingSpree"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x8fd0f3f2 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 1
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0x95681f19
            TextKey: string = "game_announcement_OnLeave"
            CommonElements: hash = 0x49827f66
        }
    }
    0x94534e2c = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 78
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnChampionTripleKillAnnouncement"
            ChatMessageKey: string = "game_announcement_OnChampionTripleKill"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x3d9b025d
            EnemyElements: hash = 0x10943d68
        }
    }
    0x9f346e5d = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 92
            CanBeMadeObsolete: bool = false
            Style: link = 0xd7e84185
            TextKey: string = "game_announcement_OnFirstBlood"
            ChatMessageKey: string = "game_announcement_OnFirstBlood_chat"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xa47d982c = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 92
            Style: link = 0xd7e84185
            TextKey: string = "game_announcement_OnReconnect"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@"
            CommonElements: hash = 0x49827f66
        }
    }
    0xa804359c = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 97
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnReincarnate_@dest champion kill destination@_@src champion kill source@"
            ChatMessageKey: string = "game_announcement_OnReincarnate_chat"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xbfd0c4c7 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 79
            CanBeMadeObsolete: bool = false
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnTurretFirstBlood_@src your team | enemy team@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_OnTurretDie@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xdf7330be = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 60
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xd8f1d3b8
            TextKey: string = "game_announcement_OnStartMessage4Map@MapNumber@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@Map@MapNumber@"
            CommonElements: hash = 0x153e858c
        }
    }
    0xe0733251 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 60
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xd8f1d3b8
            TextKey: string = "game_announcement_OnStartMessage5Map@MapNumber@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@Map@MapNumber@"
            CommonElements: hash = 0x153e858c
        }
    }
    0xe17333e4 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 60
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xd8f1d3b8
            TextKey: string = "game_announcement_OnStartMessage2Map@MapNumber@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@Map@MapNumber@"
            CommonElements: hash = 0x153e858c
        }
    }
    0xe2733577 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 60
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xd8f1d3b8
            TextKey: string = "game_announcement_OnStartMessage3Map@MapNumber@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@Map@MapNumber@"
            CommonElements: hash = 0x153e858c
        }
    }
    0xe36681db = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 99
            Style: link = 0xfa08bea1
            TextKey: string = "@MapTimeText@"
        }
    }
    0xf15ac5d1 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 81
            CanBeMadeObsolete: bool = false
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xbbc7a80c
            TextKey: string = "game_announcement_OnDampenerDie_@src your team | enemy team@@destkeytr name@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0xf1d0d1d5 = AnnouncementDefinition {
        DefaultData: embed = AnnouncementDefinitionData {
            priority: u16 = 78
            MakeLowerPriorityEventsObsolete: bool = false
            Style: link = 0xabb9fecc
            TextKey: string = "game_announcement_OnTurretDie_@src your team | enemy team@@destkeytr name@"
            SoundKey: string = "Play_vo_Announcer_Global_@voice@_@event name@@src your team | enemy team@"
            AlliedElements: hash = 0x153e858c
            EnemyElements: hash = 0xad224d11
        }
    }
    0x3c580728 = AnnouncementStyleBasic {
        TextField: hash = 0x01de91b9
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.200000003
        }
    }
    0x4bcfd49e = 0x48c9ff38 {
        SourceIcon: link = 0xe96ce6c0
        TextField: hash = 0xf1cb696f
        0x3f43172e: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.25
        }
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.25
        }
    }
    0x95681f19 = 0x48c9ff38 {
        SourceIcon: link = 0xe96ce6c0
        TextField: hash = 0x01de91b9
    }
    0xabb9fecc = 0xaa95a271 {
        LeftIcon: link = 0xb6a4c022
        RightIcon: link = 0x421a3e0f
        TextField: hash = 0x234db555
    }
    0xbbc7a80c = AnnouncementStyleBasic {
        TextField: hash = 0xe87cbb6d
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.200000003
        }
    }
    0xc22feeab = 0x48c9ff38 {
        SourceIcon: link = 0xe96ce6c0
        TextField: hash = 0x114524a8
        0x3f43172e: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.25
        }
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.25
        }
    }
    0xd7e84185 = 0x48c9ff38 {
        SourceIcon: link = 0xe96ce6c0
        TextField: hash = 0x234db555
    }
    0xd8f1d3b8 = AnnouncementStyleBasic {
        TextField: hash = 0x234db555
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.200000003
        }
    }
    0xfa08bea1 = AnnouncementStyleBasic {
        TextField: hash = 0xf66bdb59
        0x3f43172e: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.200000003
        }
        0xcc99a2db: embed = HudMenuTransitionData {
            transitionTime: f32 = 0.200000003
        }
    }
    0x421a3e0f = announcementIcon {
        0x108e8710: hash = 0x8d6e341c
        0xc2e2a2df: hash = 0x7a2f005b
        0x3e37c63b: hash = 0x2feeafc3
        AlliedElementGroup: hash = 0x6353bd9a
        EnemyElementGroup: hash = 0x880ea251
        0xdd749512: hash = 0xebe89c74
        0xde7496a5: hash = 0x264217e3
        0xdb7491ec: hash = 0xbaccfeb2
        0xdc74937f: hash = 0x11d63e01
    }
    0xb6a4c022 = announcementIcon {
        0x108e8710: hash = 0xc65ee18d
        0xc2e2a2df: hash = 0xc29b7839
        0x3e37c63b: hash = 0x57e3fab9
        AlliedElementGroup: hash = 0xc7765200
        EnemyElementGroup: hash = 0x16982eaf
        0xdd749512: hash = 0x5e28c680
        0xde7496a5: hash = 0x788a535d
        0xdb7491ec: hash = 0x9e79399a
        0xdc74937f: hash = 0xe08ae097
    }
    0xe96ce6c0 = announcementIcon {
        0x108e8710: hash = 0x33eff877
        0xc2e2a2df: hash = 0x31c780d7
        0x3e37c63b: hash = 0x521cf067
        AlliedElementGroup: hash = 0x2ebba4c0
        EnemyElementGroup: hash = 0xedf7206f
        0xdd749512: hash = 0x88af90a2
        0xde7496a5: hash = 0xba5ba885
        0xdb7491ec: hash = 0x02107614
        0xdc74937f: hash = 0x49dc1677
    }
    0x76b22690 = GameMutatorExpansions {
        mExpandedMutator: string = "Event_Bilgewater"
    }
    0x5a7e4017 = GlobalStatsUIData {
        mStatUIData: map[u8,embed] = {
            0 = StatUIData {
                mName: string = "AbilityPower"
                mAbbreviation: string = "AP"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleAP%"
                mScalingTagKey: string = "scaleAP"
            }
            1 = StatUIData {
                mName: string = "Armor"
                mAbbreviation: string = "Armor"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleArmor%"
                mScalingTagKey: string = "scaleArmor"
            }
            2 = StatUIData {
                mName: string = "Attack"
                mAbbreviation: string = "AD"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleAD%"
                mScalingTagKey: string = "scaleAD"
            }
            3 = StatUIData {
                mName: string = "AttackSpeed"
                mAbbreviation: string = "AS"
                mIconKey: string = "%i:scaleAS%"
                mScalingTagKey: string = "scaleAS"
            }
            5 = StatUIData {
                mName: string = "MagicResist"
                mAbbreviation: string = "MR"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleMR%"
                mScalingTagKey: string = "scaleMR"
            }
            6 = StatUIData {
                mName: string = "MovementSpeed"
                mAbbreviation: string = "MS"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleMS%"
                mScalingTagKey: string = "scaleMS"
            }
            7 = StatUIData {
                mName: string = "CriticalStrike"
                mAbbreviation: string = "Crit"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleCrit%"
                mScalingTagKey: string = "scaleCrit"
            }
            9 = StatUIData {
                mName: string = "CooldownReduction"
                mAbbreviation: string = "CDR"
                mIconKey: string = "%i:scaleCDR%"
            }
            11 = StatUIData {
                mName: string = "Health"
                mAbbreviation: string = "HP"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleHealth%"
                mScalingTagKey: string = "scaleHealth"
            }
            15 = StatUIData {
                mName: string = "LifeSteal"
                mAbbreviation: string = "LS"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleLS%"
                mScalingTagKey: string = "scaleLS"
            }
            16 = StatUIData {
                mName: string = "SpellVamp"
                mAbbreviation: string = "SV"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleSV%"
                mScalingTagKey: string = "scaleSV"
            }
            19 = StatUIData {
                mName: string = "MagicPen"
                mAbbreviation: string = "MPen"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleMPen%"
                mScalingTagKey: string = "scaleMPen"
            }
            20 = StatUIData {
                mName: string = "MagicPercentPen"
                mAbbreviation: string = "MPPen"
                mDisplayType: u8 = 4
                mIconKey: string = "%i:scaleMPPen%"
            }
            21 = StatUIData {
                mName: string = "MagicBonusPercentPen"
                mAbbreviation: string = "MBPPen"
                mDisplayType: u8 = 4
                mIconKey: string = "%i:scaleMBPen%"
            }
            22 = StatUIData {
                mName: string = "MagicLethality"
                mAbbreviation: string = "MLethal"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleMPen%"
                mScalingTagKey: string = "scaleLethality"
            }
            23 = StatUIData {
                mName: string = "ArmorPen"
                mAbbreviation: string = "APen"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleAPen%"
            }
            24 = StatUIData {
                mName: string = "ArmorPercentPen"
                mAbbreviation: string = "APPen"
                mDisplayType: u8 = 4
                mIconKey: string = "%i:scaleAPPen%"
            }
            25 = StatUIData {
                mName: string = "ArmorBonusPercentPen"
                mAbbreviation: string = "ABPPen"
                mDisplayType: u8 = 4
                mIconKey: string = "%i:scaleABPPen%"
            }
            26 = StatUIData {
                mName: string = "PhysicalLethality"
                mAbbreviation: string = "PLethal"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleAPen%"
                mScalingTagKey: string = "scaleLethality"
            }
            27 = StatUIData {
                mName: string = "Tenacity"
                mAbbreviation: string = "Ten"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleTen%"
            }
            28 = StatUIData {
                mName: string = "AttackRange"
                mAbbreviation: string = "AR"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleRange%"
                mScalingTagKey: string = "scaleRange"
            }
            29 = StatUIData {
                mName: string = "HealthRegen"
                mAbbreviation: string = "HPR"
                mDisplayType: u8 = 5
                mIconKey: string = "%i:scaleHPR%"
            }
            30 = StatUIData {
                mName: string = "ParRegen"
                mAbbreviation: string = "PARR"
                mDisplayType: u8 = 5
                mIconKey: string = "%i:scalePARR%"
            }
            8 = StatUIData {
                mName: string = "CriticalStrikeDamageMultiplier"
                mAbbreviation: string = "CritMult"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleCritMult%"
                mScalingTagKey: string = "scaleCritMult"
            }
            14 = StatUIData {
                mName: string = "Dodge Chance"
                mAbbreviation: string = "DGE"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleDodge%"
                mScalingTagKey: string = "scaleDodge"
            }
            10 = StatUIData {
                mName: string = "AbilityHaste"
                mAbbreviation: string = "AH"
                mDisplayType: u8 = 1
                mIconKey: string = "%i:scaleAH%"
                mScalingTagKey: string = "scaleAH"
            }
            17 = StatUIData {
                mName: string = "Omnivamp"
                mAbbreviation: string = "OV"
                mDisplayType: u8 = 2
                mIconKey: string = "%i:scaleSV%"
                mScalingTagKey: string = "scaleSV"
            }
        }
        BaseOutputIconModifier: string = "Tooltip_StatsUIData_BaseIconModifier"
        BonusOutputIconModifier: string = "Tooltip_StatsUIData_BonusIconModifier"
        mNumberStyle: string = "Tooltip_StatsUIData_NumberStyle"
        mNumberStylePercent: string = "Tooltip_StatsUIData_NumberStylePercent"
        mNumberStyleBonus: string = "Tooltip_StatsUIData_NumberStyleBonus"
        mNumberStyleBonusPercent: string = "Tooltip_StatsUIData_NumberStyleBonusPercent"
        FormulaPartStyleBonus: string = "Tooltip_StatsUIData_FormulaPartStyleBonus"
        FormulaPartStyleBonusPercent: string = "Tooltip_StatsUIData_FormulaPartStyleBonusPercent"
        FormulaPartStyle: string = "Tooltip_StatsUIData_FormulaPartStyle"
        FormulaPartStylePercent: string = "Tooltip_StatsUIData_FormulaPartStylePercent"
        FormulaPartRangeStyleBonus: string = "Tooltip_StatsUIData_FormulaPartRangeStyleBonus"
        FormulaPartRangeStyleBonusPercent: string = "Tooltip_StatsUIData_FormulaPartRangeStyleBonusPercent"
        FormulaPartRangeStyle: string = "Tooltip_StatsUIData_FormulaPartRangeStyle"
        FormulaPartRangeStylePercent: string = "Tooltip_StatsUIData_FormulaPartRangeStylePercent"
        mNumberStyleTotalAndCoefficient: string = "Tooltip_StatsUIData_NumberStyleTotalAndCoefficient"
        mNumberStyleTotalAndCoefficientPercent: string = "Tooltip_StatsUIData_NumberStyleTotalAndCoefficientPercent"
        NumberStyleTotalAndScalingIcons: string = "Tooltip_StatsUIData_NumberStyleTotalAndScalingIcons"
        NumberStyleTotalAndFormula: string = "Tooltip_StatsUIData_NumberStyleTotalAndFormula"
        mManaIconKey: string = "%i:scaleMana%"
        mManaScalingTagKey: string = "scaleMana"
        0x2fa6c4b0: string = "scaleLevel"
        0x4ac09eef: string = "%i:scaleLevel%"
        0xf04c21cd: u8 = 6
        0xa844caca: u8 = 4
    }
}
